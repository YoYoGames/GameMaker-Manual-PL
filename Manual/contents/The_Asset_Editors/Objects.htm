<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Obiekty</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the object editor works" />
  <meta name="rh-index-keywords" content="Object Editor" />
  <meta name="search-keywords" content="objects,object editor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Redaktor <span class="notranslate">Object</span> </h1>
  <p><img>Obiekty to zasoby, których używamy do kontrolowania aspektów gry i robienia konkretnych rzeczy. Przez większość czasu mają one <span class="notranslate">sprite</span> związane z nimi tak, że widzisz je w grze <span class="notranslate">rooms</span>, ale czasami są one używane jako kontroler &quot;za kulisami&quot; do robienia rzeczy związanych z użytkownikiem lub do pomiaru czasu, itp. Można im nadać zachowania i mogą reagować na pewne zdarzenia, jak również na siebie nawzajem, a większość rzeczy, które widzisz w grze, opiera się na <span class="notranslate">objects</span> i ich interakcjach. Mówimy &quot;oparte na&quot;, ponieważ nie umieszczasz <span class="notranslate">objects</span> bezpośrednio w grze <span class="notranslate">rooms</span>, ale raczej umieszczasz <strong>instancje</strong> tych <span class="notranslate">objects</span>, które są w zasadzie kopiami (lub klonami, jeśli wolisz) zasobu <span class="notranslate">object</span>. Jest to bardzo ważna rzecz do zapamiętania, ponieważ instancje i <span class="notranslate">objects</span> <em>nie są tą samą rzeczą</em> i każda z nich ma swój własny zestaw funkcji, które mogą na nie wpływać.</p>
  <p>Aby to wyjaśnić, pomyśl o grze zrobionej za pomocą <span data-keyref="GameMaker Name">GameMakera</span>. Wszystkie postacie, potwory, piłki, ściany, itd... to wszystko <span class="notranslate">objects</span>, które tworzysz w <a href="../Introduction/The_Asset_Browser.htm">Asset Browser</a>. Następnie przeciągasz <em>obiekt </em>do <span class="notranslate">room</span> w <a href="Rooms.htm">Room Editor</a>, aby stworzyć <em>instancję </em>skopiowaną z podstawowego szablonu <span class="notranslate">object</span>. Instancja w <span class="notranslate">room</span> może być następnie zmieniana w samym edytorze lub poprzez kod, tak że może być skalowana, kolorowana lub mieć inne szczegóły zmienione w stosunku do &quot;bazowej&quot; <span class="notranslate">object</span>. Kiedy więc mówimy o tym, że coś wpływa lub zmienia <strong>instancję</strong>, mamy na myśli, że wpływa to na tę <em>jedną konkretną kopię <span class="notranslate">object</span> w pokoju</em>. Tylko ta jedna instancja jest dotknięta, podczas gdy cała reszta nie jest. Natomiast gdy mówimy o wpływaniu na <strong>obiekt</strong> lub jego zmianie, mamy na myśli, że modyfikujemy <span class="notranslate">object</span> w przeglądarce <span class="notranslate">Asset</span> i wszystko, co z nim zrobimy, będzie odzwierciedlone we wszystkich instancjach tworzonych od tego momentu. Tak więc, <span class="notranslate">object</span> jest szablonem dla instancji, a instancja jest tym, co umieszczamy w <span class="notranslate">room</span>, aby stworzyć naszą grę.</p>
  <p>Aby utworzyć w swojej grze stronę <span class="notranslate">object</span>, możesz kliknąć prawym przyciskiem myszy <img> na stronie <span class="notranslate">Asset</span> Browser i kliknąć opcję <em>Create Object</em>. Spowoduje to otwarcie okna przedstawionego na górze tej strony z następującymi sekcjami:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Szczegóły</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Tutaj możesz nadać swojej stronie <span class="notranslate">object</span> nazwę. Nazwa ta nie powinna zawierać spacji ani niedozwolonych znaków (dozwolone są tylko znaki alfanumeryczne i znak pod kreską &quot;_&quot;) i powinna być krótka, ale zapadająca w pamięć, abyś mógł łatwo zidentyfikować zasoby
      później, gdy będziesz miał ich wiele. Na przykład wiele osób używa przedrostka lub przyrostka, aby określić różnice między zasobami, jak &quot;<span class="inline">obj_Ship</span>&quot; lub &quot;<span class="inline">Ship_obj</span>&quot;.</p>
    <p class="dropspot">Następnie możesz wybrać <span class="notranslate">sprite</span> dla <span class="notranslate">object</span>, jeśli chcesz, aby takowy posiadał. Kliknij lewym przyciskiem myszy <img> na pole <span class="notranslate">sprite</span>, a pojawi się <strong>Asset Explorer</strong> z listą wszystkich dostępnych <span class="notranslate">sprites</span> z <span class="notranslate">Asset</span> Browser:</p>
    <p class="dropspot"><img>Następnie możesz wybrać ten, którego chcesz użyć dla <span class="notranslate">object</span>. Mając <span class="notranslate">sprite</span> przypisany do <span class="notranslate">object</span> możesz kliknąć przycisk <em>Edit Sprite</em> <img>, aby zmienić <a href="Sprites.htm">właściwości sprite</a>'a, lub - jeśli nie masz <span class="notranslate">sprite</span> dla <span class="notranslate">object</span>, ale chcesz go utworzyć - możesz kliknąć przycisk
      przycisk <em>Add Sp</em> rite <img>, aby utworzyć nowy <span class="notranslate">sprite</span> <span class="notranslate">asset</span> i przypisać go. Możesz również edytować obrazek <span class="notranslate">sprite</span> <span class="notranslate">asset</span>, który został
      przypisany, klikając przycisk <em>Edit</em> Image <img>, aby otworzyć <a href="Image_Editor.htm">edytor</a> obrazów.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Maska kolizyjna</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Pod obszarem przypisania <span class="notranslate">sprite</span> znajduje się przycisk umożliwiający wybór konkretnej <strong>maski</strong> kolizji. Domyślnie <span class="notranslate">object</span> będzie generować właściwości kolizji na podstawie przypisanej do niej <span class="notranslate">sprite</span>, ale są przypadki, w których możesz chcieć, aby
      aby kolizje były oparte na innym kształcie z innej strony <span class="notranslate">sprite</span>. Na przykład w grze typu top down główna strona <span class="notranslate">sprite</span> ma prostokątną maskę kolizji, ale aby kolizje były bardziej płynne, lepsza będzie maska okrągła. W takich przypadkach
      możesz kliknąć przycisk Collision Mask i wybrać inny zasób <span class="notranslate">sprite</span>, więc teraz instancje <span class="notranslate">object</span> będą <em>rysować </em>przypisany <span class="notranslate">sprite</span>, ale bazować <em>kolizje </em>z maski <span class="notranslate">sprite</span>. Więcej informacji o maskach kolizji można znaleźć na stronie
      maskach znajdziesz na stronie poświęconej <a href="Sprites.htm">edytorowi sprajtów</a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Właściwości</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Tutaj prezentowane są następujące opcje dla Twojego obiektu:<strong></strong></p>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Visible</strong>: Visible wskazuje, czy instancje tego <span class="notranslate">object</span> są widoczne, gdy uruchamia się <span class="notranslate">room</span>. Zazwyczaj większość instancji jest widoczna, ale czasami warto mieć niewidoczne - na przykład można je wykorzystać jako punkty orientacyjne do sterowania poruszającym się potworem lub do śledzenia wartości i wykonywania określonych akcji w czasie. Niewidoczna <span class="notranslate">objects</span> nadal będzie reagować na zdarzenia, a jeśli ma przypisaną <span class="notranslate">sprite</span> lub maskę, będzie również reagować, jeśli inne instancje zderzą się z nią... po prostu nie będzie ich widać i <em>nie </em>wykonają swojego zdarzenia <strong>rysowania</strong>. Domyślnie, widoczna <span class="notranslate">flag</span> jest zaznaczona.<strong></strong></li>
      <li class="dropspot"><strong>Solid</strong>: Kiedy <span class="notranslate">flag</span> instancja jest solidna, mówisz <span data-keyref="GameMaker Name">GameMakerowi</span>, że powinien spróbować rozwiązać wszelkie kolizje przed wywołaniem <strong>zdarzenia</strong> kolizji. Jest to bardzo podstawowa funkcjonalność i w rzeczywistości wszystko co robi to cofnięcie instancji do pozycji, w której znajdowała się w momencie przed wykryciem kolizji przed wykonaniem jakiegokolwiek kodu lub <span class="notranslate">GML</span> Visual, który jest w samym zdarzeniu kolizji, i jako taki ma ograniczone zastosowanie.</li>
      <li class="dropspot"><strong>Trwały</strong>: Trwały <span class="notranslate">object</span> to taki, który nie znika, gdy <span class="notranslate">room</span> jest zmieniany, ale raczej &quot;trwa&quot; i jest przenoszony do nowego <span class="notranslate">room</span>. Zniknie tylko wtedy, gdy wyraźnie go zniszczysz, albo za pomocą akcji destroy, albo w kodzie. Oznacza to, że jeśli umieścisz stałą stronę <span class="notranslate">object</span> w jednym miejscu <span class="notranslate">room</span>, będzie ona nadal dostępna we wszystkich kolejnych <span class="notranslate">rooms</span> i będzie kontynuować wykonywanie wszystkich akcji przypisanych do zdarzeń we właściwościach <span class="notranslate">object</span>, z <em>wyjątkiem </em>zdarzenia <strong>Create</strong>, które jest uruchamiane tylko <em>raz </em>, gdy jest tworzone na początku, a nie gdy zmieniasz stronę na nową <span class="notranslate">room</span>. Jest to przydatne, gdy masz na przykład głównego bohatera, który przenosi się z <span class="notranslate">room</span> na <span class="notranslate">room</span> i chcesz zachować zmienne w obrębie instancji w niezmienionej postaci, ale powinieneś bardzo uważać, aby poprawnie tworzyć i niszczyć trwałe <span class="notranslate">objects</span>, ponieważ możesz łatwo uzyskać błędy wkradające się do projektu przez pomyłkę.</li>
    </ul>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#" style="margin-left:88px">Warstwy Persistence i <span class="notranslate">Room</span> </a>  </p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot" style="margin-left: 132px">Gdy utworzysz instancję z włączoną persystencją w <span class="notranslate">room</span>, zostanie jej przypisana warstwa lub głębokość (w zależności od tego, jakiej funkcji użyłeś do utworzenia instancji <span class="notranslate">object</span>). Kiedy <span class="notranslate">room</span> jest zmieniana i jeśli następująca po niej <span class="notranslate">room</span> nie ma warstwy o takiej samej nazwie lub głębokości jak ta przypisana, to<strong> dla instancji, która jest persystentna w całym pomieszczeniu, zostanie utworzona nowa</strong> warstwa. Jeśli nadałeś nazwę warstwie podczas tworzenia instancji, to nowa warstwa również będzie miała taką samą nazwę jak oryginalna warstwa, natomiast jeśli przypisałeś głębokość do instancji, to nowa warstwa będzie miała nazwę &quot;<span class="inline">_layer_XXX</span>&quot;, gdzie &quot;<span class="inline">XXX</span>&quot; jest wartością heksadecymalną używaną do nadania warstwie unikalnej nazwy. Te warstwy zostaną usunięte z <span class="notranslate">room</span> na <strong>końcu pokoju</strong>.<br>
        <br>
        Kolejną rzeczą, którą należy zauważyć w odniesieniu do warstw i trwałych instancji jest to, że jeśli przypisałeś instancję do nazwanej warstwy podczas tworzenia, a w następnej <span class="notranslate">rooms</span> jest inna warstwa o tej samej nazwie, to trwała instancja zostanie przypisana do warstwy o tej samej nazwie, niezależnie od głębokości warstwy.<br>
        <br>
        Wreszcie, jeśli instancja uporczywa zostanie przeniesiona na stronę <span class="notranslate">room</span> z warstwą na <em>tej samej</em> głębokości, na której została utworzona, <em>nie </em>zostanie przypisana do tej warstwy, ale zamiast tego zostanie utworzona nowa warstwa na tej samej głębokości (zgodnie z konwencją nazewnictwa wyjaśnioną powyżej).
      </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#" style="margin-left: 88px">Trwałość i zdarzenia</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot" style="margin-left: 132px">Jak wspomniano wcześniej, trwały <span class="notranslate">object</span> uruchomi swoje zdarzenie <strong>Create Event</strong> tylko <em>raz</em>, ale również będzie miał swoje zdarzenia <strong>Game Start</strong>, <strong>Game End</strong>, <strong>Room Start</strong> i <strong>Room End</strong> w odpowiednim czasie. Jeśli jednak zrestartujesz grę (np. za pomocą funkcji <span class="inline">game_restart()</span> ), <em>wszystkie trwałe <span class="notranslate">objects</span> zostaną usunięte i będą istnieć tylko wtedy, gdy zostaną ponownie utworzone przez grę</em>.<br>
        <br>
        Zauważ również, że jeśli <strong>dezaktywujesz </strong>trwałą <span class="notranslate">object</span>, nie będzie ona już przechodzić z jednej <span class="notranslate">room</span> do drugiej, chyba że zostanie ponownie aktywowana przed wyzwoleniem zdarzenia <strong>Room End</strong>. Ponowna aktywacja <em>wymaga pełnego kroku gry</em>, więc użycie zdarzenia zakończenia <strong>pokoju</strong> nie działa, ponieważ nie daje grze pełnego kroku na ponowną aktywację <span class="notranslate">object</span>, więc musisz o tym pamiętać, gdy używasz dezaktywacji wraz z trwałą <span class="notranslate">objects</span> i odpowiednio zaplanować swój kod.
      </p>
    </div>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Uses Physics</strong>: Kiedy zaznaczasz pole Uses Physics, mówisz <span data-keyref="GameMaker Name">GameMakerowi</span>, że ten <span class="notranslate">object</span> powinien być częścią świata fizyki (jak ustawiono w <strong></strong><a href="Rooms.htm">Room Editor</a>. Zaznaczenie tego pola otworzy również kolejne okno łańcuchowe, w którym możesz zdefiniować właściwości fizyczne wszystkich instancji tego <span class="notranslate">object</span>. Więcej informacji na ten temat można znaleźć w rozdziale dotyczącym <a href="Object_Properties/Physics_Objects.htm">obiektów fizyki</a>.</li>
      <li class="dropspot"><strong>Zarządzany</strong>: Czy ten <span class="notranslate">object</span> powinien być zarządzany podczas używania <a href="../GameMaker_Language/GML_Reference/Rollback/Rollback_Multiplayer.htm">Rollback Multiplayer.</a> Stan zarządzanego obiektu może być <i>cofnięty</i> i mogą być na nim uruchamiane predykcje. Zobacz <a data-xref="{text}" href="../GameMaker_Language/GML_Reference/Rollback/Rollback_System.htm#h2">Obiekty Zarządz</a>ane.</li>
    </ul>
  </div>
  <p> </p>
  <p>Ostatnia część edytora <span class="notranslate">Object</span> jest poświęcona różnym <strong>opcjom</strong> obiektów, z których każda jest omówiona na swojej stronie, podlinkowanej poniżej:</p>
  <ul class="colour">
    <li><a href="Object_Properties/Object_Events.htm">Zdarzenia dotyczące obiektów</a></li>
    <li><a href="Object_Properties/Parent_Objects.htm">Obiekty macierzyste</a></li>
    <li><a href="Object_Properties/Physics_Objects.htm">Obiekty fizyczne</a></li>
    <li><a href="Object_Properties/Object_Variables.htm">Zmienne obiektowe</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="The_Asset_Editors.htm">Redakcja "Aktywów</a></div>
        <div style="float:right">Dalej: <a href="Paths.htm">Ścieżki</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone</span></h5>
  </div>
  <!-- KEYWORDS
Object Editor
Objects
-->
  <!-- TAGS
object_editor
-->
</body>
</html>