<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Odtwarzanie dźwięku</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Playback async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Playback Event" />
  <meta name="search-keywords" content="Audio Playback,ev_audio_playback" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Odtwarzanie dźwięku</h1>
  <p><img>To zdarzenie może być wywołane tylko przez funkcje odtwarzania <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm">kolejki audio</a> i zwróci <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">mapę DS Map</a> przechowywaną w zmiennej <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"> <span class="inline">async_load</span></a>,
    zawierającą różne pary klucz/wartość odnoszące się do pliku audio <span class="notranslate">queue</span>, który wywołał zdarzenie. Zdarzenie jest wyzwalane przez <a class="glossterm" data-glossterm="callback" href="#">wywołanie zwrotne</a> po wybraniu pliku audio <span class="notranslate">queue</span> do odtworzenia i zakończeniu odtwarzania pliku audio .
    <span class="notranslate">buffer</span> w tym pliku audio <span class="notranslate">queue</span> zakończy się odtwarzanie.</p>
  <p>Na mapie DS dostępne będą następujące klawisze:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">queue_id</span>&quot; - indeks strony <span class="notranslate">queue</span> dla strony <span class="notranslate">queue</span>, która zakończyła odtwarzanie, zwrócony przez funkcję <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_play_queue.htm"><span class="inline">audio_create_play_queue()</span></a>.</li>
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - identyfikator <span class="notranslate">buffer</span> dla <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">bufora</a>, z którego nie jest już odtwarzany.</li>
    <li class="dropspot">&quot;<span class="inline">queue_shutdown</span>&quot; - wartość ta jest ustawiona na 0 podczas normalnego odtwarzania i na 1, gdy zdarzenie jest odbierane, ponieważ <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_play_queue.htm"><span class="inline">audio_free_play_queue()</span></a> ma
      zostało wywołane. Gdy wartość ta jest ustawiona na 1, oznacza to, że nie chcesz <span class="notranslate">queue</span> żadnych dalszych danych.</li>
  </ul>
  <p>Ponieważ stronę audio <span class="notranslate">queue</span> można utworzyć z wielu stron <span class="notranslate">buffers</span>, zdarzenie to może być wyzwalane wielokrotnie dla jednej strony <span class="notranslate">queue</span> po osiągnięciu końca każdej sekcji buforowanego dźwięku, stąd klucz &quot;buffer_id&quot;.</p>
  <p class="note"><strong>UWAGA</strong>: Zmienna <span class="inline" style="font-size: 14px">async_load</span> jest ważna tylko w zdarzeniach asynchronicznych, ponieważ mapa DS, na którą wskazuje, jest tworzona na początku zdarzenia, a następnie ponownie usuwana na końcu, przy czym ta
    Jednak wszystkie kolejne struktury danych utworzone na podstawie zdarzenia muszą zostać wyczyszczone za pomocą odpowiednich funkcji.</p>
  <p>W podanym poniżej przykładzie użycia utworzymy stronę audio <span class="notranslate">queue</span> z 10 buforowanymi dźwiękami, a następnie odtworzymy kolejkę:</p>
  <p class="code">audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);<br/> for (var i = 0; i &lt; 10; i++;)<br/>    {<br/>    audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));<br/>    }<br/> audio_play_sound(audio_queue,
    0, true);</p>
  <p>W każdym kroku gry, w którym wykryto nagrywanie, zostanie uruchomione zdarzenie asynchronicznego nagrywania dźwięku, w którym można zająć się nagranym sygnałem wejściowym w następujący sposób:</p>
  <p class="code">var queue = async_load[? &quot;queue_id&quot;];<br/> var num = 0;<br/> if queue = audio_queue<br/>    {<br/>    for (var i = 0; i &lt; 10; i++;)<br/>       {<br/>       if async_load[? &quot;buffer_id&quot;] == audio_buffer[i]<br/>          {<br/>  buffer_seek(audio_buffer[i],
    buffer_seek_start, 0);<br/>          num = i;<br/>          }<br/>       }<br/>    if num == 9<br/>       {<br/>       audio_stop_sound(audio_queue);<br/>       audio_free_play_queue(audio_queue);<br/>       }<br/>  }
  </p>
  <p>W tym przypadku sprawdzamy identyfikator <span class="notranslate">queue</span> i jeśli jest to ten, którego szukamy, sprawdzamy identyfikator <span class="notranslate">buffer</span>, aby sprawdzić, która strona <span class="notranslate">buffer</span> zakończyła odtwarzanie. Następnie ustawiamy zmienną lokalną na tę wartość indeksu, aby móc ją później sprawdzić, i ustawiamy <span class="notranslate">buffer</span> z powrotem na początek odtwarzania tego
    dźwięku. Gdy zmienna lokalna osiągnie wartość 9, co oznacza, że odtwarzanie <span class="notranslate">queue</span> się zakończyło, zatrzymujemy odtwarzanie dźwięku i zwalniamy <span class="notranslate">queue</span>.</p>
  <p> </p>
  <div class="droptext" data-targetname="drop-down"> </div>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Async_Events.htm">Zdarzenia asynchroniczne</a></div>
        <div style="float:right">Następny: <a href="Audio_Recording.htm">Nagrywanie dźwięku</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Playback Event
ev_audio_playback
Audio Playback
-->
  <!-- TAGS
ev_audio_playback
-->

</body></html>