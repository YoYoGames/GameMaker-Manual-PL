<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Tworzenie rozszerzenia</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how to create a generic extension" />
  <meta name="rh-index-keywords" content="Extensions - Creating An Extension" />
  <meta name="search-keywords" content="creating extensions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Tworzenie rozszerzenia</h1>
  <p>Aby utworzyć <span class="notranslate">extension</span>, musisz najpierw kliknąć prawym przyciskiem myszy na <img> w dowolnym miejscu <a href="../../Introduction/The_Asset_Browser.htm">przeglądarki aktywów</a> i wybrać <strong>Create -&gt; Extension</strong>. Spowoduje to otwarcie właściwości <span class="notranslate">Extension</span> dla nowo utworzonej strony <span class="notranslate">asset</span> w obszarze roboczym:</p>
  <p><img>Jeśli tego nie widzisz, możesz dwukrotnie kliknąć na swoją stronę <span class="notranslate">Extension</span> <span class="notranslate">asset</span> w <span class="notranslate">Asset</span> Browser, aby otworzyć jej okno właściwości lub skupić się na niej, gdy jest już otwarta.</p>
  <p>Teraz możesz dodać wymagane pliki i funkcje, a także nadać <span class="notranslate">extension</span> nazwę (zgodnie ze zwyczajową konwencją tylko litery/liczby i żadnych symboli specjalnych z wyjątkiem podkreślenia &quot;_&quot;). Możesz również ustawić numer wersji dla <span class="notranslate">extension</span>, jeśli chcesz.</p>
  <p>W sekcji &quot;Copies To&quot; możesz wybrać platformy, na które ma być eksportowany ten <span class="notranslate">extension</span>. W przypadku prostej <span class="notranslate">GML</span> <span class="notranslate">extension</span> nie musisz się o to martwić, ponieważ będzie ona działać na wszystkich platformach, jednak jeśli tworzysz specyficzną dla danej platformy <span class="notranslate">extension</span> (np. dla <span class="notranslate">Android</span>), musisz się upewnić, że <em>nie</em> będzie ona eksportowana na żadne niekompatybilne platformy (takie jak <span class="notranslate">iOS</span>, konsole itp.).</p>
  <h2>Pliki zastępcze</h2>
  <p>Aby dodać plik do nowej strony <span class="notranslate">extension</span> należy kliknąć ikonę menu <img> i wybrać plik zastępczy (&quot;Add Placeholder&quot;) lub zaimportować rzeczywisty plik, który jest wymagany dla platformy docelowej (&quot;Add File&quot;):</p>
  <p class="dropspot"><img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" /></p>
  <p>&quot;Ogólny&quot; placeholder to plik, który może być dowolnego typu, z wyjątkiem tych, które są wymagane przez konkretne platformy (więc nie ma plików <span class="inline">DLL</span> lub <span class="inline">SO </span>, na przykład), i nie będzie używany z wyjątkiem pliku &quot;linkera&quot;, aby połączyć zestaw funkcji lub stałych z danym <span class="notranslate">extension</span> (ogólnie jest to tylko do użytku z <span class="notranslate">iOS</span> i <span class="notranslate">Android</span> <span class="notranslate">extensions</span>, co jest wyjaśnione w sekcjach poniżej dla tych celów). Możesz także dodać pliki zastępcze &quot;GML&quot; i &quot;JS&quot; dla bardziej specyficznego użycia.</p>
  <h2>Dodawanie plików</h2>
  <p>Normalnie nie będziesz musiał używać zmiennych, chyba że budujesz dla <span class="notranslate">iOS</span> i <span class="notranslate">Android</span>, więc wybierzesz opcję &quot;Dodaj plik&quot;, aby dodać jeden z następujących plików w zależności od platformy docelowej, dla której są przeznaczone:</p>
  <ul class="colour">
    <li class="dropspot"><span class="inline">.gml</span>: Jest to plik wykonany tylko z <span class="notranslate">GameMaker Language</span> i jest kompatybilny ze wszystkimi platformami.</li>
    <li class="dropspot"><span class="inline">.js</span>: Jest to format JavaScript <span class="notranslate">extension</span> i jest kompatybilny tylko z celem HTML5.</li>
    <li class="dropspot"><span class="inline">.dll</span>: Jest to format biblioteki dynamicznego linku <span class="notranslate">extension</span> i jest kompatybilny tylko z celami <span class="notranslate">Windows</span>, UWP i Xbox (każdy cel będzie potrzebował innego pliku <span class="inline">*.dll</span> zgodnego z jego specyfikacją).</li>
    <li class="dropspot"><span class="inline">.dylib</span>: Jest to Macowy odpowiednik DLL i jest kompatybilny tylko z Macowym celem (nie <span class="notranslate">iOS</span>).</li>
    <li class="dropspot"><span class="inline">.so</span>: To jest <span class="notranslate">Linux</span> odpowiednik DLL i jest kompatybilny tylko z celem <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>).</li>
    <li class="dropspot"><span class="inline">.prx</span>: Jest to format pliku umożliwiający dodanie funkcjonalności do celu PlayStation (każdy cel będzie potrzebował innego pliku <span class="inline">*.prx</span> zgodnego z jego specyfikacją).</li>
  </ul>
  <p>Zauważysz, że nie ma typu pliku dla <strong>Androida </strong>lub <strong>iOS</strong>, co wynika z tego, że ich konfiguracja jest nieco inna. W dalszej części artykułu znajdziesz wyjaśnienia, jak je skonfigurować, ale najpierw przyjrzyjmy się tworzeniu ogólnego <span class="notranslate">GML</span> <span class="notranslate">extension</span> dla każdej z platform docelowych, ponieważ proces jest taki sam dla wszystkich z nich.</p>
  <h2>Tworzenie rozszerzenia <span class="notranslate">GML</span> </h2>
  <p>Na początek musisz stworzyć plik, który będzie używany. W przypadku <span class="notranslate">GML</span> <span class="notranslate">extension</span>, byłby to plik tekstowy (zapisany za pomocą <span class="inline">.gml</span> <span class="notranslate">extension</span>) i byłby sformatowany coś takiego:</p>
  <p class="code">#define c_alice_blue<br />
    return make_color_rgb(240,248,255);<br />
    <br />
    <br />
    #define instance_create_colour<br />
    var i = instance_create_layer(argument0, argument1, argument2, argument3);<br />
    with (i)<br />
    {<br />
        image_blend = argument3;<br />
    }<br />
    return i;
  </p>
  <p>Jak widać, każdą sekcję zaczynamy od wywołania <span class="inline">#define</span>, które w powyższym przykładzie służy do zdefiniowania dwóch funkcji. Przyjrzyjmy się każdej części zdefiniowanej funkcji:</p>
  <ul class="colour">
    <li>Instrukcja <span class="inline">#define</span> służy do zdefiniowania nowej funkcji o podanej nazwie;</li>
    <li>Po tym stwierdzeniu następuje kod funkcji, który używa zmiennych <span class="inline">argument0</span>, <span class="inline">argument1</span>, itd. w celu uzyskania dostępu do argumentów przekazywanych do funkcji podczas jej wywoływania;</li>
    <li>Na końcu mamy <a href="../../GameMaker_Language/GML_Overview/Language_Features/return.htm"><span class="notranslate">return</span></a> która służy do zwrócenia danych z <span class="notranslate">extension</span> z powrotem do kodu <span class="notranslate">GML</span>, w którym wywołana została funkcja.</li>
  </ul>
  <p>Gdybyś pisał <span class="inline">DLL</span> lub JavaScript <span class="notranslate">extension</span>, to proces byłby podobny, ale w odpowiednim języku dla formatu pliku rozszerzenia.</p>
  <p>Po wykonaniu tych czynności należy dodać plik do strony <span class="notranslate">extension</span> (korzystając z opcji &quot;Dodaj plik&quot;), co spowoduje, że na stronie <span class="notranslate">Extensions</span> Properties pojawi się nowe okno dotyczące właściwości pliku:</p>
  <p class="dropspot"><img alt="Extension Properties" class="center" height="519" src="../../assets/Images/Asset_Editors/Editor_Extensions.png" width="486" /></p>
  <p>Tutaj wybrałbyś platformę docelową dla <span class="notranslate">extension</span> (dla GML wybrałbyś je wszystkie), a także zmieniłbyś nazwę pliku <span class="notranslate">extension</span> i ustawił kilka innych szczegółów, którymi zajmiemy się za chwilę.</p>
  <p class="note"><strong>UWAGA</strong>: Dodanie pliku do <span class="notranslate">extension</span> powoduje skopiowanie go do katalogu projektu, co oznacza, że wszelkie dalsze zmiany muszą być dokonywane na tej kopii, aby były widoczne w grze. Możesz znaleźć kopię klikając prawym przyciskiem myszy na swoją <span class="notranslate">extension</span> w przeglądarce <span class="notranslate">Asset</span> i wybierając &quot;Otwórz w Eksploratorze&quot;.</p>
  <h2>Dodawanie funkcji</h2>
  <p>Edytor powinien być automatycznie wypełniony funkcjami zawartymi w naszym pliku <span class="notranslate">GML</span>, ale jeśli tak nie jest, możesz dodać je ręcznie, klikając przycisk menu funkcji <img> i wybierając to, czego potrzebujesz:</p>
  <p class="dropspot"><img alt="Estension Options Icon" class="icon" src="../../assets/Images/Icons/Icon_ExtensionMenu.png" /></p>
  <p>Wybranie opcji &quot;Add Function&quot; pozwoli Ci dodać do <span class="notranslate">extension</span> funkcję, która będzie mogła być wywoływana w <span data-keyref="GameMaker Name">GameMakerze</span> tak samo jak każda z wbudowanych funkcji. <span>Po dodaniu funkcji otworzy się następujące okno, w którym możesz określić właściwości funkcji (lub możesz dwukrotnie kliknąć na funkcję, aby ją otworzyć):</span></p>
  <p class="dropspot"><img alt="Add Files To An Extension" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_Files.png" /></p>
  <p>Na powyższym obrazku wypełniliśmy edytor funkcji szczegółami funkcji <span class="inline">instance_create_colour()</span>, którą zdefiniowaliśmy w naszym pliku <span class="notranslate">GML</span> <span class="notranslate">extension</span> (zauważ, że to okno edytora funkcji nie służy tylko do definiowania funkcji <span class="notranslate">GML</span> -- będzie takie samo dla wszystkich typów <span class="notranslate">extension</span> ). Prześledźmy każdą opcję, którą można zdefiniować dla funkcji:</p>
  <ul class="colour">
    <li>Możesz zobaczyć, że nadaliśmy funkcji <em>nazwę</em>, która jest tym, czego użyjesz podczas wywoływania funkcji w swoim projekcie; zauważ, że ta nazwa nie musi być zgodna z nazwą użytą w <span class="notranslate">extension</span> -- możesz nazwać ją jakkolwiek chcesz, a następnie użyć pola <em>External</em> Name, aby połączyć ją z rzeczywistą nazwą zdefiniowaną w rozszerzeniu:<img></li>
    <li>Poniżej znajduje się sekcja definiująca tekst <em>pomocy </em>, czyli tekst, który będzie wyświetlany w wyskakującym okienku uzupełniania kodu oraz tekst pomocniczy na dole edytora kodu.</li>
    <li>Następnie można zdefiniować <em>Typ powrotu</em>, który może być <strong>podwójny </strong>(wartość <a class="glossterm" data-glossterm="zmiennoprzecinkowy" href="#">zmiennoprzecinkowa</a> liczby rzeczywistej) lub <strong>łańcuch</strong>; jeśli nie ma nic zwracanego przez funkcję zewnętrzną, to nie ma to znaczenia.</li>
    <li>Pod tym określasz argumenty, które funkcja będzie przyjmować. Argumenty te mogą być <strong>dublami </strong>lub <strong>łańcuchami</strong>, a dodawać je możesz klikając przycisk dodaj <img>, a usuwać klikając przycisk usuń <img>.<br>
      <br>
      Jeśli Twoja funkcja może przyjmować zmienną ilość argumentów (czyli ma jakieś opcjonalne argumenty), powinieneś upewnić się, że zaznaczyłeś pole wyboru &quot;Argumenty o zmiennej długości&quot; na dole.
    </li>
  </ul>
  <p class="note"><strong>UWAGA</strong>: Jeśli funkcja jest częścią natywnego <span class="notranslate">extension</span> dla <span class="notranslate">Windows</span>, Mac lub <span class="notranslate">Ubuntu</span> (<span class="inline">dll</span>, <span class="inline">dylib</span> lub <span class="inline">so</span> odpowiednio) i ma więcej niż cztery argumenty, <strong>wszystkie argumenty muszą być tego samego typu</strong>.</p>
  <p>Po wykonaniu wszystkich tych czynności funkcja jest gotowa do użycia w projekcie; pojawi się w autouzupełnianiu i będzie oznaczona kolorem:</p>
  <p><img>Zdefiniowane funkcje można również ustawić jako <strong>Init Fun</strong> ctions lub <strong>Final Fun</strong>ctions, co oznacza, że będą one wywoływane automatycznie przy rozpoczęciu gry (Init) i przy zakończeniu gry (Final).</p>
  <p class="note"><strong>WAŻNE!!!</strong> Wszystkie platformy obsługują wywołanie funkcji Init, <strong>ale nie wszystkie platformy wykonają wywołanie funkcji Final.</strong> Dzieje się tak dlatego, że niektóre platformy po prostu zamkną aplikację, nie dając żadnego powiadomienia ani czasu na wywołanie tej funkcji. Platformy, których to dotyczy w większości to <strong>iOS</strong>, <strong>Android</strong>, <strong>HTML5</strong>, <strong>PlayStation </strong>i <strong>Xbox</strong>.</p>
  <h2>Makra</h2>
  <p>Inną opcją, którą masz do dyspozycji, jest stworzenie <strong>makra</strong>. Makro może być <a class="glossterm" data-glossterm="stały" href="#">stałą</a> wartością lub krótkim fragmentem kodu (więcej informacji o makrach znajdziesz <a href="../../GameMaker_Language/GML_Overview/Variables/Constants.htm">tutaj</a>). Na przykład, możemy usunąć funkcję <span class="inline">c_alice_blue</span> z naszego wcześniej zdefiniowanego rozszerzenia <span class="notranslate">GML</span> i zrobić z niej makro. Aby utworzyć makro, wystarczy kliknąć przycisk &quot;Makra&quot; w oknie <span class="notranslate">Extension</span> Właściwości, co spowoduje otwarcie poniższego okna:</p>
  <p class="dropspot"><img alt="File Property Window" class="center" height="553" src="../../assets/Images/Asset_Editors/Editor_Extensions_FileProperties.png" width="1050" /></p>
  <p>Edytor jest dość oczywisty: podajesz nazwę makra i jego stałą wartość lub krótką linię kodu. Zauważ, że jeśli makro jest linią kodu, <strong>będzie ono obliczane przy każdym wywołaniu</strong> makra.</p>
  <h2 id="h1">Tworzenie opcji <span class="notranslate">Extension</span> </h2>
  <p>Kliknij ikonę trybiku obok &quot;<strong>Opcje</strong> rozszerzeń&quot;, aby utworzyć lub zmodyfikować opcje dla swoich rozszerzeń:</p>
  <p><img>Po kliknięciu &quot;<strong>Tak</strong>&quot; na monit potwierdzający, zobaczysz nowe okno, w którym możesz dodać nowe opcje <span class="notranslate">extension</span>:</p>
  <p><img>Każdej opcji <span class="notranslate">extension</span> możesz nadać nazwę, wartość domyślną i typ danych. Nazwa jest tym, czego użyjesz wewnętrznie w swoim kodzie <span class="notranslate">extension</span>, aby pobrać wartość opcji.</p>
  <p>Oprócz dodawania opcji za pomocą &quot;Add Option&quot; możesz również dodawać sekcje za pomocą &quot;Add Section&quot;. Sekcja <strong>nie</strong> jest opcją, a jedynie nagłówkiem wyświetlanym w głównym oknie edytora <span class="notranslate">Extension</span>. Użyj tego, jeśli masz dużo opcji i chcesz uporządkować listę opcji, którą widzi użytkownik końcowy.</p>
  <p>Można utworzyć następujące rodzaje opcji:</p>
  <ul class="colour">
    <li><strong>Boolean</strong>: Tworzy pole wyboru typu true/false.</li>
    <li><strong>Liczba</strong>: Jest to liczba rzeczywista.</li>
    <li><strong>String</strong>: To jest tekst <span class="notranslate">string</span>.</li>
    <li><strong>FilePath</strong>: To jest <span class="notranslate">path</span> do pliku. Pozwala na użycie eksploratora systemu operacyjnego do przeglądania pliku.</li>
    <li><strong>FolderPath</strong>: To jest <span class="notranslate">path</span> do folderu/katalogu. Pozwala na użycie eksploratora systemu operacyjnego do przeglądania folderu.</li>
    <li><strong>Lista</strong>: Jest to rozwijana lista, z której można wybrać pojedynczy element z wcześniej zdefiniowanej listy elementów.</li>
  </ul>
  <p>Możesz także kliknąć na ikonę trybiku <img> obok opcji, aby nadać jej opcjonalną <strong>nazwę wyświetl</strong> aną i <strong>opis</strong> (który pojawia się jako tooltip po najechaniu na nazwę wyświetlaną).</p>
  <p>W oknie dodatków możesz również wybrać eksport tej opcji do pliku <strong>options.ini</strong> dołączonego do gry.</p>
  <p>Wreszcie możesz wybrać, aby ukryć opcję z edytora, czyniąc ją niewidoczną dla użytkownika końcowego, który używa <span class="notranslate">extension</span>.</p>
  <h3>Korzystanie z opcji <span class="notranslate">Extension</span> </h3>
  <p>Wartości opcji rozszerzenia można pobrać na stronie <span class="notranslate">runtime</span> za pomocą <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Extensions/Extensions.htm">funkcji rozszerz</a>enia.</p>
  <p>Możesz także pobrać swoje opcje <span class="notranslate">extension</span> w swoich <a data-xref="{title}" href="../../Settings/Runner_Details/Compiler_Batch_Files.htm">plikach wsadowych kompilatora / skryptach</a>, używając nazwy <span class="inline2">YYEXTOPT_&lt;ExtensionName&gt;_&lt;OptionName&gt;</span>.</p>
  <p>Opcje rozszerzenia będą dostępne na stronie <span class="notranslate">runtime</span> tylko wtedy, gdy <span class="notranslate">extension</span> posiada funkcje, które są używane na stronie <span class="notranslate">runtime</span>. Jednak opcje będą zawsze eksportowane do pliku INI (jeśli opcja jest włączona) i wsadu <span class="notranslate">scripts</span> niezależnie od użycia rozszerzenia.</p>
  <h2>Pliki proxy</h2>
  <p>Podczas pracy z wieloma platformami docelowymi warto zauważyć, że można stworzyć pojedynczy <span class="notranslate">extension</span> z tylko jednym zestawem funkcji/makr, który będzie działał na <em>wszystkich </em>platformach. Osiąga się to poprzez dodanie tylko jednej z bibliotek linków do swojej gry jako <span class="notranslate">extension</span> i umieszczenie pozostałych (innych) na liście <strong>Proxy Files</strong> w oknie <strong>Extension Properties</strong>.</p>
  <p><img>Na przykład, powiedzmy, że masz <span class="notranslate">Windows</span> <span class="notranslate">extension</span> z <span class="inline"> <strong>dll </strong></span>&quot;<span class="inline">Haggis.dll</span>&quot;. Po prostu replikowałbyś ten <span class="inline"> <strong>dll</strong></span> jako Mac <span class="inline"> <strong>DyLib</strong></span>, nazywając go &quot;<span class="inline"><strong>libHaggis.dylib</strong></span>&quot; i upewniając się, że wewnętrzne nazwy funkcji odpowiadają nazwom oryginalnego <span class="notranslate">Windows</span> <span class="inline"> <strong>dll</strong></span>. Ten <strong> <span class="inline">DyLib</span> </strong>Następnie zostałoby dodane do plików proxy i ustawione na eksport, gdy gra zostanie uruchomiona na Macu, a <span data-keyref="GameMaker Name">GameMaker</span> automatycznie użyje go, gdy zostaną wywołane funkcje <span class="notranslate">extension</span>.</p>
  <p>Aby dodać plik proxy, możesz po prostu kliknąć przycisk <img> w oknie Właściwości dla wybranego pliku zasobów i przejrzeć lokalizację pliku. Po dodaniu go możesz potrzebować zaktualizować cele rozszerzenia, aby dodać odpowiedni moduł, a kiedy następnym razem uruchomisz swoją grę, zostanie ona uwzględniona jako proxy dla tej platformy. Możesz również usunąć pliki proxy, klikając przycisk <img>, który usunie wybrany plik proxy.</p>
  <p>Po dodaniu plików proxy zostaną one skopiowane do folderu <span class="notranslate">Extensions</span> w Twoim projekcie (możesz je znaleźć klikając prawym przyciskiem myszy na <img> na stronie <span class="notranslate">extension</span> i wybierając opcję <em>Otwórz w Eksploratorze</em>), więc jeśli musisz je edytować, powinieneś edytować skopiowane pliki dołączone do gry, a nie plik źródłowy, który został zaimportowany, ponieważ <span data-keyref="GameMaker Name">GameMaker</span> będzie używał do kompilacji tych, które znajdują się w projekcie.</p>
  <h2 id="h">Konwencje nazewnicze</h2>
  <p>Bardzo ważne jest, aby Twoje pliki proxy przestrzegały konwencji nazewnictwa wymienionych poniżej, ponieważ <span data-keyref="GameMaker Name">GameMaker</span> przetworzy te nazwy i przypisze moduł docelowy dla pliku zgodnie z jego <span class="notranslate">extension</span> i nazwą i automatycznie połączy pliki za Ciebie. Jeśli nie będziesz przestrzegał tych konwencji, Twoja gra może nie działać na <span class="notranslate">runtime</span>, ponieważ <span data-keyref="GameMaker Name">GameMaker</span> nie będzie w stanie ustalić, który plik ma być użyty, więc nie załaduje go poprawnie.</p>
  <p>Konwencje nazewnictwa dla poszczególnych platform docelowych podano poniżej:</p>
  <table>
    <colgroup>
      <col style="width: 173px;" />
      <col style="width: 715px;" />
    </colgroup>
    <tbody>
      <tr>
        <th>Platforma</th>
        <th>Nazwy</th>
      </tr>
      <tr>
        <td>Windows 32bit Runtime</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.dll, lib&lt;<em>Name</em>&gt;.dll</span></td>
      </tr>
      <tr>
        <td>Windows 64bit Runtime</td>
        <td><span class="inline">&lt;<em>N</em><em>ame</em>&gt;_x64.dll, lib&lt;<em>Name</em>&gt;_x64.dll</span></td>
      </tr>
      <tr>
        <td>UWP</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_x86.dll, &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_arm.dll, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_x86.dll, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_arm.dll</td>
      </tr>
      <tr>
        <td>Ubuntu (<span class="notranslate">Linux</span>)</td>
        <td><span class="inline">&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;.so,<br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux.so,<br>
            <br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_arm.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_arm.so,<br>
            <span class="inline">lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux_arm.so,<br>
            <br>
            &lt;<em>Nazwa&gt;_arm64</em>.so, lib&lt;<em>Nazwa&gt;_arm64</em>.so, lib&lt;<em>Nazwa&gt;_linux_arm64</em>.so,<br>
            <br>
            &lt;<em>Nazwa&gt;_arm64-v8</em>.so,<br>
            lib&lt;<em>Nazwa&gt;_arm64-v8</em>.so, lib&lt;Nazwa&gt;_linux_arm64-v8.so,<br>
            <br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_armeabi-v7a.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_armeabi-v7a.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux_armeabi-v7a.so</td>
      </tr>
      <tr>
        <td>macOS</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.dylib, lib&lt;Name&gt;.dylib</span></td>
      </tr>
      <tr>
        <td>HTML5</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.js</span></td>
      </tr>
      <tr>
        <td>PS4</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.prx, lib&lt;<em>Name</em>&gt;.prx, &lt;<em>Name</em>&gt;_ps4.prx, lib&lt;<em>Name</em>&gt;_ps4.prx</span></td>
      </tr>
      <tr>
        <td>PS5</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.prx, lib&lt;<em>Name</em>&gt;.prx, &lt;<em>Name</em>&gt;_ps5.prx, lib&lt;<em>Name</em>&gt;_ps5.prx</span></td>
      </tr>
      <tr>
        <td>Xbox One</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, </span>&lt;<em>Nazwa&gt;_xboxone</em>.dll</td>
      </tr>
      <tr>
        <td>Xbox Series X|S</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, </span>&lt;<em>Nazwa&gt;_xboxseriesxs</em>.dll</td>
      </tr>
    </tbody>
  </table>
  <p>Używając powyższych konwencji, zamieniłbyś część <span class="inline">&lt;<em>Name</em>&gt;</span> na nazwę pliku bazowego, do którego dodajesz pliki proxy.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Extensions.htm">Redaktor <span class="notranslate">Extension</span> </a></div>
        <div style="float:right">Następny: <a href="Android_Extensions.htm">Rozszerzenia systemu Android</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone</span></h5>
  </div>
  <!-- KEYWORDS
Creating Extensions
-->
  <!-- TAGS
extensions_create
-->
</body>
</html>