<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_friction_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_friction_create" />
  <meta name="rh-index-keywords" content="physics_joint_friction_create" />
  <meta name="search-keywords" content="physics_joint_friction_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_joint_friction_create</h1>
  <p>Przegub cierny różni się nieco od wszystkich innych przegubów w symulacji fizyki tym, że utworzone połączenie nie ogranicza położenia ani ruchu instancji, lecz jej prędkość i obrót. Działa to w ten sposób, że bierze się maksymalne wartości wejściowe siły i momentu obrotowego i stosuje je do drugiego uchwytu, aby sprowadzić prędkość i moment pędu do takich samych wartości jak w pierwszym przypadku. Jeśli więc mamy instancję nieruchomą i instancję ruchomą, a następnie połączymy je za pomocą przegubu ciernego, to instancja ruchoma będzie stopniowo zwalniać, aż do momentu, gdy również będzie nieruchoma. Jeśli obie instancje były ruchome, to druga instancja będzie miała zmodyfikowaną prędkość ruchu, tak by odpowiadała prędkości pierwszej instancji.</p>
  <p><img>Podobnie jak w przypadku większości innych przegubów, podajesz instancje, które mają zostać połączone, a także pozycję, w której przegub ma zostać utworzony w obrębie strony <span class="notranslate">room</span>. Następnie podajesz maksymalną siłę i maksymalny moment obrotowy (tarcie kierunkowe i obrotowe), a jeśli ustawisz wartość &quot;col&quot; na <span class="inline">true</span>, to dwie instancje mogą oddziaływać na siebie i zderzać się ze sobą, ale <i>tylko</i> wtedy, gdy wystąpią zdarzenia kolizji, natomiast jeśli ustawisz tę wartość na <span class="inline">false</span>, to nie będą się one zderzać bez względu na wszystko.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">physics_joint_friction_create(inst1, inst2, anchor_x, anchor_y, max_force, max_torque, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">Identyfikator instancji</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">Identyfikator instancji</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">anchor_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">anchor_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">max_force</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The maximum frictional force that will be applied</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">max_torque</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The maximum rotational force that will be applied</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">Boolean</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var mainFixture, o_id;<br />
    mainFixture = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br />
    o_id = instance_create_layer(x+300, y, &quot;Instances&quot;, obj_Rudder);<br />
    physics_fixture_bind(mainFixture, id);<br />
    physics_fixture_bind(mainFixture, o_id);<br />
    physics_joint_friction_create(id, o_id, x, y, 10, 0.3, true);<br />
    physics_fixture_delete(mainFixture);</p>
  <p>Powyższy kod utworzy uchwyt, a następnie powiąże go z dwiema instancjami, po czym połączy je za pomocą złącza ciernego.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Plecy: <a href="Joints.htm">Stawy</a></div>
        <div style="float:right">Następny: <a href="physics_joint_delete.htm"><span class="notranslate">physics_joint_delete</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_friction_create
-->
  <!-- TAGS
physics_joint_friction_create
-->
</body>
</html>