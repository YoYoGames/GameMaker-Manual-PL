<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_bind_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_bind_ext" />
  <meta name="rh-index-keywords" content="physics_fixture_bind_ext" />
  <meta name="search-keywords" content="physics_fixture_bind_ext" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_bind_ext</h1>
  <p>Kiedy już zdefiniowaliśmy nasz uchwyt, musi on zostać powiązany z instancją. Oznacza to, że jego <i>właściwości</i> są przekazywane do wybranej instancji, a <b>nie do samego</b> elementu, tak więc jeden element może być powiązany z wieloma instancjami, jeśli wszystkie mają mieć te same właściwości. Możesz określić indeks <span class="notranslate">object</span> dla celu i wszystkie instancje obecne w <span class="notranslate">room</span> w tym czasie otrzymają właściwości tej armatury (ale nie żadne nowe instancje <span class="notranslate">object</span> utworzone później), lub możesz użyć specjalnych słów kluczowych <i>other</i> i <i>all</i>. Możesz nawet określić rodzica <span class="notranslate">object</span> i wszystkie instancje dzieci z tym rodzicem również otrzymają to wiązanie. Po tym jak uchwyt zostanie powiązany ze wszystkimi instancjami, których potrzebujesz, może zostać usunięty, jeśli nie jest już potrzebny, a instancje z właściwościami tego uchwytu nie zostaną dotknięte i zachowają te właściwości.</p>
  <p>Normalnie, uchwyt zostanie związany z instancją ze środkiem masy umieszczonym na początku instancji, jednak nie zawsze jest to wymagane, więc ta funkcja pozwala również na przesunięcie pozycji x i y, gdzie uchwyt jest związany o daną wartość (jeśli tego nie wymagasz, użyj <a href="physics_fixture_bind.htm"><span class="inline">physics_fixture_bind()</span></a> zamiast). Ważne jest, aby zauważyć, że uchwyt może obsługiwać tylko <i>jedno</i> przesunięcie, ponieważ dodawanie wielu przesunięć do jednego uchwytu nie jest obsługiwane przez Box2D.</p>
  <p><img>Funkcja zwróci również unikalną wartość &quot;id&quot; dla <i>powiązanego</i> uchwytu<b>(nie dla samego uchw</b>ytu), która może być użyta do usunięcia (&quot;un-bind&quot;) właściwości fizyki z instancji przy użyciu funkcji <a href="physics_remove_fixture.htm"><span class="inline">physics_remove_fixture()</span></a>. Pozwala to na dodawanie i usuwanie właściwości fizycznych z instancji bez niszczenia i ponownego tworzenia <span class="notranslate">objects</span>.</p>
  <p class="note"><b>UWAGA</b>: Fixtures powinny być usuwane, gdy nie są już potrzebne, ponieważ w przeciwnym razie może dojść do wycieku pamięci, co spowolni, a w końcu spowoduje awarię gry.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">physics_fixture_bind_ext(fixture, target, xoffset, yoffset)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">fixture</span></td>
        <td><span data-keyref="Type_ID_PhyFixture">Identyfikator osprzętu fizycznego</span></td>
        <td><span class="notranslate">The fixture that is to be bound</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">target</span></td>
        <td><span data-keyref="Type_ID_Instance">Identyfikator instancji</span> lub <span data-keyref="Type_Asset_Object">Obiekt Asset</span></td>
        <td><span class="notranslate">The target instance that is to receive the fixture (can be an instance id, an object id, <i>other</i>, or <i>all</i>)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xoffset</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The offset along the x-axis</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">yoffset</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The offset along the y-axis</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var fix, inst;<br />
    fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(fix, 16);<br />
    physics_fixture_set_density(fix, 1.0);<br />
    inst = instance_create_layer(x, y, &quot;Instances&quot;, genericBodyObject);<br />
    my_fix = physics_fixture_bind_ext(fix, inst, sprite_width / 2, -(sprite_height / 2));<br />
    physics_fixture_delete(fix);</p>
  <p>Powyższy kod utworzy uchwyt i przypisze jego indeks do zmiennej &quot;fix&quot;. Następnie definiuje kształt i gęstość uchwytu przed powiązaniem go z instancją z przesunięciem opartym na szerokości i wysokości <span class="notranslate">sprite</span>. Indeks <b>powiązanego</b> uchwytu jest przechowywany w zmiennej &quot;my_fix&quot;. Na koniec usuwany jest sam element, by zapobiec wyciekom pamięci, ponieważ nie jest już potrzebny.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Fixtures.htm">Armatura</a></div>
        <div style="float:right">Następny: <a href="physics_fixture_set_collision_group.htm"><span class="notranslate">physics_fixture_set_collision_group</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_bind_ext
-->
  <!-- TAGS
physics_fixture_bind_ext
-->
</body>
</html>