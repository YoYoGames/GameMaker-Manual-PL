<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_particle_get_data_particle</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_particle_get_data_particle" />
  <meta name="rh-index-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_particle_get_data_particle</h1>
  <p>Ta funkcja zwraca różne informacje o pojedynczej cząstce w symulacji fizycznej przy użyciu podanego adresu <span class="notranslate">flags</span>. Indeks cząstki (jej ID) jest taki sam, jak ten, który został zwrócony przez funkcję <a href="physics_particle_create.htm"><span class="inline">physics_particle_create()</span></a>a użyty adres <span class="notranslate">buffer</span> musi być utworzony wcześniej za pomocą funkcji <a href="../../Buffers/buffer_create.htm"><span class="inline">buffer_create()</span></a>. Powinien to być plik typu &quot;grow&quot;, o rozmiarze zbliżonym do oczekiwanego rozmiaru zwracanych danych. Same adresy <span class="notranslate">flags</span> są ustawiane za pomocą stałych podanych poniżej, a do utworzenia pojedynczej wartości <span class="notranslate">flag</span> w celu uzyskania żądanych informacji należy użyć bitownicy <i>lub</i> &quot;|&quot;.</p>
  <table>
    <tbody>
      <tr>
        <th>Stała</th>
        <th>Opis</th>
        <th>Typ danych</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_typeflags</span></td>
        <td>Wartość <span class="notranslate">flags</span> dla cząstki.</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_position</span></td>
        <td>Położenie x i y cząstki.</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_velocity</span></td>
        <td>Prędkość pozioma i pionowa.</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_colour</span></td>
        <td>Kolor i wartość alfa (w systemie szesnastkowym).</td>
        <td><span class="notranslate">buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_category</span></td>
        <td>Kategoria cząstki (określona podczas tworzenia cząstki).</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">physics_particle_get_data_particle(ind, buffer, flags)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">ind</span></td>
        <td><span data-keyref="Type_ID_Phy_Particle">Fizyka Identyfikator cząstki</span></td>
        <td><span class="notranslate">The index (ID) of the particle to get the data from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer">Identyfikator bufora</span></td>
        <td><span class="notranslate">The (previously created) buffer to use to store the data.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">flags</span></td>
        <td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag">Dane dotyczące cząstek fizyki <span class="notranslate">Flag</span> Stała</span>(y)</td>
        <td><span class="notranslate">The flags to use to extract data about specific particle types.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var part = physics_particle_create(flags, x, y, x_vel, y_vel, c_white, 1, 1)<br />
    var flags = phy_particle_data_flag_position | phy_particle_data_flag_velocity;<br />
    var buffer = buffer_create(16, buffer_grow, 4);<br />
    physics_particle_get_data_particle(part, buffer, flags);<br />
    px = buffer_read(buffer, buffer_f32);<br />
    py = buffer_read(buffer, buffer_f32);<br />
    pvelx = buffer_read(buffer, buffer_f32);<br />
    pvely = buffer_read(buffer, buffer_f32);<br />
    buffer_delete(buffer);</p>
  <p>Powyższy kod pobiera położenie i prędkość cząstki indeksowanej przez zmienną &quot;part&quot; i zapisuje te dane w kilku zmiennych.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Soft_Body_Particles.htm">Miękkie cząstki ciała</a></div>
        <div style="float:right">Następny: <a href="physics_particle_group_get_data.htm"><span class="notranslate">physics_particle_group_get_data</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
physics_particle_get_data_particle
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_get_data_particle
-->
</body>
</html>