<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>fizyka_zastosuj_moment obrotowy</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_apply_torque" />
  <meta name="rh-index-keywords" content="physics_apply_torque" />
  <meta name="search-keywords" content="physics_apply_torque" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>fizyka_zastosuj_moment obrotowy</h1>
  <p>Kiedy mówimy o momencie obrotowym, mamy na myśli tendencję siły lub impulsu do obracania instancji wokół jej środka masy, ale w <span data-keyref="GameMaker Name">GameMakerze</span> można także zastosować moment obrotowy niezależnie do instancji, powodując jej obrót w określonym kierunku. To, jak duży moment obrotowy zastosujesz, aby uzyskać pożądany obrót, zależy od rozmiaru i gęstości uchwytu, który przypisałeś do instancji, ponieważ obie te właściwości określają jej masę, która definiuje jej bezwładność, a ta wpływa na moment obrotowy! Ogólna zasada jest taka, że jeśli instancja ma dużą bezwładność, będziesz potrzebował dużego momentu obrotowego, aby zaczęła się obracać. Należy również zauważyć, że inne czynniki, takie jak grawitacja i kolizje, również mogą wpływać na moment obrotowy instancji. Poniżej znajduje się obrazek, który pomoże to wyjaśnić:</p>
  <p><img>Jak widać, moment obrotowy potrzebny do obrócenia <span class="notranslate">object</span> zależy od masy i bezwładności, jakie daje ten element. Wszystko to jest obliczane przez <span data-keyref="GameMaker Name">GameMaker</span> w oparciu o rozmiar i gęstość oprzyrządowania, które jest przypisane do instancji podczas jej tworzenia. Zauważ także, że dla obrotu w kierunku przeciwnym do ruchu wskazówek zegara wartość ta powinna być ujemna.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">physics_apply_torque(torque)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">torque</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The torque (in Newton metres) to be applied</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">if keyboard_check(vk_left)<br />
    {<br />
        physics_apply_torque(-100);<br />
    }</p>
  <p>Powyższy kod spowoduje obrót instancji w kierunku przeciwnym do ruchu wskazówek zegara (w lewo) z momentem obrotowym 100 Nm po naciśnięciu klawisza strzałki w lewo.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Forces.htm">Siły</a></div>
        <div style="float:right">Next: physics_apply_angular_impulse</div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
physics_apply_torque
-->
  <!-- TAGS
physics_apply_torque
-->
</body>
</html>