<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Fizyka</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for physics functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Physics" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Fizyka</h1>
  <p>Zintegrowanie specjalnej biblioteki fizyki z programem <span data-keyref="GameMaker Name">GameMaker</span> oznacza, że można teraz przejąć kontrolę nad wszystkimi aspektami fizycznego zachowania <span class="notranslate">objects</span> w świecie gry, w szczególności nad kolizjami i interakcjami <span class="notranslate">object</span>. Tradycyjny&quot; system kolizji (domyślnie stosowany w programie <span data-keyref="GameMaker Name">GameMaker</span> ) jest systemem &quot;reaktywnym&quot;, w którym sprawdza się, czy doszło do kolizji, a <i>następnie</i> reaguje na nią za pomocą kodu umieszczanego w poszczególnych witrynach <span class="notranslate">objects</span>. Jest to dobre rozwiązanie w prostych grach, ale gdy masz wiele stron <span class="notranslate">objects</span> i musisz napisać, jak reagują na różne sytuacje w świecie gry, szybko okazuje się, że ten system nie wystarczy. Wtedy trzeba skorzystać z systemu fizyki <span data-keyref="GameMaker Name">GameMakera</span>.</p>
  <p>System fizyki działa w zupełnie inny sposób niż zwykłe kolizje. Jest to raczej system &quot;pasywny&quot;, w którym definiuje się szereg właściwości strony <span class="notranslate">objects</span> w świecie gry, a także właściwości samego świata gry, zanim dojdzie do jakichkolwiek kolizji lub interakcji. Te zakodowane &quot;zasady&quot; będą następnie regulować sposób, w jaki wszystkie elementy świata gry wchodzą w interakcje. W ten sposób, przy użyciu kilku prostych kodów i odpowiedniej konfiguracji <span class="notranslate">room</span>, możesz tworzyć bardzo złożone interakcje między <span class="notranslate">objects</span> a światem gry, które będą zachodzić i rozwiązywać się <i>bez</i> konieczności kodowania wszystkich możliwych wyników.</p>
  <p>Jest kilka rzeczy, na które należy zwrócić uwagę podczas pracy ze światem fizyki <span data-keyref="GameMaker Name">GameMakera</span>:</p>
  <ul class="colour">
    <li>System fizyki istnieje &quot;poza&quot; podstawową strukturą <span class="notranslate">room</span> i instancjami <span data-keyref="GameMaker Name">GameMakera</span>, co oznacza, że jego czasy i funkcje nie są koniecznie powiązane z prędkością i kolejnością kroków <span class="notranslate">room</span>, jak wszystko inne.</li>
    <li>System fizyki zastępuje wiele normalnych funkcji instancji. Na przykład zamiast ustawiać prędkość i kierunek dla instancji, jeśli została ona zadeklarowana jako w pełni symulowane ciało fizyczne, użyjesz <i>siły</i> lub <i>impulsu</i>, aby poruszała się w świecie gry, lub jeśli nie ma włączonej fizyki, będziesz musiał sam ustawić pozycje x i y. Trzeba się do tego trochę przyzwyczaić, więc przed włączeniem ich do projektu poeksperymentuj z funkcjami fizyki i poznaj ich działanie.</li>
    <li>Należy ograniczyć liczbę tworzonych instancji, a także liczbę kolizji i grup kolizji, z którymi musi sobie poradzić świat fizyki. <i>Nie można</i> mieć tysięcy instancji, wszystkich z właściwościami fizycznymi i kolizjami, i oczekiwać, że wszystko będzie działać dobrze, ponieważ fizyka wymaga dość intensywnych obliczeń, więc należy się ograniczać i optymalizować tam, gdzie to możliwe.</li>
    <li>Podczas ustawiania kolizji należy jak najczęściej używać rodzica, ponieważ system kolizji ma ograniczoną liczbę <i>bitów</i> kolizji, które można przypisać do instancji, aby Box2D mógł wykrywać kolizje. Na przykład jeśli masz pięć różnych ścian <span class="notranslate">objects</span>, nie sprawdzaj pięciu kolizji, lecz utwórz rodzica <span class="notranslate">object</span> i przypisz go do pięciu ścian, a następnie wykonaj JEDNO sprawdzenie kolizji z rodzicem. Właściwości fizyczne strony <span class="notranslate">objects</span> <i>nie</i> są <i>dziedziczone</i>, a jedynie kolizje. W ten sposób można utrzymać grę zoptymalizowaną i wolną od błędów.</li>
    <li>Staraj się nie przenosić instancji z jednego punktu strony <span class="notranslate">room</span> do drugiego w inny sposób niż za pomocą funkcji fizyki (np. nie ustawiaj ręcznie współrzędnych x/y). Chociaż można to zrobić i w pewnych okolicznościach może to być konieczne, generalnie należy tego unikać ze względu na nieprzewidywalne skutki, jakie może to mieć dla silnika fizyki, zwłaszcza przy próbach rozwiązywania kolizji.</li>
    <li>Należy zachować ostrożność podczas wiązania uchwytów, ponieważ mogą one być powiązane z <span class="notranslate">objects</span> i instancjami niezależnie. Oznacza to, że jeśli zwiążesz uchwyt z (na przykład) &quot;o_Wall&quot;, <b>wszystkie</b> instancje tego <span class="notranslate">object</span> otrzymają ten uchwyt. Jeśli chcesz powiązać uchwyt tylko z jedną instancją, to użyj id tej instancji w odpowiedniej funkcji.</li>
    <li>Należy pamiętać, że ze względu na różnice w precyzji obliczeń zmiennoprzecinkowych może się okazać, że wersje gry na różne platformy docelowe będą zachowywać się inaczej niż standardowa wersja <span class="notranslate">Windows</span>, choć każda wersja będzie spójna w kolejnych uruchomieniach.</li>
    <li>Aby zapobiec niestabilności symulacji fizycznej, w Box2D wprowadzono górne ograniczenia wielkości obrotu i translacji ciała w ramach pojedynczej aktualizacji. Widoczne ograniczenia różnią się w zależności od dokładności symulacji fizycznej, liczby aktualizacji i szybkości aktualizacji świata fizyki, a także skalowania świata fizyki. Oznacza to, że (na przykład) jeśli prędkość aktualizacji świata wynosi 60, maksymalna prędkość ruchu wyniesie 20.</li>
  </ul>
  <p>Informacje na temat funkcji fizyki można znaleźć na kolejnych stronach:</p>
  <ul class="colour">
    <li><a href="The_Physics_World/The_Physics_World.htm">Świat fizyki</a></li>
    <li><a href="Forces/Forces.htm">Siły</a></li>
    <li><a href="Fixtures/Fixtures.htm">Armatura</a></li>
    <li><a href="Joints/Joints.htm">Stawy</a></li>
    <li><a href="Soft_Body_Particles/Soft_Body_Particles.htm">Miękkie cząstki ciała</a></li>
    <li><a href="Physics_Variables/Physics_Variables.htm">Zmienne z fizyki</a></li>
  </ul>
  <p> </p>
  <p>Wreszcie, istnieje kilka specjalnych funkcji fizyki, które mogą być przydatne w bardziej zaawansowanych symulacjach fizycznych. Pierwsza z nich służy do testowania możliwych kolizji w określonym punkcie na stronie <span class="notranslate">room</span>, a druga do generowania niestandardowych właściwości masy i bezwładności w obrębie instancji:</p>
  <ul class="colour">
    <li><a href="physics_test_overlap.htm"><span class="notranslate">physics_test_overlap</span></a></li>
    <li><a href="physics_mass_properties.htm"><span class="notranslate">physics_mass_properties</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../GML_Reference.htm">Odniesienie do GML</a></div>
        <div style="float:right">Następny: <a href="../In_App_Purchases/In_App_Purchases.htm">Zakupy w aplikacji</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Physics
Physics Functions
-->
  <!-- TAGS
physics_functions
-->
</body>
</html>