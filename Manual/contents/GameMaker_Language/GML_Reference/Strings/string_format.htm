<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>string_format</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for string_format" />
  <meta name="rh-index-keywords" content="string_format" />
  <meta name="search-keywords" content="string_format" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>string_format</h1>
  <p>Zamienia liczbę rzeczywistą na <span class="notranslate">string</span> z użyciem własnego formatowania, przy czym można wybrać, ile &quot;miejsc&quot; zostanie zapisanych na stronie <span class="notranslate">string</span> oraz ile miejsc po przecinku zostanie zapisanych. Obie te opcje mogą być bardzo przydatne - niektóre gry preferują wyświetlanie wyniku jako określonej liczby cyfr, natomiast kontrola nad miejscami dziesiętnymi może być przydatna, jeśli chodzi o wysoką dokładność, której nie zapewniają dwa miejsca po przecinku w funkcji <a href="string.htm"><span class="inline">string()</span></a> nie są w stanie zapewnić. Jeśli podana liczba miejsc jest większa niż wartość, która ma zostać wyświetlona, i/lub liczba plus podane miejsca dziesiętne jest mniejsza niż całkowita liczba miejsc, przed wartością zostaną dodane spacje, aby wyrównać różnicę (patrz przykład poniżej). Zera zostaną dodane po prawej stronie przecinka dziesiętnego, jeśli podana wartość jest mniejsza niż suma i liczba miejsc po przecinku do uwzględnienia. Domyślny format to brak dodatkowych spacji po lewej stronie i tylko dwa miejsca po przecinku po prawej stronie, np. &quot;265,73&quot;.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">string_format(val, tot, dec);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">val</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The real number to be turned into a string.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">tot</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The total number of places of the main number to be shown. Zeroes or spaces will be inserted to match this.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">dec</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The number of decimal places to be included.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_String">String</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">str1 = string_format(1234, 8, 0);<br />
    str2 = string_format(pi, 1, 10);<br />
    str3 = string_format(pi, 5, 5);</p>
  <p>Spowoduje to ustawienie adresu <span class="inline">str1</span> na &quot; 1234&quot;, adresu <span class="inline">str2</span> na &quot;3.1415926535&quot;, a adresu <span class="inline">str3</span> na &quot; 3.14159&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Strings.htm">Struny</a></div>
        <div style="float:right">Następny: <a href="string_insert.htm"><span class="notranslate">string_insert</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
string_format
-->
  <!-- TAGS
string_format
-->
</body>
</html>