<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>dot_product_normalised</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for dot_product_normalised" />
  <meta name="rh-index-keywords" content="dot_product_normalised,dot_product_normalized" />
  <meta name="search-keywords" content="dot_product_normalised,dot_product_normalized" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>dot_product_normalised</h1>
  <p>Iloczyn punktowy to wartość wyrażająca relację kątową między dwoma wektorami, którą uzyskuje się przez pomnożenie dwóch wektorów, a następnie dodanie wyników. Nazwa &quot;iloczyn punktowy&quot; pochodzi od wyśrodkowanej kropki &quot;-&quot;
    która jest często używana do oznaczania tej operacji (alternatywna nazwa &quot;iloczyn skalarny&quot; podkreśla raczej skalarny niż wektorowy charakter wyniku).</p>
  <p>Rzeczywistą formułę matematyczną można zapisać w następujący sposób:</p>
  <p><img>Zatem w 2D iloczyn punktowy wektorów <span class="inline">a[x1,y1]</span> i <span class="inline">b[x2,2]</span> wynosi <span class="inline">x1x2 + y1y2</span>, co oznacza, że w programie <span data-keyref="GameMaker Name">GameMaker</span> iloczyn punktowy oblicza się w następujący sposób:</p>
  <p class="code">a · b = (x1*x2)+(y1*y2);</p>
  <p>Co z <i>normalizowanym</i> iloczynem punktowym? Znormalizowany iloczyn punktowy został skorygowany w taki sposób, aby wartość zwracana mieściła się w przedziale od -1 do 1 (szczegółowe informacje znajdują się w rozdziale dotyczącym <a href="../../../../Additional_Information/Vectors.htm">wektorów</a> ), co jest wyjątkowo przydatne w wielu sytuacjach, zwłaszcza w przypadku oświetlenia i innych funkcji 3D.</p>
  <p> </p>
  <h4><b>Składnia:</b></h4>
  <p class="code">dot_product_normalised(x1, y1, x2, y2)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">x1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">x2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the second vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the second vector.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var x1, y1, x2, y2;<br/> x1 = lengthdir_x(1, image_angle);<br/> y1 = lengthdir_y(1, image_angle);<br/> x2 = o_Player.x - x;<br/> y2 = o_Player.y - y;<br/> if dot_product_normalised(x1, y1, x2, y2) &gt; 0 seen=true else seen=false;</p>
  <p>Powyższy kod tworzy wektor na podstawie kąta obrazu instancji, a następnie pobiera do siebie wektor gracza <span class="notranslate">object</span> &quot;o_Player&quot;. Na koniec oblicza iloczyn punktowy tych dwóch wektorów i jeśli jest on większy od 0, ustawia zmienną
    &quot;seen&quot; na wartość true, a jeśli jest równy lub mniejszy od 0, ustawia zmienną &quot;false&quot; na wartość false.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Angles_And_Distance.htm">Kąty i odległości</a></div>
        <div style="float:right">Następny: <a href="dot_product_3d_normalised.htm"><span class="notranslate">dot_product_3d_normalised</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
dot_product_normalised
dot_product_normalized
-->
  <!-- TAGS
dot_product_normalised
-->
</body>
</html>