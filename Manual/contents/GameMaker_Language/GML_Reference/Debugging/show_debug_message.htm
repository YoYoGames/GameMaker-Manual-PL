<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_debug_message</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for show_debug_message" />
  <meta name="rh-index-keywords" content="show_debug_message" />
  <meta name="search-keywords" content="show_debug_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>show_debug_message</h1>
  <p>Ta funkcja utworzy niestandardowy komunikat debugowania, który będzie wyświetlany w oknie kompilatora pod adresem <span class="notranslate">runtime</span>. Zwróć uwagę, że komunikat może być <i>albo</i> liczbą <span class="notranslate">string</span>, albo liczbą rzeczywistą, ale jeśli potrzebujesz obu, to liczba będzie musiała być najpierw przekonwertowana na <span class="notranslate">string</span> za pomocą funkcji <a href="../Strings/Strings.htm"><span class="inline">string()</span></a> (patrz przykład poniżej) oraz że jeśli liczba ma więcej niż dwa miejsca po przecinku, należy użyć funkcji <a href="../Strings/string_format.htm"><span class="inline">string_format()</span></a> aby je pokazać, ponieważ domyślnie liczby dziesiętne są zaokrąglane do dwóch miejsc po przecinku (zatem &quot;1,2468&quot; w oknie wyjściowym będzie wyświetlane jako &quot;1,25&quot;).</p>
  <p>Komunikaty debugowania wyświetlane za pomocą tej funkcji będą widoczne w <a href="../../../Introduction/The_Output_Window.htm">oknie Compiler Output Window</a> na dole strony <span class="notranslate">IDE</span>, a także w <a href="../../../IDE_Tools/The_Debugger.htm">widoku Graph View</a> strony <span class="notranslate">debugger</span>, gdy gra jest uruchomiona w trybie Debug Mode. Jeśli chcesz widzieć komunikaty tylko w trybie Debug Mode, powinieneś użyć funkcji <a href="debug_event.htm"><span class="inline">debug_event()</span></a> zamiast.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">show_debug_message(string);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The custom debug message to show.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4><b>Przykład:</b></h4>
  <p class="code">if !instance_exists(obj_Exit)<br />
    {<br />
        show_debug_message(&quot;Exit not created!&quot;);<br />
        show_debug_message(&quot;Error Num: &quot; + string(global.error));<br />
        game_end();<br />
    }</p>
  <p>Powyższy kod sprawdza, czy instancja istnieje, a jeśli nie, w oknie kompilacji wyświetlany jest komunikat debugowania i gra jest kończona.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Debugging.htm">Debugowanie</a></div>
        <div style="float:right">Następny: <a href="show_debug_overlay.htm"><span class="notranslate">show_debug_overlay</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
show_debug_message
-->
  <!-- TAGS
show_debug_message
-->
</body>
</html>