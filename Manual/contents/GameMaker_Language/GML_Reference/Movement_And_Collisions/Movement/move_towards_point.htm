<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>przesuń_w kierunku_punktu</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="This page outlines the function move_towards_point" />
  <meta name="rh-index-keywords" content="move_towards_point" />
  <meta name="search-keywords" content="move_towards_point" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>przesuń_w kierunku_punktu</h1>
  <p>Ta funkcja po prostu mówi instancji wykonującej kod, aby zmierzała w kierunku zadanego punktu z zadaną prędkością. Pamiętaj, że to od Ciebie zależy, co ma ona zrobić, gdy już tam dotrze, ponieważ sama się nie zatrzyma. Oznacza to, że możesz uzyskać &quot;wibrującą&quot; instancję, gdy przesunie się ona (na przykład) o 3 piksele do przodu, przekroczy docelową pozycję x/y o 2, a następnie cofnie się o 3 piksele, przekraczając punkt docelowy o jeden i tak dalej... Można tego uniknąć na wiele sposobów, np. używając polecenia <a href="../../Maths_And_Numbers/Angles_And_Distance/distance_to_point.htm"><span class="inline">distance_to_point()</span></a> aby sprawdzić, jak daleko od podanego miejsca znajduje się instancja przed wykonaniem ruchu.</p>
  <p class="note"><b>UWAGA</b>: ta funkcja ustawia prędkość instancji, więc nawet jeśli przestaniesz używać tego kodu, instancja będzie nadal poruszać się w poprzednim kierunku, dlatego konieczne jest ustawienie instancji <a href="../../Asset_Management/Instances/Instance_Variables/speed.htm"><span class="inline">speed</span></a> na 0, jeśli chcesz, by się zatrzymała. Zobacz przykład kodu poniżej.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">move_towards_point( x, y, sp );</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x position of the point to move towards.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y position of the point to move towards.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">sp</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The speed to move at in pixels per step.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">if point_distance(x, y, target.x, target.y) &gt; 5<br />
    {<br />
        move_towards_point(target.x, target.y, 5);<br />
    }<br />
    else speed = 0;</p>
  <p>Powyższy kod przesunie instancję w kierunku pozycji instancji zindeksowanej w zmiennej &quot;target&quot; z prędkością 5 pikseli na krok. Po osiągnięciu tej pozycji prędkość zostanie ustawiona na 0.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Movement.htm">Ruch</a></div>
        <div style="float:right">Następny: <a href="move_bounce_all.htm"><span class="notranslate">move_bounce_all</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
move_towards_point
-->
  <!-- TAGS
move_towards_point
-->
</body>
</html>