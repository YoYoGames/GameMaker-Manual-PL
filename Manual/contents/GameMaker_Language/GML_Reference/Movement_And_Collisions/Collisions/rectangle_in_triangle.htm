<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>przyprostokątna_w_trójkącie</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion rectangle_in_triangle" />
  <meta name="rh-index-keywords" content="rectangle_in_triangle" />
  <meta name="search-keywords" content="rectangle_in_triangle" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>przyprostokątna_w_trójkącie</h1>
  <p>Funkcja ta sprawdza, czy zdefiniowany przez użytkownika prostokątny obszar nie koliduje z obszarem docelowym, czy też po prostu się z nim styka, czyli czy jest to zdefiniowany obszar trójkątny. Jeśli w ogóle się nie stykają, funkcja zwróci 0, jeśli źródło znajduje się całkowicie wewnątrz miejsca docelowego, zwróci 1, a jeśli po prostu się pokrywają, zwróci 2. Ilustruje to poniższy rysunek:</p>
  <p><img alt="Rectangle triangle collision example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_triangle.png" /></p>
  <h4>Składnia:</h4>
  <p class="code">rectangle_in_triangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2, dx3, dy3);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">sx1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the left side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">sy1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the top side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">sx2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the right side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">sy2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the bottom side of the source rectangle.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">x1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the first side of the triangle to check.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the first side of the triangle to check.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">x2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the second side of the triangle to check.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the second side of the triangle to check.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">x3</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the third side of the triangle to check.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y3</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the third side of the triangle to check.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var inst = instance_nearest(x, y, obj_Player);<br />
    if instance_exists(inst)<br />
    {<br />
        var x1 = x + lengthdir_x(100, image_angle - 45);<br />
        var y1 = y + lengthdir_y(100, image_angle - 45);<br />
        var x2 = x + lengthdir_x(100, image_angle + 45);<br />
        var y2 = y + lengthdir_y(100, image_angle + 45);<br />
        if rectangle_in_triangle(inst.bbox_left, inst.bbox_top, inst.bbox_right, inst.bbox_bottom, x, y, x1, y1, x2, y2) == 1<br />
        {<br />
            can_see = true;<br />
        }<br />
    }</p>
  <p>Powyższy kod używa funkcji <span class="inline">rectangle_in_triangle</span> jako &quot;stożka widzenia&quot; do sprawdzenia, czy nie ma instancji &quot;obj_player&quot;. Jeśli pełny bounding box znajduje się w podanym obszarze trójkątnym, ustawi zmienną na <span class="inline">true</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Collisions.htm">Kolizje</a></div>
        <div style="float:right">Następny: <a href="rectangle_in_circle.htm"><span class="notranslate">rectangle_in_circle</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
rectangle_in_triangle
-->
  <!-- TAGS
rectangle_in_triangle
-->
</body>
</html>