<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>kolizja_okrąg</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion collision_circle" />
  <meta name="rh-index-keywords" content="collision_circle" />
  <meta name="search-keywords" content="collision_circle" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>kolizja_okrąg</h1>
  <p><span class="inline">Collision_circle</span> tworzy wokół punktów x1,y1 strefę kołową o promieniu podanym przez użytkownika, a następnie sprawdza tę strefę pod kątem kolizji z <b>dowolną</b> instancją obiektu <span class="notranslate">object</span> określoną przez argument &quot;obj&quot;. To sprawdzanie może być precyzyjne lub nie, ale aby precyzyjne kolizje były włączone, sprawdzana instancja lub <span class="notranslate">object</span> <i>musi</i> mieć włączone precyzyjne kolizje dla swojej <span class="notranslate">sprite</span>. Jeśli nie, domyślne sprawdzanie jest oparte na polach ograniczających. Poniższy rysunek ilustruje, jak to działa:</p>
  <p><img>Tutaj instancja w środku używa okręgu kolizyjnego do sprawdzania, czy piłka <span class="notranslate">objects</span>. Jak widać, nawet jeśli <span class="notranslate">sprite</span> <i>nie</i> dotyka okręgu, to i tak może dojść do kolizji (nawet jeśli ustawisz opcję precise w funkcji na true), ponieważ pole tego <span class="notranslate">sprite</span> zachodzi na okrąg zdefiniowany przez collision_circle. Z drugiej strony, zielone kulki zostaną uwzględnione w kolizji tylko wtedy, gdy rzeczywista <span class="notranslate">sprite</span> pokrywa się ze zdefiniowanym okręgiem. Pamiętaj, że aby kolizje były uwzględniane, <i>zarówno</i> funkcja <span class="notranslate">object</span> <span class="notranslate">sprite</span>, jak i funkcja kolizji muszą mieć zaznaczoną opcję precise. Należy również zauważyć, że wartością zwracaną przez funkcję może być identyfikator <i>dowolnej</i> z instancji uznanych za kolizyjne.</p>
  <p>Zauważ, że zamiast indeksu <span class="notranslate">object</span> można podać instancję <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><span class="inline">id</span></a> aby sprawdzić konkretną instancję, lub <a href="../../../GML_Overview/Instance_Keywords.htm">słowa kluczowe</a> instancji <span class="inline">all</span>, lub <span class="inline">other</span> (w zależności od zdarzenia i bieżącego zakresu kodu).</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">collision_circle(x1, y1, rad, obj, prec, notme);</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">x1</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x coordinate of the center of the circle to check.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">y1</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y coordinate of the center of the circle to check.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">rad</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The radius (distance in pixels from its center to its edge).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">obj</span></td>
        <td> <span data-keyref="Type_ID_Instance">Identyfikator</span>zasobu lub <span data-keyref="Type_ID_Instance">instancji</span><span data-keyref="Type_Asset_Object">obiektu</span> </td>
        <td><span class="notranslate">The object to check for instance collisions.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">prec</span></td>
        <td><span data-keyref="Type_Bool">Boolean</span></td>
        <td><span class="notranslate">Whether the check is based on pixel-perfect collisions (true = slow) or its bounding box in general (false = fast).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">notme</span></td>
        <td><span data-keyref="Type_Bool">Boolean</span></td>
        <td><span class="notranslate">Whether the calling instance, if relevant, should be excluded (<span class="inline">true</span>) lub nie (<span class="inline">false</span>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Instance">Instance ID</span> or <span data-keyref="Type_ID_noone">noone</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">if collision_circle(x, y, 20, obj_Cursor, false, true)<br />
    {<br />
        image_index = 1;<br />
    }<br />
    else image_index = 0;</p>
  <p>Powyższy kod sprawdzi, czy okrąg o promieniu 20 pikseli nie koliduje z &quot;obj_Cursor&quot; i jeśli tak się stanie, ustawi image_index strony <span class="notranslate">object</span> wykonującej kod na 1, ale jeśli nie, ustawi image_index strony <span class="notranslate">object</span> na 0.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Collisions.htm">Kolizje</a></div>
        <div style="float:right">Następny: <a href="collision_circle_list.htm"><span class="notranslate">collision_circle_list</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
collision_circle
-->
  <!-- TAGS
collision_circle
-->
</body>
</html>