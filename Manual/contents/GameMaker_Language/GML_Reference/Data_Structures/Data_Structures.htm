<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Struktury danych</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Data Structures" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Data Structures" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Struktury danych</h1>
  <p>W grach często zachodzi potrzeba przechowywania informacji w precyzyjny i uporządkowany sposób. Na przykład można przechowywać listę przedmiotów, które nosi dana osoba, lub siatkę miejsc, które trzeba jeszcze odwiedzić. Do tego celu <i>można</i> użyć tablic, ale jeśli chcesz wykonać bardziej skomplikowane operacje, takie jak sortowanie danych lub wyszukiwanie określonego elementu, musisz napisać duże fragmenty kodu <span class="notranslate">GML</span>, który może być powolny w wykonaniu, trudny do debugowania i naprawdę uciążliwy w pisaniu!</p>
  <p>Aby temu zaradzić, <span data-keyref="GameMaker Name">GameMaker</span> posiada szereg wbudowanych <b>struktur danych</b>, do których można uzyskać dostęp za pomocą specjalistycznych funkcji. Dostępnych jest sześć różnych typów struktur danych, a każdy z nich ma swoje zalety, zależne od rodzaju informacji, które chcesz przechowywać, i sposobu, w jaki chcesz nimi później manipulować: stosy, <span class="notranslate">queues</span>, listy, mapy, priorytety <span class="notranslate">queues</span> i siatki.</p>
  <p class="note"><strong>UWAGA</strong>: Zaleca się używanie <a href="../../GML_Overview/Arrays.htm">tablic</a> i <a href="../../GML_Overview/Structs.htm">struktów</a> zamiast list DS i map, ponieważ mają one podobne właściwości, są łatwiejsze w użyciu i są automatycznie odśmiecane.</p>
  <p>Zasadniczo wszystkie struktury danych działają w ten sam sposób - tworzysz strukturę danych i przechowujesz <i>wartość</i> jej indeksu w zmiennej. Następnie używasz tego indeksu do odwoływania się do struktury danych we wszystkich kolejnych wywołaniach funkcji, które mogą wykonywać na niej operacje. Na koniec, po zakończeniu pracy, ponownie niszczysz strukturę danych, aby usunąć ją z pamięci. W tym samym czasie można używać dowolnej liczby struktur, a wszystkie struktury mogą przechowywać dowolny z dostępnych <a href="../../GML_Overview/Data_Types.htm">typów danych</a>.</p>
  <p class="note"><b><span class="note">UWAGA</span> </b>Podobnie jak wszystkie zasoby dynamiczne, struktury danych zajmują pamięć, dlatego powinny być <b>zawsze</b> niszczone, gdy nie są już potrzebne, aby zapobiec wyciekom pamięci, które spowalniają grę i prowadzą do jej awarii.</p>
  <p>Gdy tworzysz strukturę danych, wartość indeksu używana do jej identyfikacji jest liczbą całkowitą zaczynającą się od 0. Oznacza to, że różne struktury danych mogą mieć tę <b>samą</b> wartość indeksu, więc jeśli masz wątpliwości, powinieneś użyć funkcji <span style="font-size:1px;"><span class="inline"><a data-xref="{title}" href="ds_exists.htm">ds_exists</a></span></span> przed uzyskaniem do nich dostępu. Należy również pamiętać, że indeksy są używane ponownie, więc wartość indeksu zniszczonej struktury danych może zostać użyta przez nowo utworzoną strukturę. Zalecamy więc, aby po zniszczeniu struktury danych ustawić każdą zmienną przechowującą indeks DS na -1.</p>
  <p>Informacje na temat różnych struktur danych można znaleźć w kolejnych rozdziałach:</p>
  <ul class="colour">
    <li><a href="DS_Grids/DS_Grids.htm">Siatki</a></li>
    <li><a href="DS_Lists/DS_Lists.htm">Listy</a></li>
    <li><a href="DS_Maps/DS_Maps.htm">Mapy</a></li>
    <li><a href="DS_Priority_Queues/DS_Priority_Queues.htm">Kolejki priorytetowe</a></li>
    <li><a href="DS_Queues/DS_Queues.htm">Kolejki</a></li>
    <li><a href="DS_Stacks/DS_Stacks.htm">Stosy</a></li>
  </ul>
  <p> </p>
  <p>Przed użyciem struktur danych w grze należy pamiętać, że w pewnych momentach, z powodu błędów zaokrąglania, można uzyskać wynik niezgodny z oczekiwaniami. Można temu zaradzić, zmieniając precyzję DS za pomocą poniższej funkcji:</p>
  <ul class="colour">
    <li><a href="ds_set_precision.htm"><span class="notranslate">ds_set_precision</span></a></li>
  </ul>
  <p> </p>
  <p>Istnieje również specjalna funkcja sprawdzająca, czy istnieje struktura danych danego typu:</p>
  <ul class="colour">
    <li><a href="ds_exists.htm"><span class="notranslate">ds_exists</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../GML_Reference.htm">Odniesienie do GML</a></div>
        <div style="float:right">Następny: <a href="../Strings/Strings.htm">Struny</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Data Structures
-->
  <!-- TAGS
data_structure_functions
-->
</body>
</html>