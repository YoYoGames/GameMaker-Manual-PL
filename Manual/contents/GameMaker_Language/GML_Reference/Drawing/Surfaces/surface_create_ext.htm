<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>surface_create_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for surface_create_ext" />
  <meta name="rh-index-keywords" content="surface_create_ext" />
  <meta name="search-keywords" content="surface_create_ext" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>surface_create_ext</h1>
  <p>Ta funkcja umożliwia dołączenie powierzchni do elementu canvas, który już istnieje na stronie internetowej, co oznacza, że można skutecznie podzielić fragmenty gry, aby były rysowane w różnych miejscach na stronie. W tym celu <i>musisz</i> poprawnie zdefiniować element canvas na stronie <span class="inline">*.html</span> swojej gry, używając odpowiednich rozmiarów i nazw odpowiadających powierzchniom, które chcesz utworzyć. W ten sposób powstanie &quot;główne&quot; płótno, a następnie elementy płótna powierzchni pomocniczych, które zostaną przypisane za pomocą tej funkcji do odpowiednich powierzchni. Na poniższym rysunku przedstawiono przykładową konfigurację strony z trzema elementami canvas:</p>
  <p><img>Układ strony może być skomplikowany, zwłaszcza jeśli chcesz, aby wszystkie elementy były ułożone w jednej linii. Po zakończeniu trudnego zadania tworzenia układu możesz dodać plik <span class="inline">html</span> jako domyślny plik strony gry, korzystając z <a href="../../../../Settings/Game_Options/HTML5.htm">zakładki HTML5</a> w <a href="../../../../Settings/Game_Options.htm">opcjach</a> gry. Następną rzeczą, którą powinieneś zrobić, jest skonfigurowanie strony <span class="notranslate">room</span> i widoków, ponieważ każda powierzchnia będzie musiała być powiązana z określonym widokiem, aby &quot;przechwytywać&quot; obrazy z gry (patrz zmienna widoku <a href="../../Cameras_And_Display/Cameras_And_Viewports/view_surface_id.htm"><span class="inline">view_surface_id[0...7]</span></a>). Na poniższym rysunku pokazano, jak powinna wyglądać gra <span class="notranslate">room</span> dla powyższego przykładu canvas:</p>
  <p><img>Następnie za pomocą tej funkcji utworzysz powierzchnie, których nazwa będzie taka sama, jak nazwa elementu canvas, a rozmiar będzie odpowiadał rozmiarowi tego samego płótna. Funkcja zwróci indeks powierzchni, który należy zapisać w zmiennej, aby móc ją wywoływać w przyszłości. Gdy powierzchnia jest tworzona po raz pierwszy, może zawierać &quot;szum&quot;, ponieważ w zasadzie jest to tylko obszar pamięci, który został odłożony na bok w tym celu (a pamięć ta może nadal zawierać informacje), więc możesz chcieć wyczyścić powierzchnię przed jej użyciem za pomocą funkcji takich jak <a href="../Colour_And_Alpha/draw_clear_alpha.htm"><span class="inline">draw_clear_alpha()</span></a>.</p>
  <p class="note"><b>UWAGA</b>: Ta funkcja jest dostępna tylko w przypadku korzystania z modułu HTML5.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">surface_create_ext(name, w, h);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">name</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The name of the canvas element to link the surface to.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">w</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The width of the surface to be created.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">h</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The height of the surface to be created.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Surface">Surface ID</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">s1 = surface_create_ext(&quot;surface1&quot;, 192, 550);<br />
    s2 = surface_create_ext(&quot;surface2&quot;, 608, 186);<br />
    view_surface_id[1] = s1;<br />
    view_surface_id[2] = s2;</p>
  <p>Powyższy kod tworzy dwie powierzchnie o różnych rozmiarach, przypisując każdą z nich do innego elementu płótna, a następnie powierzchnie te są przypisywane do dwóch widoków, tak aby uchwycić właściwą część strony <span class="notranslate">room</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Surfaces.htm">Powierzchnie</a></div>
        <div style="float:right">Następny: <a href="surface_resize.htm"><span class="notranslate">surface_resize</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
surface_create_ext
-->
  <!-- TAGS
surface_create_ext
-->
</body>
</html>