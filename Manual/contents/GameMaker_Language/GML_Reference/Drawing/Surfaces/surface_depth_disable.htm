<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>powierzchnia_głębokość_wyłączona</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for surface_depth_disable" />
  <meta name="rh-index-keywords" content="surface_depth_disable" />
  <meta name="search-keywords" content="surface_depth_disable" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>powierzchnia_głębokość_wyłączona</h1>
  <p>Ta funkcja wyłącza automatyczne generowanie głębokości <span class="notranslate">buffer</span> dla <i>wszystkich</i> powierzchni, które zostaną utworzone po jej wyłączeniu. Normalnie wszystkie powierzchnie mają głębokość <span class="notranslate">buffers</span>, więc jeśli narysujesz na nich obraz 3D <span class="notranslate">objects</span>, to zostaną one odpowiednio posortowane według głębokości, aby zachować funkcjonalny parytet między renderowaniem do powierzchni i renderowaniem do tyłu .
    aby zachować parytet funkcjonalny między renderowaniem do powierzchni i renderowaniem do tyłu <span class="notranslate">buffer</span>, jednak alokacja głębokości <span class="notranslate">buffers</span> zasadniczo podwaja ilość pamięci wymaganej dla powierzchni, co może być nadmiernym i niepotrzebnym narzutem
    zwłaszcza jeśli gra jest bardzo pamięciożerna, a w grach 2D nie są one na ogół wymagane.</p>
  <p>Aby użyć tej funkcji, należy ją wywołać <i>przed</i> utworzeniem powierzchni, a następnie można ją włączyć ponownie po utworzeniu powierzchni (w razie potrzeby). Wszystkie powierzchnie utworzone przy wyłączonej funkcji głębokość <span class="notranslate">buffer</span> nie będą już używać głębokości <span class="notranslate">buffer</span> podczas rysowania, co powoduje, że
    co powoduje, że przedmioty rysowane na powierzchni mają taką samą głębokość. Poniższe obrazy ilustrują to w praktyce:</p>
  <p><img>Na powyższym rysunku rysujemy prostokąt i trójkąt za pomocą strony <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> w 3D. Współrzędne
    współrzędne czerwonego trójkąta umieszczają go za zielonym prostokątem, ale kod rysujący trójkąt jest wywoływany <i>po</i> kodzie dla prostokąta, a gdy włączona jest głębia <span class="notranslate">buffer</span>, trójkąt jest nadal rysowany za prostokątem
    ponieważ głębia 3D jest respektowana. Jednak gdy wyłączymy głębię <span class="notranslate">buffer</span> dla powierzchni, zachowana zostanie tylko kolejność kodu, a więc trójkąt zostanie narysowany nad prostokątem.</p>
  <p class="note"><b>UWAGA</b>: Aby prawidłowo zachować głębię w przestrzeni 3D podczas korzystania z powierzchni, należy włączyć nie tylko funkcję Głębia <span class="notranslate">buffer</span>, ale także funkcje Z-zapisywanie i Z-testowanie. Więcej informacji na ten temat można znaleźć w funkcjach <a href="../GPU_Control/gpu_get_ztestenable.htm"><span class="inline"><span style="font-size:14px;">gpu_set_ztestenable()</span></a>    i <a href="../GPU_Control/gpu_get_zwriteenable.htm"><span class="inline"><span style="font-size:14px;">gpu_set_zwriteenable()</span></a> aby uzyskać więcej informacji.</p>
  <p class="note"><b>UWAGA</b>: Jeśli Twoja gra jest w 100% dwuwymiarowa lub wiesz, że nie potrzebujesz głębokości powierzchni <span class="notranslate">buffer</span>, to wystarczy, że raz wywołasz tę funkcję na początku gry, aby wyłączyć <span class="notranslate">buffer</span>.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">surface_depth_disable(disable);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">disable</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">If set to <span class="inline">true</span> bufor głębokości zostanie wyłączony dla utworzonych powierzchni.</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var _depth_setting = surface_get_depth_disable();<br/> surface_depth_disable(false);
    <br/> surface_with_depth = surface_create(room_width, room_height);<br/> surface_depth_disable(true);
    <br/> surface_without_depth = surface_create(room_width, room_height);<br/> surface_depth_disable(_depth_setting);
  </p>
  <p>Powyższy kod zapisuje bieżące ustawienie głębokości <span class="notranslate">buffer</span> w zmiennej, a następnie tworzy dwie powierzchnie, jedną z włączonym buforowaniem głębokości, a drugą bez, po czym przywraca pierwotne ustawienie.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Surfaces.htm">Powierzchnie</a></div>
        <div style="float:right">Następny: <a href="surface_get_height.htm"><span class="notranslate">surface_get_height</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
surface_depth_disable
-->
  <!-- TAGS
surface_depth_disable
-->
</body>
</html>