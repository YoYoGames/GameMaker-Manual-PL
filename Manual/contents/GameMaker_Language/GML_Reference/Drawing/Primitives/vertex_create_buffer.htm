<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_create_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_create_buffer" />
  <meta name="rh-index-keywords" content="vertex_create_buffer" />
  <meta name="search-keywords" content="vertex_create_buffer" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_create_buffer</h1>
  <p>Za pomocą tej funkcji można utworzyć nową stronę <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>. Jest to specjalny <i>grow</i> <span class="notranslate">buffer</span> utworzony przez <span data-keyref="GameMaker Name">GameMaker</span>, który jest wstępnie sformatowany do użycia podczas tworzenia prymitywów (na przykład do użycia z <span class="notranslate">shaders</span>). Funkcja zwróci indeks dla <span class="notranslate">buffer</span>, który powinien być używany we wszystkich kolejnych wywołaniach tej funkcji.</p>
  <p>Podczas korzystania z <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> utworzonego za pomocą tej funkcji wystarczy wywołać <a href="vertex_begin.htm"><span class="inline">vertex_begin()</span></a> aby rozpocząć przypisywanie do niego danych <span class="notranslate">vertex</span> w celu rozpoczęcia definiowania własnego prymitywu, który następnie będzie przechowywany w <span class="notranslate">buffer</span> gotowym do przesłania do <span class="notranslate">shader</span>. <span class="notranslate">buffer</span> może być ponownie użyty w razie potrzeby (chyba że użyto funkcji <a href="vertex_freeze.htm"><span class="inline">vertex_freeze()</span></a> ), przy czym każde wywołanie funkcji <a href="vertex_begin.htm"><span class="inline">vertex_begin()</span></a> wymazuje poprzednie dane <span class="notranslate">buffer</span> gotowe do przyjęcia nowych danych.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">vertex_create_buffer();</p>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer_Vertex">Vertex Buffer ID</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">v_buff = vertex_create_buffer();</p>
  <p>Powyższy kod utworzy nową stronę <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> i zapisze jej uchwyt w zmiennej &quot;v_buff&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Primitives_And_Vertex_Formats.htm">Prymitywy i <span class="notranslate">Vertex</span> Formaty</a></div>
        <div style="float:right">Następny: <a href="vertex_create_buffer_ext.htm"><span class="notranslate">vertex_create_buffer_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
vertex_create_buffer
-->
  <!-- TAGS
vertex_create_buffer
-->
</body>
</html>