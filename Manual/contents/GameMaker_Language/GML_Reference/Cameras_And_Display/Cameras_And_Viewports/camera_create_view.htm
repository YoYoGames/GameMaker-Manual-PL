<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>camera_create_view</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for camera_create_view" />
  <meta name="rh-index-keywords" content="camera_create_view" />
  <meta name="search-keywords" content="camera_create_view" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>camera_create_view</h1>
  <p>Ta funkcja utworzy nową kamerę, a następnie ustawi jej widok na stronie <span class="notranslate">room</span>, po czym zwróci unikatową wartość ID, która umożliwi identyfikację kamery w przyszłych wywołaniach funkcji. Kamera zostanie utworzona z wykorzystaniem wartości ustawionych w tej funkcji dla pozycji, rozmiaru i innych szczegółów, które odpowiadają wartościom ustawionym w edytorze <span class="notranslate">Room</span> (zobacz <a href="../../../../The_Asset_Editors/Rooms.htm">tutaj</a>). Należy pamiętać, że funkcja ta może przyjmować <i>różną liczbę argumentów</i>, przy czym obowiązkowe są tylko argumenty x/y position oraz width/height. W przypadku niepodanych argumentów zostaną użyte argumenty domyślne.</p>
  <p>Należy pamiętać, że kamery, jak wszystkie zasoby dynamiczne, zajmują pamięć w momencie utworzenia. Oznacza to, że należy uważać, aby nie tworzyć kamer niepotrzebnie i niszczyć te, które nie są potrzebne, wywołując funkcję <a href="camera_destroy.htm"><span class="inline">camera_destroy()</span></a>. Oznacza to także, że kamery będą trwały od <span class="notranslate">room</span> do <span class="notranslate">room</span>, jeśli zostaną przypisane do zmiennej <span class="inline">global</span> (będą trwały także, gdy zostaną przypisane do zmiennych instancji lub zmiennych lokalnych, ale nie można uzyskać do nich dostępu po zmianie <span class="notranslate">room</span>, stąd wyciek pamięci), więc można na przykład utworzyć nową kamerę, przypisać ją do zmiennej globalnej, a następnie na początku każdego <span class="notranslate">room</span> użyć funkcji <span class="inline">camera_set_*</span> do ustawienia właściwości przed przypisaniem jej do portu widoku.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">camera_create_view(room_x, room_y, width, height, [angle, object, x_speed, y_speed, x_border, y_border])</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">room_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x position (within the room) of the left side of the area the camera view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">room_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y position (within the room) of the top of the area the camera view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">width</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The width of the area the view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">height</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The height of the area the view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">angle</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Kąt, który ma być ustawiony dla widoku z kamery (od 0° do 360°, domyślnie 0).</td>
      </tr>
      <tr>
        <td><span class="notranslate">object</span></td>
        <td> <span data-keyref="Type_ID_Instance">Identyfikator</span>zasobu lub <span data-keyref="Type_ID_Instance">instancji</span><span data-keyref="Type_Asset_Object">obiektu</span> </td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Identyfikator obiektu (lub identyfikator instancji) dla widoku z kamery, który ma być śledzony (domyślnie -1, brak <span class="notranslate">object</span>).</td>
      </tr>
      <tr>
        <td><span class="notranslate">x_speed</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Maksymalna prędkość pozioma, z jaką może poruszać się widok (wartość domyślna -1 oznacza &quot;natychmiastowe&quot; podążanie za obrazem).</td>
      </tr>
      <tr>
        <td><span class="notranslate">y_speed</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Maksymalna prędkość pionowa, z jaką może poruszać się widok (wartość domyślna -1 oznacza natychmiastowe podążanie za widokiem).</td>
      </tr>
      <tr>
        <td><span class="notranslate">x_border</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Minimalna przestrzeń w poziomie między krawędzią obszaru widoku a instancją, za którą ma podążać (zanim widok zacznie się przesuwać i jeśli jest ustawiony na podążanie za instancją, domyślnie 0).</td>
      </tr>
      <tr>
        <td><span class="notranslate">y_border</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Minimalna przestrzeń w pionie między krawędzią obszaru widoku a instancją, za którą ma podążać (zanim widok zacznie się przesuwać i jeśli jest ustawiony na podążanie za instancją, domyślnie 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Camera">Camera ID</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">camera_destroy(view_camera[0]);<br />
    view_camera[0] = camera_create_view(0, 0, 640, 480, 0, obj_Player, 5, 5, -1, -1);</p>
  <p>Powyższy kod usuwa bieżącą kamerę przypisaną do rzutni[0], a następnie tworzy nową kamerę, definiuje jej właściwości widoku i przypisuje ją do rzutni[0].</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Cameras_And_View_Ports.htm">Kamery i porty podglądu</a></div>
        <div style="float:right">Następny: <a href="camera_destroy.htm"><span class="notranslate">camera_destroy</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
camera_create_view
-->
  <!-- TAGS
camera_create_view
-->
</body>
</html>