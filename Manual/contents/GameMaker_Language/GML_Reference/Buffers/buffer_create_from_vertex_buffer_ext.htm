<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_create_from_vertex_buffer_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_create_from_vertex_buffer_ext" />
  <meta name="rh-index-keywords" content="buffer_create_from_vertex_buffer_ext" />
  <meta name="search-keywords" content="buffer_create_from_vertex_buffer_ext,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_create_from_vertex_buffer_ext</h1>
  <p>Funkcja ta służy do alokowania w grze fragmentu pamięci w postaci strony <span class="notranslate">buffer</span> wypełnionej danymi z utworzonego wcześniej <a href="../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">bufora wierzchołków</a>. Funkcja zwraca unikalny identyfikator <i>bufora</i>, który powinien być przechowywany w zmiennej i używany we wszystkich dalszych wywołaniach funkcji na stronie <span class="notranslate">buffer</span>. Funkcja pobiera identyfikator dla <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>, który ma być użyty (zwrócony przez funkcję <a href="../Drawing/Primitives/vertex_create_buffer.htm"><span class="inline">vertex_create_buffer()</span></a>na przykład), a do określenia typu <span class="notranslate">buffer</span> używa się następujących stałych:</p>
  <table>
    <tbody>
      <tr>
        <th>Stała</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fixed</span></td>
        <td>Strona <span class="notranslate">buffer</span> o stałej wielkości.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_grow</span></td>
        <td>Strona <span class="notranslate">buffer</span>, która będzie &quot;rosła&quot; dynamicznie w miarę dodawania danych.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_wrap</span></td>
        <td>Strona <span class="notranslate">buffer</span>, na której dane będą &quot;zawijane&quot;. Gdy dodawane dane osiągną limit rozmiaru strony <span class="notranslate">buffer</span>, nadpisanie zostanie umieszczone z powrotem na początku strony <span class="notranslate">buffer</span>, a dalszy zapis będzie kontynuowany od tego miejsca.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fast</span></td>
        <td>Specjalny &quot;pozbawiony&quot; adres <span class="notranslate">buffer</span>, na którym odczyt/zapis jest bardzo szybki. Można go używać tylko z <a href="buffer_write.htm">typami danych</a> <span class="inline">buffer_u8</span> i <i>musi</i> być wyrównany do 1 bajtu.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_vbuffer</span></td>
        <td>Ten typ strony <span class="notranslate">buffer</span> należy stosować wyłącznie jako stronę <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>.</td>
      </tr>
    </tbody>
  </table>
  <p>Oprócz typu <span class="notranslate">buffer</span> należy także ustawić wyrównanie <i>bajtów</i> w buforze <span class="notranslate">buffer</span>. Wartość ta zależy od danych, które mają być przechowywane w buforze <span class="notranslate">buffer</span>, i w większości przypadków wartość 1 jest jak najbardziej odpowiednia. Należy jednak pamiętać, że w przypadku niektórych operacji określone wyrównanie jest <i>niezbędne</i>, a nieprawidłowe wyrównanie może powodować błędy (więcej szczegółów na temat wyrównania można znaleźć w części Wyrównanie <a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">bufora</a>). Poniżej przedstawiono ogólne wytyczne pokazujące, jakie wartości są najbardziej odpowiednie dla poszczególnych typów danych (w razie wątpliwości należy używać wyrównania do 1):</p>
  <ul class="colour">
    <li>Łańcuchy powinny być wyrównane do 1 bajtu.</li>
    <li>Znakowe lub niepodpisane 8-bitowe liczby całkowite mogą być wyrównane do dowolnej wartości, ale należy pamiętać, że w przypadku szybkiej strony <span class="notranslate">buffer</span> (zob. <a href="buffer_write.htm"><span class="inline">buffer_write()</span></a>) <i>muszą</i> być wyrównane do 1.</li>
    <li>Podpisane lub niepodpisane 16-bitowe liczby całkowite powinny być wyrównane do 2 bajtów.</li>
    <li>Podpisane lub niepodpisane 32-bitowe liczby całkowite powinny być wyrównane do 4 bajtów.</li>
    <li>Dane zmiennoprzecinkowe o długości do 16 bitów powinny być wyrównane do 2 bajtów. <i>(Obecnie nieobsługiwane!)</i></li>
    <li>Dane zmiennoprzecinkowe o długości do 32 bitów powinny być wyrównane do 4 bajtów.</li>
    <li>Dane zmiennoprzecinkowe o długości do 64 bitów powinny być wyrównane do 8 bajtów.</li>
  </ul>
  <p class="note"><b>UWAGA</b>: Adres <span class="notranslate">Vertex</span> <span class="notranslate">buffers</span> jest wyrównany do 1 bajta, ale można utworzyć adres <span class="notranslate">buffer</span> z dowolnym wyrównaniem, w zależności od tego, jak chcemy traktować dane, ponieważ dane z adresu <span class="notranslate">vertex</span> są po prostu surową kopią pamięci do adresu <span class="notranslate">buffer</span>.</p>
  <p>Ostatnie dwa argumenty służą do określenia zakresu danych <span class="notranslate">vertex</span>, które mają zostać skopiowane do nowo utworzonej strony <span class="notranslate">buffer</span>. Początek <span class="notranslate">vertex</span> może mieć dowolną wartość z przedziału od 0 do liczby wierzchołków -1, a następnie należy podać liczbę wierzchołków od tego punktu do skopiowania. Można użyć funkcji <span class="inline"><a href="../Drawing/Primitives/vertex_get_number.htm">vertex_get_number()</a></span> na stronie <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>, aby uzyskać całkowitą liczbę przechowywanych wierzchołków.</p>
  <p class="note"><b>UWAGA</b>: Ważne jest, aby usuwać z pamięci wszelkie dynamicznie tworzone zasoby, gdy nie są już potrzebne, aby zapobiec wyciekom pamięci, więc po zakończeniu pracy z utworzoną stroną <span class="notranslate">buffer</span> należy ją ponownie zwolnić, korzystając z polecenia <span style="font-size:1px;"><a href="buffer_delete.htm"><span class="inline">buffer_delete()</span></a></span>. Zwróć też uwagę, że <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> użyty do utworzenia nowego <span class="notranslate">buffer</span> również nie jest usuwany z pamięci i powinieneś użyć funkcji <span style="font-size:1px;"><a href="../Drawing/Primitives/vertex_delete_buffer.htm"><span class="inline">vertex_delete_buffer()</span></a></span> gdy nie jest już potrzebna.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">buffer_create_from_vertex_buffer_ext(vertex_buffer, type, alignment, start_vertex, num_vertices)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">vertex_buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer_Vertex">Vertex <span class="notranslate">Buffer</span> ID</span></td>
        <td><span class="notranslate">The vertex buffer index to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Buffer_Type">Typ bufora Stała</span></td>
        <td><span class="notranslate">The type of buffer to create (see the constants list below).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">alignment</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The byte alignment for the buffer</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">start_vertex</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The starting vertex.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">num_vertices</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The total number of vertices to copy.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer">Buffer ID</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var v_num = vertex_get_number(model_buff); player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1, 0, v_num - 1);</p>
  <p>Powyższy kod przydziela pamięć dla strony <span class="notranslate">buffer</span>, a następnie kopiuje do niej dane wszystkich wierzchołków z podanej strony <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>, zwracając indeks nowej strony <span class="notranslate">buffer</span>, który jest przechowywany w zmiennej &quot;player_buffer&quot;, do wykorzystania w przyszłości.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Buffers.htm">Bufory</a></div>
        <div style="float:right">Następny: <a href="buffer_delete.htm"><span class="notranslate">buffer_delete</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
buffer_create_from_vertex_buffer_ext
buffer_fixed
buffer_grow
buffer_wrap
buffer_fast
buffer_vbuffer
-->
  <!-- TAGS
buffer_create_from_vertex_buffer_ext
-->
</body>
</html>