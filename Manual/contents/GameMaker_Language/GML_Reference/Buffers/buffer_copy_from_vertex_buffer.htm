<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>bufor_kopiujący_z_werteksu</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_copy_from_vertex_buffer" />
  <meta name="rh-index-keywords" content="buffer_copy_from_vertex_buffer" />
  <meta name="search-keywords" content="buffer_copy_from_vertex_buffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>bufor_kopiujący_z_werteksu</h1>
  <p>Za pomocą tej funkcji można skopiować część (lub wszystkie) danych <span class="notranslate">vertex</span> zapisanych w jednej witrynie <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> do utworzonej wcześniej regularnej witryny <span class="notranslate">buffer</span>. Podczas kopiowania danych z <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> do zwykłego <span class="notranslate">buffer</span> za pomocą tej funkcji oba adresy <span class="notranslate">buffers</span> muszą być wcześniej utworzone (za pomocą przycisków <a href="../Drawing/Primitives/vertex_create_buffer.htm"><span class="inline">vertex_create_buffer()</span></a> i <a href="buffer_create.htm"><span class="inline">buffer_create()</span></a> na przykład). Można określić zakres danych <span class="notranslate">vertex</span>, które mają zostać skopiowane do <span class="notranslate">buffer</span>, gdzie początek <span class="notranslate">vertex</span> może mieć dowolną wartość od 0 do liczby wierzchołków -1, a następnie można podać liczbę wierzchołków od tego punktu do skopiowania. Możesz użyć funkcji <a href="../Drawing/Primitives/vertex_get_number.htm"><span class="inline">vertex_get_number()</span></a> na stronie <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>, aby uzyskać całkowitą liczbę przechowywanych wierzchołków. Na koniec podajesz indeks <span class="notranslate">buffer</span>, do którego mają zostać skopiowane dane <span class="notranslate">vertex</span>, oraz offset danych określający pozycję, do której mają zostać skopiowane dane <span class="notranslate">vertex</span> w docelowym adresie <span class="notranslate">buffer</span>.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">buffer_copy_from_vertex_buffer(vertex_buffer, start_vertex, num_vertices, dest_buffer, dest_offset);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">vertex_buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer_Vertex">Vertex <span class="notranslate">Buffer</span> ID</span></td>
        <td><span class="notranslate">The index of the vertex buffer to copy <i>from</i>.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">start_vertex</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The starting vertex.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">num_vertices</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The total number of vertices to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">dest_buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer">Identyfikator bufora</span></td>
        <td><span class="notranslate">The index of the buffer to copy <i>to</i>.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">dest_offset</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The offset position to copy the data to (in bytes).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var v_num = vertex_get_number(model_buff); buffer_copy_from_vertex_buffer(model_buffer, 0, v_num - 1, player_buffer, 0);</p>
  <p>Powyższy kod skopiuje dane <span class="notranslate">vertex</span> zapisane w pliku <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> zaindeksowanym w zmiennej &quot;model_buffer&quot;, a następnie wklei je do pliku <span class="notranslate">buffer</span> zaindeksowanego w zmiennej &quot;player_buffer&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Buffers.htm">Bufory</a></div>
        <div style="float:right">Następny: <a href="buffer_get_type.htm"><span class="notranslate">buffer_get_type</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
buffer_copy_from_vertex_buffer
-->
  <!-- TAGS
buffer_copy_from_vertex_buffer
-->
</body>
</html>