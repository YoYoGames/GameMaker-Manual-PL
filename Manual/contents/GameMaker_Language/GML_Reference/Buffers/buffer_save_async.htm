<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>bufor_zapisowy_async</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_save_async" />
  <meta name="rh-index-keywords" content="buffer_save_async" />
  <meta name="search-keywords" content="buffer_save_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>bufor_zapisowy_async</h1>
  <p>Za pomocą tej funkcji można zapisać część zawartości strony <span class="notranslate">buffer</span> do pliku, gotowego do ponownego wczytania do pamięci przy użyciu funkcji <a href="buffer_load.htm"><span class="inline">buffer_load()</span></a> (lub dowolnej innej funkcji służącej do ładowania <span class="notranslate">buffers</span>). Offset&quot; określa pozycję początkową w <span class="notranslate">buffer</span> do zapisania (w bajtach), a &quot;rozmiar&quot; to rozmiar obszaru <span class="notranslate">buffer</span>, który ma zostać zapisany od tego offsetu (również w bajtach). Ta funkcja działa asynchronicznie, więc gra będzie działać podczas zapisywania, a wszystkie pliki zapisane za jej pomocą zostaną umieszczone w folderze &quot;default&quot;. Folder ten <i>nie</i> musi być uwzględniany w nazwie pliku, ponieważ jest on dodawany automatycznie przez <span class="notranslate">GameMaker</span>. Na przykład plik o nazwie <span class="notranslate">path</span> &quot;<span class="inline">Data\Player_Save.sav</span>&quot; zostanie w rzeczywistości zapisany w folderze &quot;<span class="inline">default\Data\Player_Save.sav</span>&quot;. Jeśli jednak następnie wczytasz plik za pomocą funkcji <a href="buffer_load_async.htm"><span class="inline">buffer_load_async()</span></a>nie trzeba też podawać &quot;domyślnej&quot; części adresu <span class="notranslate">path</span> (ale każda inna funkcja pliku <i>będzie</i> jej wymagać, z wyjątkiem konsol Xbox One, PS4 i <span class="notranslate">Nintendo</span> <span class="notranslate">Switch</span>).</p>
  <p class="note"><b>UWAGA</b>: W HTML5 &quot;default/&quot; nie jest dodawane automatycznie i może być konieczne uwzględnienie tego w kodzie.</p>
  <p>Funkcja zwróci unikalną wartość identyfikatora i wywoła <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Save_Load.htm">zdarzenie asynchronicznego zapisu/ładowania</a>, w którym można użyć zwróconego identyfikatora do sprawdzenia wartości identyfikatora <span class="inline">async_load</span>, jak pokazano w poniższym przykładzie rozszerzonym. Mapa <a href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a> mapa w zdarzeniu będzie zawierać następujące dwie pary klucz/wartość:</p>
  <ul>
    <li><b>&quot;id&quot;: </b>identyfikator funkcji asynchronicznej zwrócony przez funkcję zapisu.</li>
    <li><b>&quot;status&quot;: </b>zwraca <span class="inline">true</span>, jeśli dane zostały zapisane/wczytane poprawnie, a <span class="inline">false</span> w przeciwnym wypadku.</li>
  </ul>
  <p>Zauważ, że można zapisać wiele stron <span class="notranslate">buffers</span> w jednej, wywołując tę funkcję wielokrotnie pomiędzy wywołaniami funkcji <a href="buffer_async_group_begin.htm"><span class="inline">buffer_async_group_begin()</span></a> i <a href="buffer_async_group_end.htm"><span class="inline">buffer_async_group_end()</span></a> (więcej informacji na ten temat można znaleźć w tych funkcjach).</p>
  <p class="note"><b>UWAGA</b>: W przypadku HTML5 zwrócone wyniki są zapisywane w postaci zakodowanej w base64 na stronie <span class="notranslate">strings</span> podczas zapisywania do pliku.</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">buffer_save_async(buffer, filename, offset, size);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td><td><span data-keyref="Type_ID_Buffer"></span></td>
        <td><span class="notranslate">The index of the buffer to save.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">filename</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The name of the file to save as.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">offset</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The offset within the buffer to save from (in bytes).</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">size</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The size of the buffer area to save (in bytes).</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Przykład rozszerzony:</h4>
  <p>Funkcję <span class="inline">buffer_save_async()</span> można wywołać z dowolnego zdarzenia, a ponieważ jest to funkcja asynchroniczna, wywołanie zwrotne może być niemal natychmiastowe lub może trwać kilka sekund. Wywołanie funkcji jest proste i wygląda mniej więcej tak:</p>
  <p class="code">saveid = buffer_save_async(buff, &quot;Player_Save.sav&quot;, 0, 16384);</p>
  <p>Powyższy kod zapisuje zawartość strony <span class="notranslate">buffer</span> &quot;<i>buff</i>&quot; do podanego pliku zapisu, przechowując identyfikator wywołania funkcji w zmiennej &quot;<i>saveid</i>&quot;. Po zakończeniu zapisu zostanie wywołane zdarzenie asynchroniczne Save/Load i będzie można odczytać mapę <span class="inline">async_load</span> w celu znalezienia właściwego identyfikatora funkcji, jak poniżej:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == saveid<br />
    {<br />
        if ds_map_find_value(async_load, &quot;status&quot;) == false<br />
        {<br />
            show_debug_message(&quot;Save failed!&quot;);<br />
        }<br />
    }</p>
  <p>Powyższy kod najpierw sprawdzi identyfikator utworzonej mapy DS, a następnie sprawdzi stan wywołania zwrotnego, publikując komunikat debugowania, jeśli wystąpiły jakieś problemy.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Buffers.htm">Bufory</a></div>
        <div style="float:right">Następny: <a href="buffer_load.htm"><span class="notranslate">buffer_load</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
buffer_save_async
-->
  <!-- TAGS
buffer_save_async
-->
</body>
</html>