<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sortuj_sort</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function array_sort" />
  <meta name="rh-index-keywords" content="array_sort" />
  <meta name="search-keywords" content="array_sort" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span>sortuj_sort</span></h1>
  <p>Za pomocą tej funkcji można posortować tablicę w kolejności rosnącej lub malejącej, lub też użyć własnej funkcji do określenia kolejności sortowania. Funkcja wymaga podania tablicy do posortowania, a następnie wykonania jednej z poniższych czynności:</p>
  <ul class="colour">
    <li>Stałe <span class="inline">true</span> lub <span class="inline">false</span> wskazujące <span>rosnącą (<span class="inline">true</span>) lub malejącą (<span class="inline">false</span>) kolejność sortowania</span></li>
    <li>Własna funkcja określająca kolejność sortowania</li>
  </ul>
  <p>Ta funkcja zmodyfikuje zawartość oryginalnej tablicy, która została dostarczona. Aby utworzyć posortowaną kopię, należy najpierw zduplikować tablicę za pomocą <span class="inline"><a href="array_copy.htm">array_copy()</a></span>, a następnie przekazać ją do tej funkcji.</p>
  <h3>Użycie funkcji niestandardowej</h3>
  <p>Jeśli do sortowania używana jest funkcja niestandardowa, musi ona przyjmować dwa argumenty, które otrzymają odpowiednio wartości bieżącego elementu i następnego elementu. Funkcja powinna zwracać dowolną z poniższych wartości, aby wpłynąć na kolejność sortowania (gdzie <span class="inline">elm1</span> to bieżący element, a <span class="inline">elm2</span> to następny element):</p>
  <ul class="colour">
    <li><span class="inline">0</span>: jeśli <span class="inline">elm1</span> i <span class="inline">elm2</span> są równe</li>
    <li><span class="inline">&lt;= -1</span> (ujemna liczba całkowita): jeśli <span class="inline">elm1</span> jest przed <span class="inline">elm2</span></li>
    <li><span class="inline">&gt;= 1</span> (dodatnia liczba całkowita): jeśli <span class="inline">elm1</span> idzie za <span class="inline">elm2</span></li>
  </ul>
  <p class="note"><span class="note">UWAGA</span> Wartość zwracana przez funkcję własną musi być liczbą całkowitą. Wartości zmiennoprzecinkowe mniejsze niż 1 zostaną odczytane jako 0, dlatego należy użyć <a href="../Maths_And_Numbers/Number_Functions/sign.htm"><span class="inline">sign()</span></a> lub <a href="../Maths_And_Numbers/Number_Functions/round.htm"><span class="inline">round()</span></a> jeśli funkcja operuje na wartościach zmiennoprzecinkowych.</p>
  <p>Jeśli tablica zawiera zestaw <span class="notranslate">strings</span>, to w przypadku domyślnego sortowania rosnącego i malejącego tablice <span class="notranslate">strings</span> zostaną posortowane alfabetycznie, zgodnie z alfabetem angielskim. Wszystkie inne typy danych zostaną posortowane na podstawie wartości liczbowych, których dokładne wartości zależą od typu danych (na przykład tablica <span class="notranslate">buffers</span> zostanie posortowana na podstawie wartości liczbowych ich adresów pamięci).</p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">array_sort(variable, sorttype_or_function);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">variable</span></td>
        <td><span data-keyref="Type_Array"><a href="../../../../GameMaker_Language/GML_Overview/Arrays.htm" target="_blank">Tablica</a></span></td>
        <td><span class="notranslate">The variable that holds the array.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span>sorttype_or_function<span> </span></td>
        <td><span data-keyref="Type_Bool"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span> lub <span data-keyref="Type_Function_Script"><a href="../../../../GameMaker_Language/GML_Overview/Script_Functions.htm" target="_blank">Funkcja skryptu</a></span>/<span data-keyref="Type_Method"><a href="../../../../GameMaker_Language/GML_Overview/Method_Variables.htm" target="_blank">Metoda</a></span></td>
        <td><span class="notranslate">The sort type (<span><span class="inline">true</span> w przypadku sortowania rosnącego lub <span class="inline">false</span> w przypadku sortowania malejącego) lub odwołanie do funkcji, która ma być użyta do sortowania.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var _a = [10, 9, 8, 7, 6, 5];<br />
    <br />
    array_sort(_a, function(elm1, elm2)<br />
    {<br />
        return elm1 - elm2;<br />
    });
  </p>
  <p>Powyższy kod wykorzystuje własną funkcję sortującą do posortowania tablicy w porządku rosnącym. Funkcja sortująca pobiera dwa elementy tablicy: <span class="inline">elm1</span> oraz <span class="inline">elm2</span> i wykonuje na nich odejmowanie. Jeśli adres <span class="inline">elm1</span> jest większy od adresu <span class="inline">elm2</span>, to w wyniku odejmowania otrzymujemy liczbę dodatnią, która przesuwa adres <span class="inline">elm1</span> za adres <span class="inline">elm2</span>, co powoduje ułożenie ich w kolejności rosnącej.</p>
  <p>Oto rozszerzony przykład:</p>
  <p class="code">var _xx, _yy, _a;<br />
    <br />
    for (var i = 0; i &lt; 10; i++)<br />
    {<br />
        _xx = irandom(room_width);<br />
        _yy = irandom(room_height);<br />
        _a[i] = instance_create_layer(_xx, _yy, layer, obj_Bullet);<br />
    }<br />
    <br />
    show_debug_message(_a);<br />
    <br />
    var _f = function(inst1, inst2)<br />
    {<br />
        return inst1.x - inst2.x;<br />
    }<br />
    <br />
    array_sort(_a, _f);<br />
    show_debug_message(_a);
  </p>
  <p>Powyższy kod utworzy tablicę z 10 instancjami umieszczonymi w losowych miejscach na stronie <span class="notranslate">room</span>. Komunikat debugowania będzie wyglądał następująco:</p>
  <p class="code">[ 100003,100004,100005,100006,100007,100008,100009,100010,100011,100012 ]</p>
  <p>Następnie kod tworzy metodę używaną w funkcji <span class="inline">array_sort()</span>, która zwraca różnicę między każdą z pozycji X instancji w tablicy <span class="notranslate">room</span>. Następnie funkcja <span class="inline">array_sort()</span> jest uruchamiana przy użyciu tej metody, sortując instancje według pozycji X od najniższej do najwyższej. Wynik dla tablicy będzie wyglądał następująco:</p>
  <p class="code">[ 100011,100004,100009,100006,100012,100008,100010,100005,100007,100003 ]</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Variable_Functions.htm">Funkcje zmienne</a></div>
        <div style="float:right">Następny: <a href="array_length.htm"><span class="notranslate">array_length</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
array_sort
-->
  <!-- TAGS
array_sort
-->
</body>
</html>