<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_stringify</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_stringify" />
  <meta name="rh-index-keywords" content="json_stringify" />
  <meta name="search-keywords" content="json_stringify" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_stringify</h1>
  <p>Za pomocą tej funkcji można konwertować pojedyncze lub zagnieżdżone <span class="notranslate">structs</span> i tablice na poprawny JSON <span class="notranslate">string</span>. Podajesz wartość początkową, której chcesz użyć (indeks tablicy lub referencję do <span class="notranslate">struct</span> ), a następnie funkcja &quot;stringifikuje&quot; ją, przekształcając w łańcuch JSON (przekształcając tablice <span class="notranslate">GameMaker</span> w tablice JSON, a <span class="notranslate">GameMaker</span> <span class="notranslate">structs</span> w JSON <span class="notranslate">objects</span>).</p>
  <p>Podczas korzystania z tej funkcji należy pamiętać o kilku ważnych rzeczach:</p>
  <ul class="colour">
    <li>Funkcja <em>nie </em> konwertuje map DS, list ani żadnych innych struktur danych na JSON, a jedynie przechowuje wewnętrzną wartość indeksu dla struktury (co jest mało użyteczne, ponieważ indeks będzie się zmieniał między kolejnymi uruchomieniami gry), dlatego nie należy próbować przekształcać na postać łańcuchową żadnych wartości, które mogą zawierać odniesienia do struktur danych (do tego celu służy funkcja <a href="json_encode.htm"><span class="inline">json_encode()</span></a>).</li>
    <li>Funkcja przekształci prawie każdą wartość w &quot;poprawny&quot; JSON <span class="notranslate">string</span>, jednak rzeczywiste wartości zawarte w <span class="notranslate">string</span> mogą nie być dokładnie takie, jakich oczekujesz, ze względu na sposób działania standardu JSON:<br>
      <br>
      &quot;JSON jest agnostyczny w kwestii liczb. W każdym języku programowania może występować wiele typów liczb o różnych pojemnościach i dopełnieniach, stałych lub zmiennopozycyjnych, binarnych lub dziesiętnych. Może to utrudniać wymianę danych między różnymi językami programowania. JSON oferuje natomiast tylko taką reprezentację liczb, jakiej używa człowiek: <span class="notranslate">sequence</span> cyfr. Wszystkie języki programowania wiedzą, jak korzystać z <span class="notranslate">sequences</span> cyfr, nawet jeśli nie zgadzają się co do ich wewnętrznej reprezentacji.&quot;<br>
      <br>
      Więcej informacji można znaleźć w dokumencie <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">ECMA JSON Standard</a>.
    </li>
    <li>Jeśli w wartościach do konwersji na JSON zawrzesz int64, GameMaker zapisze je jako <i>int</i>, jeśli mieszczą się w prawidłowym zakresie dla int32, jako <i>double</i>, jeśli może to zrobić bez utraty precyzji, lub (jeśli żaden z tych przypadków nie ma zastosowania) jako <i>ciąg</i> znaków z identyfikatorem &quot;<span class="inline">@i64@</span>&quot; przed nim i &quot;<span class="inline">$i64$</span>&quot; po nim. Gdy ponownie przejdziesz do parsowania JSON, <span data-keyref="GameMaker Name">GameMaker</span> wyłapie te identyfikatory i ponownie przekonwertuje wartość na int64. Oznacza to, że jeśli JSON jest przeznaczony dla <span class="notranslate">server</span> lub innego obiektu niebędącego programem GameMaker, wartości te nie będą odpowiednie i należy ich unikać.</li>
    <li>Jeśli wśród wartości, które mają zostać przekonwertowane na JSON, znajdą się <span class="inline">infinity</span>, <span class="inline">-infinity</span> lub <span class="inline">NaN</span>, zostaną one zakodowane jako <span class="notranslate">strings</span>, ponieważ wartości te nie są częścią standardu JSON, a podczas przetwarzania wynikowego JSON <strong>nie </strong>zostaną one przekonwertowane z powrotem na ich wartości <span class="notranslate">runtime</span> i pozostaną jako <span class="notranslate">strings</span>. Zwróć uwagę, że <span class="inline">NaN</span> zostanie zamienione na &quot;nan&quot; (małe litery) przy przetwarzaniu łańcuchowym.</li>
    <li>Należy zachować ostrożność podczas zapisywania zwróconego ciągu JSON do pliku <span class="inline">ini</span>, ponieważ specyfikacja <span class="inline">ini</span> może powodować problemy podczas używania cudzysłowów i znaków escape. Więcej informacji na ten temat można znaleźć w funkcji <a href="../Ini_Files/ini_write_string.htm"><span class="inline">ini_write_string()</span></a> aby uzyskać więcej informacji.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">json_stringify(val)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">val</span></td>
        <td><span data-keyref="Type_Struct">Struktura</span> lub <span data-keyref="Type_Array">tablica</span></td>
        <td><span class="notranslate">The reference value for a struct or array to convert into a JSON string</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_String">String</span></p>
  <p> </p>
  <h4>Przykład:</h4>
  <p class="code">var _contents =<br />
    {<br />
        version : &quot;1.0.0&quot;,<br />
        data:<br />
        {<br />
            coins : 4,<br />
            mana : 15,<br />
            playername : &quot;Gurpreet&quot;,<br />
            items :<br />
            [<br />
                ITEM.SWORD,<br />
                ITEM.BOW,<br />
                ITEM.GUITAR<br />
            ]<br />
        }<br />
    };<br />
    <br />
    var _json_string = json_stringify(_contents);
  </p>
  <p>Powyższy kod skonwertuje plik <span class="inline2">_contents</span> <span class="notranslate">struct</span> na plik JSON <span class="notranslate">string</span> i zapisze plik <span class="notranslate">string</span> w zmiennej. Zwrócona strona <span class="notranslate">string</span> będzie wyglądać następująco:</p>
  <p class="code">{ &quot;data&quot;: { &quot;items&quot;: [ 0.0, 1.0, 2.0 ], &quot;coins&quot;: 4.0, &quot;mana&quot;: 15.0, &quot;playername&quot;: &quot;Gurpreet&quot; }, &quot;version&quot;: &quot;1.0.0&quot; }</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Encoding_And_Hashing.htm">Kodowanie plików</a></div>
        <div style="float:right">Następny: <a href="json_parse.htm"><span class="notranslate">json_parse</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
json_stringify
-->
  <!-- TAGS
json_stringify
-->
</body>
</html>