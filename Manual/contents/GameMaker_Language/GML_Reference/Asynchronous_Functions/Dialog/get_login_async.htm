<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>get_login_async</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for get_login_async" />
  <meta name="rh-index-keywords" content="get_login_async" />
  <meta name="search-keywords" content="get_login_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>get_login_async</h1>
  <p>Ta funkcja otwiera okno, w którym użytkownik jest proszony o wprowadzenie nazwy użytkownika i hasła. Argumenty te mogą być ustawione jako puste <span class="notranslate">string</span> lub możesz przechowywać wcześniej wprowadzone wartości, które możesz wykorzystać, jeśli chcesz. Jest to funkcja asynchroniczna, dlatego <span data-keyref="GameMaker Name">GameMaker</span> <i>nie</i> blokuje urządzenia, na którym jest uruchamiana, w oczekiwaniu na odpowiedź, lecz kontynuuje wykonywanie zdarzeń w normalny sposób. Gdy użytkownik wprowadzi dane i naciśnie przycisk &quot;OK&quot;, wywoływane jest asynchroniczne zdarzenie <b>User Interaction</b>, które <i>tylko</i> na czas trwania tego zdarzenia będzie miało mapę DS zapisaną w zmiennej <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>.</p>
  <p>Ta mapa będzie zawierać dwa klucze: &quot;<strong>nazwa</strong> użytkownika&quot; i &quot;<strong>hasło</strong>&quot;, a w każdym z nich będą przechowywane odpowiednie dane wejściowe użytkownika. Ponieważ jest to utworzona mapa DS, może ona zostać wykorzystana na przykład przez funkcję <a href="../../File_Handling/Encoding_And_Hashing/json_encode.htm"><span class="inline">json_encode()</span></a> gotową do wysłania na adres <span class="notranslate">server</span> lub zapisania w pliku na wybranym urządzeniu.</p>
  <p>Funkcja ta zwróci numer indeksu wywołanego zdarzenia asynchronicznego, który można następnie sprawdzić w odpowiednim zdarzeniu, aby można było &quot;wycelować&quot; w konkretne dane w przypadku, gdy spodziewamy się wywołania więcej niż jednego zdarzenia asynchronicznego (być może przez inną funkcję).</p>
  <p class="note"><strong><em><span class="note">UWAGA</span></em></strong><em> Ta funkcja jest przeznaczona <span data-keyref="Dialog for debug only"> <strong>wyłącznie do debugowania i testowania</strong></span>i <span data-keyref="Dialog for debug only">nie powinna być używana w wydanych grach. W tym celu powinieneś stworzyć własny interfejs użytkownika, który będzie odbierał dane od graczy, tak abyś miał pełną kontrolę nad wyglądem i zachowaniem okien dialogowych.</span></em></p>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">get_login_async(name, password);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Typ</th>
        <th>Opis</th>
     </tr>
      <tr>
        <td><span class="notranslate">username</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The default user name</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">password</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The default password</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Przykład rozszerzony:</h4>
  <p>W <b>zdarzeniu create</b> (na przykład) strony <span class="notranslate">object</span>, która kontroluje logowanie naszego użytkownika, znalazłby się następujący kod:</p>
  <p class="code">ini_open(&quot;Profile.ini&quot;);<br />
    u = ini_read_string(&quot;User&quot;,&quot;0&quot;,&quot;&quot;);<br />
    p = ini_read_string(&quot;User&quot;,&quot;1&quot;,&quot;&quot;);<br />
    ini_close();<br />
    login = get_login_async(u,p);</p>
  <p>Powyższy kod otwiera plik ini (lub tworzy go, jeśli nie istnieje) i pobiera nazwę oraz hasło zapisane w tym pliku. Jeśli nie istnieją, zwracana jest domyślnie pusta strona <span class="notranslate">string</span> (&quot;&quot;). Wartości te są następnie wykorzystywane w <span class="inline">get_login_async()</span> do zapytania użytkownika o nazwę użytkownika i hasło, przy czym indeks żądania jest przechowywany w zmiennej &quot;login&quot;. Należy pamiętać, że podczas oczekiwania na podanie przez użytkownika niezbędnych informacji gra i jej wydarzenia będą przebiegać normalnie.</p>
  <p>Teraz, gdy kod asynchroniczny został już uruchomiony, musimy sprawdzić wartość zwracaną w <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">zdarzeniu asynchronicznym dla Dialogów</a> w następujący sposób:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == login<br />
    {<br />
        u = ds_map_find_value(async_load, &quot;username&quot;);<br />
        p = ds_map_find_value(async_load, &quot;password&quot;);<br />
    }</p>
  <p>Powyższy kod sprawdza klucz &quot;id&quot; mapy <span class="inline">async_load</span> DS i jeśli ma on tę samą wartość, co wartość przechowywana w zmiennej &quot;login&quot;, szczegóły mapy są wczytywane do odpowiednich zmiennych, które można następnie zapisać lub użyć do sprawdzenia wartości w bazie danych itp.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Dialog.htm">Dialog</a></div>
        <div style="float:right">Następny: <a href="get_string_async.htm"><span class="notranslate">get_string_async</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
get_login_async
-->
  <!-- TAGS
get_login_async
-->
</body>
</html>