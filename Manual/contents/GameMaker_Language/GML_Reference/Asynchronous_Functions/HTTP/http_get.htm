<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get" />
  <meta name="rh-index-keywords" content="http_get" />
  <meta name="search-keywords" content="http_get" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get</h1>
  <p>Za pomocą tej funkcji łączysz się z podanym adresem URL w celu pobrania informacji. Ponieważ jest to funkcja asynchroniczna, <span data-keyref="GameMaker Name">GameMaker</span> nie będzie blokował się w oczekiwaniu na odpowiedź, ale będzie działał dalej, dopóki nie otrzyma informacji zwrotnej. Informacja ta będzie miała postać <span class="notranslate">string</span> i wywoła <b>Async Event</b> w każdej instancji, która ma go zdefiniowanego w swoich właściwościach <span class="notranslate">object</span>. Powinieneś również zauważyć, że parametry żądania HTTP (bity czasami &quot;przyklejone&quot; do końca adresu URL, gdy przesyłasz formularz na stronie internetowej) są całkowicie dopuszczalne podczas korzystania z tej funkcji, na przykład:</p>
  <p class="code">http_get(&quot;http://www.example.com/logon?username=&quot;+name);</p>
  <p>przekaże adres <span class="notranslate">string</span> przechowywany w zmiennej &quot;name&quot; do <span class="notranslate">server</span> oraz pobierze dane z tego adresu URL. Tak więc, zasadniczo, za każdym razem, gdy prosty, krótki kawałek danych musi być przekazany od klienta do <span class="notranslate">server</span>, to będzie rozsądny wybór jako funkcja do użycia.</p>
  <p class="note"><b>UWAGA</b>: Należy pamiętać, że ze względu na ochronę XSS w przeglądarkach, żądania i próby załadowania zasobów z innych domen są blokowane i mogą zwrócić puste wyniki. Więcej informacji na ten temat znajduje się w rozdziale <a href="HTTP.htm">Problemy z domenami</a>.</p>
  <p>Ta funkcja wygeneruje wiele &quot;wywołań zwrotnych&quot;, które są odbierane przez dowolne <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">zdarzenia HTTP</a>. Będą one generować <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> (bardziej znany jako &quot;słownik&quot;), który jest wyłączny dla tego zdarzenia i jest przechowywany w specjalnej zmiennej <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Ta mapa DS będzie zawierała różne wartości w zależności od tego, czy są zwracane dane, czy nie. Na przykład, jeśli użytkownik zażądał pliku, zdarzenie będzie wyzwalane wielokrotnie, gdy każdy pakiet danych zostanie odebrany, aby można było na przykład pokazać pasek postępu. Ogólna struktura dla mapy DS będzie następująca:</p>
  <ul class="colour">
    <li><b>id: </b>ID, który został zwrócony z polecenia. Jeśli wystrzelisz serię żądań <span class="inline">http_</span>, musisz wiedzieć, na które z nich otrzymujesz odpowiedź, a więc użyłbyś tej wartości do porównania z wartością, którą przechowywałeś, gdy pierwotnie wysłałeś żądanie, aby znaleźć właściwą.</li>
    <li><b>status: </b>Zwraca wartość mniejszą niż 0 dla błędu, 0 dla kompletnego i 1 dla odbierania pakietów (więcej szczegółów w dalszej części tekstu).</li>
    <li><b>wynik: </b>Otrzymane dane ( tylko<span class="notranslate">string</span> ).</li>
    <li><b>url: </b>Pełny adres URL, o który prosiłeś.</li>
    <li><b>http_status: </b>Surowy kod statusu http (jeśli jest dostępny). To zwraca standardowy kod statusu sieci dla większości przeglądarek, np: 304 dla &quot;Not Modified&quot; lub 204 dla &quot;No Content&quot;, itp.</li>
  </ul>
  <p>Jeśli istnieje wiele pakietów zwracanych do twojej gry, klucz callback &quot;status&quot; zwróci 1, w którym to przypadku mapa DS będzie miała następujące dodatkowe klucze:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Jest to rozmiar pliku, o którym strona <span class="notranslate">server</span> powiedziała, że powinieneś oczekiwać jego otrzymania (może być -1, jeśli strona <span class="notranslate">server</span> nie zwraca tych danych).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>Rozmiar danych, które zostały już pobrane.</li>
  </ul>
  <p> </p>
  <h4>Składnia:</h4>
  <p class="code">http_get(url);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Typ</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">url</span></td>
        <td><span data-keyref="Type_String"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td><span class="notranslate">The web address of the server that you wish to get information from</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Zwroty:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event"><a href="../../../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm" target="_blank">Async Request ID</a></span></p>
  <p> </p>
  <h4>Przykład rozszerzony:</h4>
  <p>Funkcja <span class="inline">http_get()</span> może być wywołana z dowolnego zdarzenia, a ponieważ jest asynchroniczna, wywołanie zwrotne może być prawie natychmiastowe lub może trwać kilka sekund. Wywołanie funkcji jest proste i wyglądałoby coś takiego:</p>
  <p class="code">get = http_get(&quot;http://www.MacSweeneyGames.com/logon?username=&quot; + name);</p>
  <p>Powyższy kod przekaże adres <span class="notranslate">string</span> przechowywany w zmiennej &quot;name&quot; do podanego adresu <span class="notranslate">server</span>, a także pobierze dane z tego adresu URL, wyzwalając zdarzenie Async Event, które będzie zawierało mapę async_load DS (indeks mapy async_load będzie przechowywany w zmiennej &quot;get&quot;, dzięki czemu można sprawdzić, czy jest to właściwy callback). Wywołane zdarzenie Async Event byłoby sub-zdarzeniem <b>HTTP</b>, a w tym zdarzeniu miałbyś następujące:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == get<br />
    {<br />
        if ds_map_find_value(async_load, &quot;status&quot;) == 0<br />
        {<br />
            r_str = ds_map_find_value(async_load, &quot;result&quot;);<br />
        }<br />
        else<br />
        {<br />
            r_str = &quot;null&quot;;<br />
        }<br />
    }</p>
  <p>Powyższy kod najpierw sprawdzi id utworzonej mapy DS, a następnie sprawdzi &quot;status&quot; wywołania zwrotnego. Jeśli wartość jest równa 0 (sygnalizując sukces), wynik z callbacka zostanie zapisany w zmiennej do przyszłego użytku, w przeciwnym razie zmienna zostanie ustawiona na wartość domyślną (w tym przypadku &quot;null&quot;).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Następny: <a href="http_get.htm"><span class="notranslate">http_get_file</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone</span></h5>
  </div>
  <!-- KEYWORDS
http_get
-->
  <!-- TAGS
http_get
-->
</body>
</html>