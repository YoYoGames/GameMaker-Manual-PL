<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Tworzenie sieci</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Networking  functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Networking" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Tworzenie sieci</h1>
  <p>Funkcje sieciowe <span data-keyref="GameMaker Name">GameMakera</span> oparte są na <i>gniazdach</i>, które są standardem przemysłowym na wszystkich platformach. Dzięki gniazdom masz możliwość tworzenia zarówno klientów, jak i <span class="notranslate">servers</span> przy użyciu prostego <span class="notranslate">GML</span>, co pozwala na stworzenie nawet gry dla jednego gracza przy użyciu modelu klient/serwer (coś, co pozwoli na łatwe dodanie multiplayera później).</p>
  <p>Zasadniczo gniazdo to <span class="notranslate">object</span>, które może wysyłać, odbierać, łączyć się i nasłuchiwać <i>portów</i> w sieci. Te funkcje zajmują się tylko połączeniami TCP/IP, które są tym, na czym opiera się internet (IPv4, aby być bardziej precyzyjnym). W istocie pozwala to na połączenie jednego gniazda przy użyciu adresu IP (powiedzmy 192.168.1.10) do innego gniazda na innym adresie IP (powiedzmy 192.168.1.11). Po połączeniu, te dwa gniazda mogą wysyłać dane tam i z powrotem używając funkcji <span class="inline">network_send_*</span> (jak np. <a href="network_send_packet.htm"><span class="inline">network_send_packet()</span></a>) oraz dedykowanego zdarzenia asynchronicznego, które jest przez nie wywoływane. To zdarzenie asynchroniczne wygeneruje <a href="../Data_Structures/DS_Maps/DS_Maps.htm">mapę DS</a> zawierającą otrzymane dane, jak również inne szczegóły, a kompletne szczegóły możesz znaleźć w sekcji dotyczącej <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Networking.htm">zdarzenia asynchronicznego w sieci</a>.</p>
  <p>Zamiast tego, że programy muszą czytać i zajmować się każdym kawałkiem ruchu sieciowego przychodzącego do maszyny, adresy IP zajmują się również portami, które są ponumerowane od 0 do 65535. Dzięki temu każdy program otrzymuje tylko te pakiety danych, które go interesują, a nie wszystko, co zostało wysłane przez każdy program. Pozwala to również zaoszczędzić sporo czasu procesora, gdyż poważnie ogranicza przetwarzanie danych, dlatego w <span data-keyref="GameMaker Name">GameMakerze</span> można również "nasłuchiwać" portów. Tak więc, <span class="notranslate">server</span> stworzy gniazdo, a następnie powiąże je z konkretnym portem do nasłuchiwania. Następnie będzie otrzymywał powiadomienia o połączeniach, rozłączeniach i transferach danych z tego gniazda.</p>
  <p>Same &quot;pakiety&quot; danych składają się z danych binarnych pobranych z <span class="notranslate">buffer</span>. Ten <span class="notranslate">buffer</span> może być tworzony i manipulowany za pomocą <a href="../Buffers/Buffers.htm">funkcji</a> <span data-keyref="GameMaker Name">GameMaker</span> <a href="../Buffers/Buffers.htm">Buffer</a>.</p>
  <p>Warto zauważyć, że jeśli tworzysz projekt dla celu HTML5, to nie będziesz mógł użyć funkcji tworzenia <span class="notranslate">server</span> z powodu ograniczeń przeglądarki i będziesz musiał napisać własną <span class="notranslate">server</span> dla tej platformy używając czegoś takiego jak <strong>Electron </strong>lub <strong>NodeJS</strong>. Zauważ również, że jeśli Twoja gra jest wieloplatformowa i przewidujesz połączenie z instancją HTML5 gry z <span class="notranslate">server</span> działającej na urządzeniu mobilnym lub stacjonarnym, wtedy Twoja <span class="notranslate">server</span> może komunikować się z instancją HTML5 tylko za pomocą protokołu Web Socket (jest to wykonywane za pomocą stałej <span class="inline">network_socket_ws</span> lub <span class="inline">network_socket_wss</span> - zobacz <a href="network_create_server.htm"><span class="inline">network_create_server()</span></a> więcej informacji). Oznacza to, że twoja <span class="notranslate">server</span> może być zmuszona do utworzenia dwóch gniazd na różnych portach, jednego do połączenia z celami innymi niż HTML5 (<span class="notranslate">Android</span>, <span class="notranslate">Windows</span>, itd...) i jednego do połączenia z celem HTML5.</p>
  <p>Istnieją następujące funkcje, które można wykorzystać do pracy w sieci:</p>
  <ul class="colour">
    <li><a href="network_create_server.htm"><span class="notranslate">network_create_server</span></a></li>
    <li><a href="network_create_server_raw.htm">network_create_server_raw </a></li>
    <li><a href="network_create_socket.htm"><span class="notranslate">network_create_socket</span></a></li>
    <li><a href="network_create_socket_ext.htm"><span class="notranslate">network_create_socket_ext</span></a></li>
    <li><a href="network_connect.htm"><span class="notranslate">network_connect</span></a></li>
    <li><a href="network_connect_async.htm"><span class="notranslate">network_connect_async</span></a></li>
    <li><a href="network_connect_raw.htm"><span class="notranslate">network_connect_raw</span></a></li>
    <li><a href="network_connect_raw_async.htm">network_connect_async_raw</a></li>
    <li><a href="network_resolve.htm"><span class="notranslate">network_resolve</span></a></li>
    <li><a href="network_set_config.htm"><span class="notranslate">network_set_config</span></a></li>
    <li><a href="network_set_timeout.htm"><span class="notranslate">network_set_timeout</span></a></li>
    <li><a href="network_send_broadcast.htm"><span class="notranslate">network_send_broadcast</span></a></li>
    <li><a href="network_send_packet.htm"><span class="notranslate">network_send_packet</span></a></li>
    <li><a href="network_send_raw.htm"><span class="notranslate">network_send_raw</span></a></li>
    <li><a href="network_send_udp.htm"><span class="notranslate">network_send_udp</span></a></li>
    <li><a href="network_send_udp_raw.htm"><span class="notranslate">network_send_udp_raw</span></a></li>
    <li><a href="network_destroy.htm"><span class="notranslate">network_destroy</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../GML_Reference.htm">Odnośnik do GML</a></div>
        <div style="float:right">Następny: <a data-condition="Export:StableOnly" data-xref="{title}" href="../Web_And_HTML5/Web_And_HTML5.htm">Web And HTML5</a> <a data-condition="Export:Beta" data-xref="{title}" href="../Rollback/Rollback_Multiplayer.htm">Rollback Multiplayer</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone</span></h5>
  </div>
  <!-- KEYWORDS
Networking
-->
  <!-- TAGS
networking_functions
-->
</body>
</html>