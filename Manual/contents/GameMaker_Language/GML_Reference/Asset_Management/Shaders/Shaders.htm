<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Shadery</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Shaders" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Shaders,_YY_GLSLES_,_YY_GLSL_,_YY_HLSL11_,_YY_PSSL_" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Shadery</h1>
  <p>Shadery to niezwykle potężne narzędzie do manipulowania tym, co i w jaki sposób jest <a class="glossterm" data-glossterm="renderowane" href="#">renderowane</a> na ekranie przez kartę graficzną. Ponieważ te niewielkie programy są uruchamiane na samej karcie graficznej, ich przetwarzanie przebiega niezwykle szybko, co pozwala uwolnić cenne cykle procesora dla większej logiki gry.</p>
  <p>Aby utworzyć stronę <span class="notranslate">shader</span>, musisz mieć napisany zarówno <b>Vertex</b> Shader, jak i <b>Fragment</b> Shader (znany również jako <b>Pixel</b> Shader) za pomocą <a href="../../../../The_Asset_Editors/Shaders.htm">edytora sh</a>aderów. Nawet jeśli (na przykład) chcesz tylko zmienić pozycje <span class="notranslate">vertex</span> dla rysowanej instancji lub jeśli chcesz tylko zmienić wartości kolorów dla pikseli, nadal będziesz potrzebował <b>obu</b> programów, aby kompletna strona <span class="notranslate">shader</span> działała.</p>
  <p class="note"><span class="note">UWAGA</span> Shadery <b>nie</b> pozwalają na zmianę wartości zmiennych, które są do nich przekazywane, dlatego w całej dokumentacji będą one nazywane <b>stałymi shadera</b>.</p>
  <p>Pełny przegląd dostępnych funkcji i zmiennych GLSL ES, których można używać do programowania <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/es_cm_spec_2.0.pdf" target="_blank">strony</a> <span class="notranslate">shaders</span>, można znaleźć na <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/es_cm_spec_2.0.pdf" target="_blank">stronach referencyjnych OpenGL ES Shading Language (GLSL ES)</a>. Poniższy odnośnik jest również przydatny, ponieważ zawiera kilka kart referencyjnych dotyczących API OpenGL ES (zauważ, że tylko dwie ostatnie karty mają zastosowanie w <span data-keyref="GameMaker Name">GameMakerze</span>): OpenGL <a href="https://www.khronos.org/opengles/sdk/docs/reference_cards/OpenGL-ES-2_0-Reference-card.pdf">ES Reference Cards</a>.</p>
  <p>Używanie strony <span class="notranslate">shader</span> w projektach jest bardzo proste i wymaga tylko kilku wierszy kodu, aby uzyskać najbardziej podstawowe korzyści:</p>
  <p class="code">shader_set(myShader);<br />
    draw_self();<br />
    shader_reset();</p>
  <p>Jak widać, używa się ich w podobny sposób jak trybów mieszania i powierzchni, gdzie najpierw wybiera się (ustawia) powierzchnię <span class="notranslate">shader</span>, rysuje za jej pomocą to, co się chce, a następnie ponownie ustawia cel rysowania. Jeśli chcesz renderować cały ekran przez stronę <span class="notranslate">shader</span>, a nie tylko pojedynczą stronę <span class="notranslate">sprite</span> lub tło, musisz skonfigurować powierzchnię, która przechwyci bieżący widok, a następnie przekaże go do strony <span class="notranslate">shader</span> (więcej informacji na ten temat można znaleźć w części <a href="../../Drawing/Surfaces/Surfaces.htm">Powierzchnie</a> ).</p>
  <p class="note"><b>UWAGA</b>: <span class="notranslate">Shaders</span>, podobnie jak wszystko, co jest związane z rysowaniem, może <b>być używane tylko w zdarzeniu draw</b>. Warto również zauważyć, że jeśli próbujesz użyć wartości koloru w <span class="notranslate">shader</span>, a <span class="notranslate">object</span> nie ma <span class="notranslate">texture</span>, wynik będzie czarny.</p>
  <p>Jeśli używana witryna <span class="notranslate">shader</span> ma wartości wejściowe, są one ustawiane za pomocą funkcji <i>uniformu</i>. Najpierw uzyskałbyś <i>uchwyt</i> uniformu (który jest zasadniczo wartością identyfikacyjną uniformu, który ma zostać ustawiony) za pomocą funkcji <a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a> w <b>zdarzeniu Create Event</b> instancji używającej <span class="notranslate">shader</span>, a następnie przechowywać te uchwyty w zmiennych, na przykład w taki sposób:</p>
  <p class="code">colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br />
    colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);</p>
  <p>Po utworzeniu jednolitych uchwytów można je ustawić w kodzie <span class="notranslate">shader</span> dla <b>zdarzenia Draw</b> w następujący sposób:</p>
  <p class="code">shader_set(sShaderDemo5);<br />
    shader_set_uniform_f(colour_to_find, 1,1,1 );<br />
    shader_set_uniform_f(colour_to_set, 1,0,0 );<br />
    draw_sprite(sprite_index,image_index,x+24, y);<br />
    shader_reset();</p>
  <p>Ostatnią rzeczą, na którą należy zwrócić uwagę, jest to, że chociaż <span class="notranslate">shaders</span> są akceptowane na wszystkich platformach, to jednak są specyficzne dla danego urządzenia i jeśli sprzęt lub oprogramowanie urządzenia nie może używać <span class="notranslate">shaders</span>, pojawi się błąd. Dlatego zaleca się sprawdzenie, czy <span class="notranslate">shader</span> został skompilowany przed ustawieniem uniformów lub użyciem samego <span class="notranslate">shader</span>, jak poniżej:</p>
  <p class="code">if (shader_is_compiled(myShader))<br />
    {<br />
        shader_set(myShader);<br />
        draw_self();<br />
        shader_reset();<br />
    }<br />
    else show_debug_message(&quot;Shader failed&quot;);</p>
  <p>Jako dodatkowe sprawdzenie można również wywołać funkcję <a href="shaders_are_supported.htm"><span class="inline">shaders_are_supported()</span></a> aby sprawdzić, czy sprzęt w ogóle obsługuje <span class="notranslate">shaders</span>. Zazwyczaj takie sprawdzanie przeprowadza się przy starcie gry, a wyniki zapisuje się w <a href="../../../GML_Overview/Variables/Global_Variables.htm">zmiennej globalnej</a>, aby móc je później sprawdzić.</p>
  <p>Należy zauważyć, że <span data-keyref="GameMaker Name">GameMaker</span> obsługuje również pewne <b>makra</b> kompilacji warunkowej, które mogą być używane w GLSL ES <span class="notranslate">shaders</span>, aby mogły wykonywać alternatywny kod na określonych obsługiwanych platformach. Makra i platformy, na których będą generowane, są przedstawione w poniższej tabeli:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Makro Shader</th>
        <th>Wartość</th>
        <th>Platforma docelowa</th>
      </tr>
      <tr>
        <td>_YY_GLSLES_</td>
        <td>1</td>
        <td>Wszystkie platformy docelowe</td>
      </tr>
      <tr>
        <td>_YY_GLSL_</td>
        <td>2</td>
        <td>Mac i <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>)</td>
      </tr>
      <tr>
        <td>_YY_HLSL11_</td>
        <td>3</td>
        <td>Windows, UWP, XboxOne</td>
      </tr>
      <tr>
        <td>_YY_PSSL_</td>
        <td>4</td>
        <td>PS4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Gdy skompilujesz swój projekt <span data-keyref="GameMaker Name">GameMakera</span> na dowolnej z wymienionych platform, używając formatu GLSL ES <span class="notranslate">shader</span>, zostanie wygenerowane <i>jedno</i> z powyższych makr, które można następnie wykorzystać w kodzie <span class="notranslate">shader</span> w sposób opisany poniżej:</p>
  <p class="code">#ifdef _YY_HLSL11_<br />
    // HLSL shader code here<br />
    #else<br />
    // GLSL shader code here<br />
    #endif</p>
  <p>Jeśli jesteś początkującym użytkownikiem strony <span class="notranslate">shaders</span> lub chcesz poznać bardziej kompletny przewodnik po tworzeniu i używaniu ich w programie <span data-keyref="GameMaker Name">GameMaker</span>, zajrzyj na następną stronę podręcznika:</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Shaders.htm">Przewodnik po użyciu shaderów</a></li>
  </ul>
  <p> </p>
  <p>Do rysowania i ustawiania shaderów dostępne są następujące funkcje:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="shader_get_name.htm"><span class="notranslate">shader_get_name</span></a></li>
    <li><a href="shader_get_uniform.htm"><span class="notranslate">shader_get_uniform</span></a></li>
    <li><a href="shader_get_sampler_index.htm"><span class="notranslate">shader_get_sampler_index</span></a></li>
    <li><a href="shader_set.htm"><span class="notranslate">shader_set</span></a></li>
    <li><a href="shader_set_uniform_f.htm"><span class="notranslate">shader_set_uniform_f</span></a></li>
    <li><a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader_set_uniform_f_array</span></a></li>
    <li><a href="shader_set_uniform_i.htm"><span class="notranslate">shader_set_uniform_i</span></a></li>
    <li><a href="shader_set_uniform_i_array.htm"><span class="notranslate">shader_set_uniform_i_array</span></a></li>
    <li><a href="shader_set_uniform_matrix.htm"><span class="notranslate">shader_set_uniform_matrix</span></a></li>
    <li><a href="shader_set_uniform_matrix_array.htm"><span class="notranslate">shader_set_uniform_matrix_array</span></a></li>
    <li><a href="shader_reset.htm"><span class="notranslate">shader_reset</span></a></li>
    <li><a href="shader_is_compiled.htm"><span class="notranslate">shader_is_compiled</span></a></li>
    <li><a href="shaders_are_supported.htm"><span class="notranslate">shaders_are_supported</span></a></li>
    <li><a href="shader_current.htm"><span class="notranslate">shader_current</span></a></li>
  </ul>
  <p> </p>
  <p>Mamy też specjalną funkcję, która definiuje stan globalny dla wszystkich shaderów:</p>
  <ul>
    <li><a href="shader_enable_corner_id.htm"><span class="notranslate">shader_enable_corner_id</span></a></li>
  </ul>
  <p> </p>
  <p>Podczas pracy z samplerami <span class="notranslate">texture</span> w serwisie <span class="notranslate">shaders</span> potrzebne są informacje o używanym serwisie <span class="notranslate">texture</span>. W tym celu można skorzystać z następujących funkcji:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Sprites/Sprite_Information/sprite_get_texture.htm"><span class="notranslate">sprite_get_texture</span></a></li>
    <li><a href="../Sprites/Sprite_Information/sprite_get_uvs.htm"><span class="notranslate">sprite_get_uvs</span></a></li>
    <li><a href="../Fonts/font_get_texture.htm"><span class="notranslate">font_get_texture</span></a></li>
    <li><a href="../Fonts/font_get_uvs.htm"><span class="notranslate">font_get_uvs</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_width.htm"><span class="notranslate">texture_get_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_height.htm"><span class="notranslate">texture_get_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_width.htm"><span class="notranslate">texture_get_texel_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_height.htm"><span class="notranslate">texture_get_texel_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_set_stage.htm"><span class="notranslate">texture_set_stage</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texfilter_ext.htm"><span class="notranslate">gpu_set_texfilter_ext</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texrepeat.htm"><span class="notranslate">gpu_set_texrepeat</span></a></li>
  </ul>
  <p> </p>
  <p>Chociaż niniejszy podręcznik <b>nie</b> obejmuje wszystkich funkcji i zmiennych Open GL <span class="notranslate">shader</span>, zawiera listę tych, które są unikalne dla programu <span data-keyref="GameMaker Name">GameMaker</span>. Stałe te nie są częścią specyfikacji Open GL dla <span class="notranslate">shaders</span> i są dostarczane w celu uproszczenia integracji <span class="notranslate">shaders</span> w Twoich projektach.</p>
  <ul class="colour">
    <li><a href="Shader_Constants.htm">Stałe shadera</a></li>
  </ul>
  <p> </p>
  <p>Ponadto <span data-keyref="GameMaker Name">GameMaker</span> umożliwia definiowanie własnych <b>formatów wierzchołków (Vertex Formats</b> ), na podstawie których można tworzyć własne prymitywy. Może to znacznie przyspieszyć operacje wykonywane na stronie <span class="notranslate">shader</span> lub rozszerzyć ich możliwości i stworzyć zaskakujące efekty. Informacje na ten temat można znaleźć w kolejnych rozdziałach:</p>
  <ul class="colour">
    <li><a href="../../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">Prymitywy i <span class="notranslate">Vertex</span> Formaty</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Asset_Management.htm">Zarządzanie aktywami</a></div>
        <div style="float:right">Następny: <a href="../Sequences/Sequences.htm">Sekwencje</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Shaders
_YY_GLSLES_
_YY_GLSL_
_YY_HLSL11_
_YY_PSSL_
-->
  <!-- TAGS
shader_functions
-->
</body>
</html>