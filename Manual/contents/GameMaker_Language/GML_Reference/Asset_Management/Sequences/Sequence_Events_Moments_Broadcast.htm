<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Sekwencjonuj zdarzenia, momenty i nadawane komunikaty</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequence Events, Moments and Broadcast Messages" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Sequence Events,Sequence Momements,Sequence Messages,broadcast messages,event_create,event_destroy,event_clean_up,event_step,event_step_begin,event_step_end,event_async_system,event_broadcast_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Wydarzenia, momenty i komunikaty nadawane</h1>
  <p>Poza wszystkimi wymienionymi <a href="Sequences.htm">tutaj</a> właściwościami <span class="notranslate">sequence</span> <span class="notranslate">struct</span> można również dodać specjalne właściwości &quot;akcji&quot; do strony <span class="notranslate">sequence</span>. Do strony <span class="notranslate">sequence</span> <span class="notranslate">object</span> można dodać trzy różne rodzaje takich właściwości &quot;akcji&quot; - <b>Zdarzenia</b>. <b>Momenty</b> i <b>Komunikaty</b> - a każdy z nich jest szczegółowo opisany w poniższych sekcjach.</p>
  <h2>Sekwencja zdarzeń</h2>
  <p>Do sekwencji <span class="notranslate">objects</span> można dodawać <b>zdarzenia</b>, które są analogiczne do zdarzeń używanych przez <span class="notranslate">object</span> <span class="notranslate">assets</span>. Zdarzenia przypisane do strony <span class="notranslate">sequence</span> <span class="notranslate">object</span> będą występować w określonej kolejności, albo raz w określonym momencie cyklu życia strony <span class="notranslate">sequence</span>, albo w każdej ramce, w której działa strona <span class="notranslate">sequence</span>. W tej sekcji omówimy sposób obsługi tych zdarzeń za pomocą kodu, ale można je także dodawać za pomocą <a href="../../../../The_Asset_Editors/Sequences.htm">Edytora sekwencji</a>. Należy pamiętać, że na podaną tu kolejność zdarzeń nie ma wpływu kierunek ruchu <a class="glossterm" data-glossterm="playhead" href="#">głowicy</a> odtwarzającej i nawet jeśli strona <span class="notranslate">sequence</span> jest odtwarzana do tyłu, zdarzenia nadal będą uruchamiane w podanej poniżej kolejności.</p>
  <p>Dostępne są następujące zdarzenia:<b></b></p>
  <ul class="colour">
    <li><b>Utwórz</b>: jest wywoływane, gdy na warstwie zostanie utworzona instancja <span class="notranslate">sequence</span>.</li>
    <li><b>Zniszcz</b>: polecenie jest wywoływane, gdy instancja <span class="notranslate">sequence</span> na warstwie zostanie zniszczona.</li>
    <li><b>Czyszczenie</b>: jest wywoływane, gdy instancja <span class="notranslate">sequence</span> jest odśmiecana.</li>
    <li><b>Krok</b>: uruchamiany tuż przed zwykłym zdarzeniem kroku <span class="notranslate">object</span>. <b>Ważne!</b> Jeśli odtwarzanie strony <span class="notranslate">sequence</span> zostanie wstrzymane, zdarzenie to zostanie wyzwolone dopiero w następnym kroku po ponownym uruchomieniu strony <span class="notranslate">sequence</span>.</li>
    <li><b>Rozpocznij krok</b>: wyzwalane tuż przed zdarzeniem <span class="notranslate">object</span> begin-step. <b>Ważne!</b> Jeśli odtwarzanie strony <span class="notranslate">sequence</span> zostanie wstrzymane, zdarzenie to zostanie wywołane dopiero w następnym kroku po ponownym uruchomieniu strony <span class="notranslate">sequence</span>.</li>
    <li><b>Krok końcowy</b>: wyzwalany tuż przed zdarzeniem <span class="notranslate">object</span> <b>end-step</b>. <b>Ważne!</b> Jeśli odtwarzanie strony <span class="notranslate">sequence</span> zostanie wstrzymane, zdarzenie to zostanie wyzwolone dopiero w następnym kroku po ponownym uruchomieniu strony <span class="notranslate">sequence</span>.</li>
    <li><b>System</b> <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">asynchroniczny</a>: wyzwalany tak samo jak dowolny system <span class="notranslate">object</span> <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">Asynchroniczny system obsługi zdarzeń.</a> <em><b>Ważne!</b> Jeśli witryna <span class="notranslate">sequence</span> jest wstrzymana, to zdarzenie nie zostanie wywoł</em>ane.</li>
    <li><b>Komunikat rozsyłany</b>: uruchamiany podczas aktualizacji <span class="notranslate">sequence</span> po napotkaniu komunikatu rozsyłanego <span class="notranslate">keyframe</span>.</li>
  </ul>
  <p>Wszystkie zdarzenia muszą być powiązane z funkcjami zdefiniowanymi w witrynie <span class="notranslate">script</span>, dlatego aby utworzyć zdarzenie, należy przypisać <a href="../../../GML_Overview/Method_Variables.htm">zmienną metody</a> do właściwości o odpowiedniej nazwie, która powie witrynie <span class="notranslate">sequence</span>, które zdarzenie ma wywołać funkcję. Składnia jest następująca:</p>
  <p class="code">&lt;sequence_struct&gt;.&lt;event_property&gt; = method(&lt;sequence_struct&gt;, &lt;function_name&gt;);</p>
  <p>Właściwości strony <span class="notranslate">sequence</span> <span class="notranslate">struct</span> dla różnych zdarzeń są następujące:<span class="inline"></span></p>
  <ul class="colour">
    <li><span class="inline">event_create</span><span class="inline"></span></li>
    <li><span class="inline">event_destroy</span><span class="inline"></span></li>
    <li><span class="inline">event_clean_up</span><span class="inline"></span></li>
    <li><span class="inline">event_step</span><span class="inline"></span></li>
    <li><span class="inline">event_step_begin</span><span class="inline"></span></li>
    <li><span class="inline">event_step_end</span></li>
    <li><span class="inline">event_async_system</span><span class="inline"></span></li>
    <li><span class="inline">event_broadcast_message</span></li>
  </ul>
  <p>Aby podać przykład użycia, załóżmy, że chcemy, aby strona <span class="notranslate">sequence</span> zmieniała kierunek po wykryciu kliknięcia lewym przyciskiem myszy. W tym celu należałoby najpierw utworzyć stronę <span class="notranslate">script</span> z funkcją, którą chcemy wywołać, na przykład tak:</p>
  <p class="code">/// @function seq_reverse();<br />
    <br />
    function seq_reverse()<br />
    {<br />
        if mouse_check_button_pressed(mb_left)<br />
        {<br />
            if self.headDirection == seqdir_right<br />
            {<br />
                self.headDirection = seqdir_left;<br />
            }<br />
            else self.headDirection = seqdir_right;<br />
        }<br />
    }
  </p>
  <p>W tej funkcji jedyne, co robimy, to nasłuchujemy naciśnięcia myszy, a następnie odwracamy kierunek odtwarzania strony <span class="notranslate">sequence</span>, do której została przypisana metoda. Zauważysz, że obecnie nie można przekazywać żadnych parametrów do funkcji, które są powiązane z tymi właściwościami, a we wszystkich przypadkach zmienna <a href="../../../GML_Overview/Instance_Keywords.htm"><span class="inline">self</span></a> zmienna w zakresie funkcji jest przypisywana do instancji <span class="notranslate">sequence</span>.</p>
  <p class="note"><b>UWAGA</b>: Warto zauważyć, że w powyższym <span class="notranslate">script</span> identyfikator <span class="inline">self</span> można pominąć i jest on używany tylko po to, aby wyraźnie pokazać zakres zmiennej metody używanej w tym przykładzie.</p>
  <p>Aby przypisać tę funkcję do strony <span class="notranslate">sequence</span>, należy wykonać następujące czynności:</p>
  <p class="code">var _seq = sequence_get(Sequence1);<br />
    _seq.event_step = method(_seq, seq_reverse);</p>
  <p>Teraz przypisaliśmy zdarzenie step do <i>obiektu</i> <span class="notranslate">sequence</span> z funkcją wykrywania naciśnięcia myszy i zmiany kierunku odtwarzania <i>instancji</i> <span class="notranslate">sequence</span> po jej utworzeniu w <span class="notranslate">room</span>.</p>
  <h2><label for="2">Momenty</label></h2>
  <p> <b>Moment</b> <span class="notranslate">sequence</span> to unikalna akcja kodowa, która jest uruchamiana na jednej lub kilku określonych klatkach podczas odtwarzania <span class="notranslate">sequence</span>. Te momenty kodu są - podobnie jak w przypadku zdarzeń (wyjaśnionych powyżej) - po prostu predefiniowanymi <a href="../../../GML_Overview/Method_Variables.htm">zmiennymi metod</a>, które są uruchamiane w danej klatce. Na przykład, jeśli chcesz, aby strona <span class="notranslate">sequence</span> utworzyła instancję &quot;pocisku&quot; na określonej klatce animacji, musisz najpierw utworzyć funkcję, która będzie używana do tej akcji, coś takiego jak poniżej:</p>
  <p class="code">/// @function seq_shoot();<br />
    <br />
    seq_shoot = function()<br />
    {<br />
        instance_create_layer(sequence.xorigin, sequence.yorigin, &quot;Instances&quot;, obj_Bullet);<br />
    }
  </p>
  <p>Następnie należy dodać ją do ramki we właściwości <span class="inline">momentKeyframes</span> na stronie <span class="notranslate">sequence</span> <span class="notranslate">struct</span>. Jest to zasadniczo &quot;specjalna&quot; ścieżka, która jest używana tylko do tego celu i może przyjmować tylko dane <span class="notranslate">keyframe</span> związane z chwilowymi działaniami, które mają być wykonywane na stronie <span class="notranslate">sequence</span>. Tę ścieżkę tworzy się w taki sam sposób, jak każdą inną, tworząc <span class="notranslate">keyframe</span> <span class="notranslate">structs</span> i wypełniając je danymi <span class="notranslate">keyframe</span>, gdzie kanał 0 jest jedynym kanałem, którego można używać, a typ ścieżki to <span class="inline">seqtracktype_moment</span>. Poniżej znajduje się przykład utworzenia takiej ścieżki przy użyciu zdefiniowanej powyżej funkcji, która będzie uruchamiać się w podanych momentach (klatkach):</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(3);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[1].frame = 120;<br />
    _k[2] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[2].frame = 180;<br />
    var _d = array_create(1);<br />
    _d[0] = sequence_keyframedata_new(seqtracktype_moment);<br />
    _d[0].channel = 0;<br />
    _d[0].event = method(_d[0], seq_shoot);<br />
    _k[0].channels = _d;<br />
    _k[1].channels = _d;<br />
    _k[2].channels = _d;<br />
    _seq.momentKeyframes = _k;</p>
  <p>Powyższy kod po prostu ustawi klatki 60, 120 i 180 ścieżki &quot;moment&quot; tak, aby wywoływały metodę <span class="inline">seq_shoot</span>. Zauważysz, że obecnie nie możesz przekazywać żadnych parametrów do funkcji, które są używane dla każdego momentu, a we wszystkich przypadkach zmienna <span class="inline">self</span> w zakresie funkcji jest przypisywana do instancji <span class="notranslate">sequence</span> (generalnie nie musisz używać <span class="inline">self</span>, ale w niektórych szczególnych przypadkach może to być przydatne).</p>
  <h2><label for="3">Komunikaty rozsyłane</label></h2>
  <p>W sekwencjach można generować <b>komunikaty rozg</b>łoszeniowe, czyli proste komunikaty <span class="notranslate">strings</span>, które są dodawane do określonych klatek animacji <span class="notranslate">timeline</span>, a po osiągnięciu tego punktu na stronie <span class="notranslate">timeline</span> komunikat <span class="notranslate">string</span> zostanie rozesłany do wszystkich instancji <span class="notranslate">object</span>, które go słuchają. Komunikaty te można dodawać w witrynie <span class="notranslate">IDE</span> za pomocą <a href="../../../../The_Asset_Editors/Sequences.htm">edytora sekwencji</a>, ale można je także tworzyć i edytować za pomocą kodu.</p>
  <p>Aby utworzyć wiadomość nadawaną na stronie <span class="notranslate">sequence</span> za pomocą adresu <span class="notranslate">GML</span>, należy dodać ją do ramki we właściwości <span class="inline">messageEventKeyframes</span> adresu <span class="notranslate">sequence</span> <span class="notranslate">struct</span>. Jest to w zasadzie &quot;specjalna&quot; ścieżka, która jest używana tylko do tego celu i może przyjmować tylko dane <span class="notranslate">keyframe</span> związane z wiadomościami nadawanymi przez stronę <span class="notranslate">sequence</span>. Tę ścieżkę tworzy się w taki sam sposób, jak każdą inną, tworząc <span class="notranslate">keyframe</span> <span class="notranslate">structs</span> i wypełniając ją danymi <span class="notranslate">keyframe</span>, gdzie kanał 0 jest jedynym kanałem, którego można używać, a typ ścieżki to <span class="inline">seqtracktype_message</span>. Poniżej znajduje się przykład tworzenia takiej ścieżki:</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(2);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[1].frame = 120;<br />
    var _m1 = array_create(2);<br />
    _m1[0] = &quot;Hello&quot;;<br />
    _m1[1] = &quot;World&quot;;<br />
    var _m2 = array_create(1);<br />
    _m2[0] = &quot;This is a Broadcast Message&quot;;<br />
    var _d1 = array_create(1);<br />
    _d1[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d1[0].channel = 0;<br />
    _d1[0].events = _m1;<br />
    var _d2 = array_create(1);<br />
    _d2[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d2[0].channel = 0;<br />
    _d2[0].events = _m2;<br />
    _k[0].channels = _d1;<br />
    _k[1].channels = _d2;<br />
    _seq.messageEventKeyframes = _k;</p>
  <p>Zauważysz, że tekst komunikatu jest przekazywany do kanału danych <span class="notranslate">keyframe</span> w postaci tablicy. Dzieje się tak, ponieważ w tej samej ramce można nadawać wiele komunikatów, a różne instancje <span class="notranslate">object</span> mogą ich słuchać i reagować na nie w różny sposób, w zależności od tego, jakiego komunikatu oczekują.</p>
  <p>Po wyemitowaniu komunikatu przez stronę <span class="notranslate">sequence</span> można go przetworzyć, korzystając ze zdarzenia <i>Inne</i> &gt; <i>Komunikat</i> nadawany w instancjach <span class="notranslate">object</span>, które szczegółowo opisano <a href="../../../../The_Asset_Editors/Sequence_Properties/Broadcast_Messages.htm">tutaj</a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Sequences.htm">Sekwencje</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Sequence Events
Sequence Moments
Sequence Broadcast Messages
broadcast Messages
event_create
event_destroy
event_clean_up
event_step
event_step_begin
event_step_end
event_async_system
event_broadcast_message
-->
  <!-- TAGS
sequence_events_moments_broadcasts
-->
</body>
</html>