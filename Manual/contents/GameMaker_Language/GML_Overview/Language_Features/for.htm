<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>dla</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the for function" />
  <meta name="rh-index-keywords" content="for" />
  <meta name="search-keywords" content="for" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>dla</h1>
  <p>Jednym z najczęściej używanych sposobów wielokrotnego iterowania nad <a class="glossterm" data-glossterm="oświadczenie" href="#">instrukcją</a> (lub instrukcjami) jest użycie <span class="inline">for</span> <span class="notranslate">loop</span>, które ma następującą postać:</p>
  <p class="code">for (&lt;assignment&gt;; &lt;expression&gt;; &lt;operation&gt;;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Działa to w następujący sposób - najpierw wykonywane jest przypisanie, które przypisuje wartość zmiennej, następnie obliczane jest <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażenie</a> i, jeśli ma ono wartość <span class="inline">true</span>, wykonywane są polecenia w nawiasach klamrowych{}. Następnie wykonywana jest operacja na przypisanej zmiennej i ponownie obliczane jest wyrażenie. Czynność ta <span class="notranslate">loop</span> będzie kontynuowana do momentu, gdy okaże się, że wyrażenie ma wartość <span class="inline">false</span>.</p>
  <p>Może się to wydawać skomplikowane, gdy jest napisane w ten sposób, ale należy to interpretować następująco:</p>
  <ol>
    <li>Pierwsze przypisanie inicjalizuje pętlę for</li>
    <li>Wyrażenie sprawdza, czy strona <span class="notranslate">loop</span> powinna zostać zakończona.</li>
    <li>Oświadczenie jest wykonywane</li>
    <li>Operacja jest wykonywana</li>
    <li>Wróć do kroku 2 i ponownie wykonaj wyrażenie, a następnie kontynuuj lub zakończ pętlę</li>
  </ol>
  <p>Jest to niezwykle przydatne do wykonywania powtarzających się zadań, które w inny sposób wymagałyby wielu wierszy kodu, i jest powszechnie używane jako licznik do oceny tablic, rysowania rzeczy, ustawiania wartości przyrostowych itp. Poniższy przykład kodu ilustruje typowe zastosowanie tego typu instrukcji:</p>
  <p class="code">for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        draw_text(32, 32 + (i * 32), string(i) + &quot;. &quot;+ string(scr[i]));<br />
    }</p>
  <p>Powyższy kod inicjalizuje zmienną <span class="inline">for</span> <span class="notranslate">loop</span>, zaczynając od 0 i licząc do (włącznie) 9, a następnie używa wartości <span class="notranslate">loop</span> zmiennej <span class="inline">i</span> do rysowania na ekranie wartości przechowywanych w tablicy. Zwróć uwagę, że zmienna <span class="inline">for</span> <span class="notranslate">loop</span> <span class="inline">i</span> jest używana nie tylko do <span class="notranslate">loop</span> przeglądania tablicy, ale także do rysowania liczby oraz informowania programu <span data-keyref="GameMaker Name">GameMaker</span>, do którego miejsca w <span class="notranslate">room</span> mają być rysowane wartości. Ta elastyczność jest jednym z głównych powodów, dla których <span class="inline">for</span> <span class="notranslate">loops</span> są tak ważne w programowaniu.</p>
  <p><strong>Kiedy należy używać <span class="inline">for</span> <span class="notranslate">loop</span>?</strong> Zawsze wtedy, gdy trzeba wykonać stałą liczbę iteracji jednego lub więcej poleceń, śledząc jednocześnie aktualnie wykonywaną <a class="glossterm" data-glossterm="iteracja" href="#">iterację</a> i wykorzystując jej wartość.</p>
  <p class="note"><b>UWAGA</b>: Podczas pracy z innymi osobami można spotkać się z wieloma przykładami użycia zmiennych &quot;<span class="inline">i</span>&quot; i &quot;<span class="inline">j</span>&quot; dla zmiennej licznika <span class="notranslate">loop</span>. <b>Nie</b> są to obowiązkowe nazwy zmiennych i można używać dowolnych nazw, takich jak &quot;<span class="inline">a</span>&quot; lub &quot;<span class="inline">foo</span>&quot; lub innych. Używanie &quot;<span class="inline">i</span>&quot; i &quot;<span class="inline">j</span>&quot; jest po prostu standardową konwencją w programowaniu.</p>
  <p>Warto zauważyć, że specjalnych instrukcji <span class="inline"><a href="break.htm">break</a></span> i <span class="inline"><a href="continue.htm">continue</a></span> można używać także wewnątrz <span class="inline">for</span> <span class="notranslate">loop</span>. Użycie <span class="inline">break</span> spowoduje natychmiastowe opuszczenie <span class="notranslate">loop</span> i przejście do dowolnego kodu znajdującego się w zdarzeniu lub funkcji po zakończeniu <span class="notranslate">loop</span>, np:</p>
  <p class="code">var _inst = noone;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        _inst = instance_find(obj_Enemy_Parent, i);<br />
        if instance_exists(_inst)<br />
        {<br />
            if _inst.object_index == obj_Enemy_Melee<br />
            {<br />
                break;<br />
            }<br />
        }<br />
    }<br />
    target = _inst;</p>
  <p>Powyższy kod <span class="notranslate">loops</span> przeszukuje 10 najbliższych instancji podanego &quot;rodzica&quot; <span class="notranslate">object</span>, a jeśli znajdzie instancję, sprawdza identyfikator instancji <span class="notranslate">object</span> i jeśli jest to instancja <span class="inline">obj_Enemy_Melee</span>, to <span class="notranslate">loop</span> jest kończone przy użyciu <span class="inline">break</span>, a wartość identyfikatora jest przypisywana do zmiennej (jeśli nie zostanie znaleziona żadna instancja, to do zmiennej zostanie dodane słowo kluczowe <span class="inline"><a href="../Instance_Keywords.htm">noone</a></span> ).</p>
  <p>Przykładem użycia <span class="inline">continue</span> w <span class="inline">for</span> <span class="notranslate">loop</span> może być:</p>
  <p class="code">var _val = 0;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        if (val_array[i] &lt;= 0)<br />
        {<br />
            continue;<br />
        }<br />
        _val += val_array[i];<br />
    }<br />
    draw_text(32, 32, &quot;Positive Values Total = &quot; + string(_val));</p>
  <p>Ten kod sprawdza wartość przechowywaną w każdej pozycji <a href="../Arrays.htm">tablicy</a> 1D o długości 10 i jeśli którakolwiek z nich jest mniejsza lub równa 0, to <span class="inline">continue</span> <span class="notranslate">loop</span> , co oznacza, że bieżąca iteracja zostanie zakończona, <span class="inline">i</span> zostanie inkrementowana, a następna <span class="notranslate">loop</span> zostanie rozpoczęta. Jeśli wartość jest większa niż 0, to jest dodawana do zmiennej lokalnej <span class="inline">_val</span>, a po zakończeniu <span class="notranslate">loop</span> całkowita wartość jest rysowana na ekranie.</p>
  <p>Więcej przykładów słów kluczowych <span class="notranslate">loop</span> można znaleźć w sekcjach <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>, oraz <a href="do___until.htm"><span class="inline">do / until</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Language_Features.htm">Cechy językowe</a></div>
        <div style="float:right">Następny: <a href="switch.htm"><span class="notranslate">switch</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
for
-->
  <!-- TAGS
for
-->
</body>
</html>