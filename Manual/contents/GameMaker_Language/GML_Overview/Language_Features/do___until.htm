<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>robić / aż</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the do / until functions" />
  <meta name="rh-index-keywords" content="do,until" />
  <meta name="search-keywords" content="do,until" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>robić / aż</h1>
  <p>Funkcja <span class="inline">do</span> to inny sposób wielokrotnego iterowania po jednym lub kilku <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażeniach</a>, a tak naprawdę jest to &quot;<span class="inline">do... until</span>&quot; <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażenie</a>, ponieważ nie możesz mieć jednego bez drugiego, ponieważ mówisz <span data-keyref="GameMaker Name">GameMakerowi</span>, aby robił coś, dopóki określone <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażenie</a> nie zwróci wartości <span class="inline">true</span>. Ma ona następującą postać:</p>
  <p class="code">do<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }<br />
    until (&lt;expression&gt;);</p>
  <p>Instrukcja (która może być blokiem kodu składającym się z wielu instrukcji umieszczonych w nawiasach klamrowych <span class="inline">{}</span>) jest wykonywana do momentu, gdy wyrażenie zostanie uznane za <span class="inline">true</span>, przy czym początkowa instrukcja jest <strong>zawsze wykonywana co najmniej raz</strong>. Poniżej znajduje się przykład typowego sposobu użycia <span class="inline">do... until</span>:</p>
  <p class="code">do<br />
    {<br />
        x = random(room_width);<br />
        y = random(room_height);<br />
    }<br />
    until (place_free(x, y));</p>
  <p>Powyższy kod próbuje umieścić bieżący adres <span class="notranslate">object</span> w wolnym miejscu i ustawia zmienne x/y co najmniej raz, a następnie wykonuje tyle <a class="glossterm" data-glossterm="iteracja" href="#">iteracji</a>, ile potrzeba, aż wyrażenie <span class="inline">place_free()</span> zwróci adres <span class="inline">true</span>.</p>
  <p><strong>Kiedy należy używać <span class="inline">do</span> / <span class="inline">until</span> <span class="notranslate">loop</span>?</strong> Należy go używać zawsze wtedy, gdy chcesz powtórzyć jedno lub więcej poleceń, ale nie wiesz, ile razy ma się ono powtórzyć, i chcesz mieć pewność, że polecenia zostaną wykonane <em>przynajmniej raz</em> przed zakończeniem <span class="notranslate">loop</span>.</p>
  <p>Można również użyć klawiszy <a href="break.htm"><span class="inline">break</span></a> oraz <a href="continue.htm"><span class="inline">continue</span></a> wewnątrz <span class="inline">do</span> <span class="notranslate">loops</span>. Użycie <span class="inline">break</span> spowoduje natychmiastowe opuszczenie strony <span class="notranslate">loop</span> i przejście do dowolnego kodu znajdującego się w zdarzeniu lub funkcji po zakończeniu <span class="notranslate">loop</span>, np:</p>
  <p class="code">var _id = noone;<br />
    do<br />
    {<br />
        _id = list[| 0];<br />
        if instance_exists(_id)<br />
        {<br />
            _break;<br />
        }<br />
        ds_list_delete(list, 0);<br />
    }<br />
    until (ds_list_empty(list));<br />
    <br />
    target = _id;
  </p>
  <p>W powyższym kodzie tworzymy zmienną lokalną i ustawiamy ją tak, aby przechowywała słowo kluczowe <a href="../Instance_Keywords.htm"><span class="notranslate">noone</span></a>. Następnie wykonujemy <span class="inline">do / until</span> <span class="notranslate">loop</span> sprawdzając pierwszą pozycję listy DS, czy zawiera ona poprawny identyfikator instancji, i jeśli tak, to wykonujemy <span class="inline">break</span> <span class="notranslate">loop</span> , w przeciwnym razie wartość dla pozycji listy jest usuwana. Po zakończeniu <span class="notranslate">loop</span> (albo przez <span class="inline">break</span>, albo dlatego, że lista jest pusta) wartość zmiennej lokalnej jest przypisywana do zmiennej instancji <span class="inline">target</span>.</p>
  <p>Przykładem użycia continue w serwisie <span class="inline">do / until</span> <span class="notranslate">loop</span> może być:</p>
  <p class="code">do<br />
    {<br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }<br />
    until (instance_count(obj_Enemy) &gt;= 10);</p>
  <p>Ten kod wygeneruje losową pozycję <span class="notranslate">room</span>, a następnie sprawdzi, czy na tej pozycji istnieje instancja <span class="notranslate">object</span> <span class="inline">obj_Enemy</span>. Jeśli tak, to bieżąca iteracja <span class="notranslate">loop</span> zostanie zakończona przy użyciu <span class="inline">continue</span> i rozpocznie się nowa iteracja, a jeśli nie, to na losowej pozycji zostanie utworzona instancja <span class="notranslate">object</span> <span class="inline">obj_Enemy</span>. <span class="notranslate">loop</span> zakończy się tylko wtedy, gdy w <span class="notranslate">object</span> znajdzie się 10 lub więcej instancji <span class="notranslate">room</span>.</p>
  <p> <span class="notranslate">loops</span> Ostatnia uwaga: uważaj na stronę <span class="inline">do</span> <span class="notranslate">loop</span>, ponieważ możesz łatwo sprawić, że będzie ona wieczna. W takim przypadku gra zawiesi się, nie będzie reagować na żadne polecenia użytkownika i będzie on musiał ją zamknąć.</p>
  <p>Więcej przykładów słów kluczowych <span class="notranslate">loop</span> można znaleźć w sekcjach <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>, oraz <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Language_Features.htm">Cechy językowe</a></div>
        <div style="float:right">Następny: <a href="for.htm"><span class="notranslate">for</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
do
until
-->
  <!-- TAGS
do
until
-->
</body>
</html>