<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>powtórz</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the repeat function" />
  <meta name="rh-index-keywords" content="repeat" />
  <meta name="search-keywords" content="if,else,then,?,ternary,conditional" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>powtórz</h1>
  <p>W witrynie <span class="notranslate">GameMaker Language</span> można wykonywać <i>pętle</i>, czyli polecenia lub polecenia iterujące nad sobą określoną liczbę razy. Najprostszym z nich jest instrukcja <span class="inline">repeat</span>, która ma postać:</p>
  <p class="code">repeat (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>W przypadku <span class="inline">repeat</span> podane <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażenie</a> jest powtarzane tyle razy, ile wskazuje zaokrąglona wartość <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażenia</a>. Na przykład poniżej utworzono pięć piłek w losowych miejscach:</p>
  <p class="code">repeat (5)<br />
    {<br />
        instance_create_layer(random(400), random(400), &quot;Instances&quot;, obj_ball);<br />
    }</p>
  <p>Może to być bardzo przydatne, aby uniknąć wielokrotnego wpisywania tego samego kodu, lub do używania tablic, lub do liczenia operacji itd. Nie jesteś też ograniczony do używania pojedynczej instrukcji - możesz powtarzać wiele instrukcji, umieszczając je w nawiasach klamrowych <span class="inline">{}</span>. Na przykład:</p>
  <p class="code">var _x = 32;<br />
    repeat (global.p_lives)<br />
    {<br />
        draw_sprite(spr_heart, 0, _x, 32);<br />
        _x += sprite_get_width(spr_heart);<br />
    }</p>
  <p>Powyższy przykład powtarza polecenia w nawiasach klamrowych przez dowolną liczbę <a class="glossterm" data-glossterm="iteracja" href="#">iteracji</a>zmiennej globalnej &quot;lives&quot;, a w każdej iteracji rysuje serce <span class="notranslate">sprite</span> na pozycji <span class="inline">_x</span>, a następnie przesuwa tę pozycję o bit w zależności od szerokości serca <span class="notranslate">sprite</span>.</p>
  <p><strong>Kiedy należy używać <span class="inline">repeat</span> <span class="notranslate">loop</span>?</strong> Zawsze wtedy, gdy chcemy powtórzyć jedno lub więcej poleceń ustaloną liczbę razy bez konieczności zliczania iteracji.</p>
  <p>Warto zauważyć, że w ramach pętli można używać specjalnych instrukcji <span class="inline"><a href="break.htm">break</a></span> i <span class="inline"><a href="continue.htm">continue</a></span>. <font face="Lucida Console"><span style="font-size: 16px;"><b>repeat</b></span></font> również wewnątrz pętli. Użycie <span class="inline">break</span> spowoduje natychmiastowe wyjście z pętli <span class="notranslate">loop</span> i przejście do dowolnego kodu znajdującego się w zdarzeniu lub funkcji po zakończeniu <span class="notranslate">loop</span>, np:</p>
  <p class="code">var i = 0;<br />
    var temp = 0;<br />
    repeat (10)<br />
    {<br />
        temp += array[i];<br />
        if (temp &gt; max_total)<br />
        {<br />
            break;<br />
        }<br />
        else<br />
        {<br />
            i += 1;<br />
        }<br />
    }</p>
  <p>Powyższy kod <span class="notranslate">loops</span> przez 10 wartości <a href="../Arrays.htm">tablicy</a> i dodaje je do zmiennej lokalnej. Jeśli suma zmiennej lokalnej jest większa niż wartość podana dla <span class="inline">max_total</span>, to <span class="notranslate">loop</span> jest kończony za pomocą break, w przeciwnym razie <span class="notranslate">loop</span> będzie kontynuowany. </p>
  <p>Przykładem użycia <span class="inline">continue</span> w <span class="inline">repeat</span> <span class="notranslate">loop</span> może być:</p>
  <p class="code">repeat(10)<br />
    {   <br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }</p>
  <p>Ten kod powtórzy się 10 razy, generując losową pozycję <span class="notranslate">room</span>, a następnie sprawdzając, czy na tej pozycji istnieje instancja <span class="notranslate">object</span> <span class="inline">obj_Enemy</span>. Jeśli tak, to bieżąca iteracja <span class="notranslate">loop</span> zostanie zakończona przy użyciu <span class="inline">continue</span> i rozpocznie się nowa iteracja, a jeśli nie, to na losowej pozycji zostanie utworzona instancja <span class="notranslate">object</span> <span class="inline">obj_Enemy</span>.</p>
  <p>Więcej przykładów funkcji <span class="notranslate">loop</span> można znaleźć w rozdziałach <a href="while.htm"><span class="inline">while</span></a>, <a href="do___until.htm"><span class="inline">do... until</span></a>, oraz <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Language_Features.htm">Cechy językowe</a></div>
        <div style="float:right">Następny: <a href="while.htm"><span class="notranslate">while</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
repeat
-->
  <!-- TAGS
repeat
-->
</body>
</html>