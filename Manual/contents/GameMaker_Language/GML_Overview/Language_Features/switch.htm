<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>przełącznik</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the switch function" />
  <meta name="rh-index-keywords" content="switch,case" />
  <meta name="search-keywords" content="switch,default" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>przełącznik</h1>
  <p>W wielu sytuacjach chcemy, aby instancje wykonywały różne czynności w zależności od określonej wartości. Możesz to zrobić, używając kilku następujących po sobie <a href="If_Else_and_Conditional_Operators.htm"><span class="inline">if / else</span></a> ale gdy liczba możliwych wyborów przekracza dwa lub trzy, zwykle łatwiej jest użyć instrukcji <span class="inline">switch</span>.</p>
  <p>Polecenie <span class="inline">switch</span> ma następującą składnię:</p>
  <p class="code">switch (&lt;expression&gt;)<br />
    {<br />
        case &lt;constant1&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
    <br />
        case &lt;constant2&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
        <br />
        // more cases (with breaks)<br />
    <br />
        default:<br />
            &lt;code&gt;;<br />
    }
  </p>
  <p>Działa to w następujący sposób:</p>
  <ul class="colour">
    <li>Najpierw wykonywane jest <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażenie</a>.</li>
    <li>Następnie jej wynik jest porównywany z różnymi stałymi występującymi po każdym z<span class="glossextra">wyrażeń</span> <span class="inline">case</span>. Kiedy mówimy &quot;stała&quot;, mamy na myśli to, że wartość w danym przypadku nie może być zmiennym wyrażeniem, lecz musi być stałą wartością dowolnego <a href="../Data_Types.htm">typu danych</a>, taką jak <span class="inline2">&quot;walka&quot;</span>, <span class="inline2">3</span> lub słowo kluczowe <span class="inline2"><span class="inline"><a href="../Instance_Keywords.htm">noone</a></span></span>. </li>
    <li>Wykonywanie rozpoczyna się od pierwszej instrukcji <span class="inline">case</span> z pasującą wartością, <i>aż do napotkania instrukcji <a href="break.htm"><span class="notranslate">break</span></a> </i>.</li>
    <li>Jeśli żadna z instrukcji <span class="inline">case</span> nie zawiera pasującej wartości, zostanie wykonana instrukcja <span class="inline">default</span>. Nie jest wymagane posiadanie instrukcji <span class="inline">default</span>, a jeśli nie ma żadnej, to nie zostanie podjęta żadna akcja, gdy nie ma pasujących przypadków. Instrukcja <span class="inline">default</span> może być umieszczona w dowolnym miejscu bloku <span class="notranslate">switch</span>, jednak tradycyjnie umieszcza się ją na dole, po wszystkich przypadkach.</li>
  </ul>
  <p class="note"><span class="note">UWAGA</span> Instrukcja <span class="notranslate">switch</span> będzie kontynuować wykonywanie kodu w obrębie <span class="inline">case</span>, dopóki nie zostanie napotkana instrukcja <span class="inline">break</span>. Jeśli nie użyjesz <span class="inline">break</span>s na końcu swoich przypadków, spowoduje to &quot;przeciek&quot; <span class="notranslate">switch</span> do następnej sekcji <span class="inline">case</span>, a nawet do sekcji <span class="inline">default</span>, jeśli na drodze nie ma <span class="inline">break</span>s. Może to powodować niezamierzone zachowania, ponieważ wykonanie jednej strony <span class="inline">case</span> może spowodować wykonanie wielu stron <span class="inline">case</span>, dlatego należy używać strony <span class="inline">break</span> tam, gdzie jest to wskazane.</p>
  <p>Prostym przykładem użycia oświadczenia <span class="notranslate">switch</span> może być coś takiego:</p>
  <p class="code">switch (player_lives)<br />
    {<br />
        case 3:<br />
            draw_sprite(20, 20, spr_face_healthy);<br />
        break;<br />
    <br />
        case 2:<br />
            draw_sprite(20, 20, spr_face_hurt);<br />
        break;<br />
    <br />
        case 1:<br />
            draw_sprite(20, 20, spr_face_fatal);<br />
        break;<br />
    <br />
        default:<br />
            draw_sprite(20, 20, spr_face_fainted);<br />
        break;<br />
    }
  </p>
  <p>Zauważ, że do wykonania tej samej instrukcji można użyć wielu instrukcji <span class="inline">case</span>, ponieważ instrukcja <span class="inline">break</span> nie zawsze jest wymagana dla każdej z nich <span class="inline">case</span>. Jeśli dla danego <span class="inline">case</span> nie ma instrukcji <span class="inline">break</span>, wykonywanie jest po prostu kontynuowane z kodem dla następnego przypadku, np:</p>
  <p class="code">switch (keyboard_key)<br />
    {<br />
        case vk_left:<br />
        case ord(&quot;A&quot;):<br />
            x -= 4;<br />
        break;<br />
    <br />
        case vk_right:<br />
        case ord(&quot;D&quot;):<br />
            x += 4;<br />
        break;<br />
    <br />
        case vk_up:<br />
        case ord(&quot;W&quot;):<br />
            y -= 4;<br />
        break;<br />
    <br />
        case vk_down:<br />
        case ord(&quot;S&quot;):<br />
            y += 4;<br />
        break;<br />
    }
  </p>
  <p>Powyższy kod wykorzystuje stronę <span class="inline">switch</span> do sprawdzenia zdarzenia na klawiaturze, a następnie porównuje je z każdą z wymienionych stron <span class="inline">case</span>. Jeśli spełnia on którąś z wymaganych wartości, wykonywany jest odpowiedni kod. Zwróć uwagę, że strona <span class="inline">switch</span> może sprawdzać wiele stron <span class="inline">cases</span> i wykonywać kod aż do następnej <span class="inline">break</span>, aby umożliwić użycie różnych klawiszy w celu uzyskania tego samego wyniku.</p>
  <p>Każda strona <span class="inline">case</span> może mieć swój własny kod, dzięki czemu można utworzyć system &quot;dziedziczenia&quot;, w którym sprawa wykonuje swój własny kod, a następnie kod dla następnej sprawy.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Language_Features.htm">Cechy językowe</a></div>
        <div style="float:right">Następny: <a href="break.htm"><span class="notranslate">break</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
switch
-->
  <!-- TAGS
switch
-->
</body>
</html>