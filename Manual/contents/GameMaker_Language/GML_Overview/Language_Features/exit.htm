<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>wyjście</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the exit function" />
  <meta name="rh-index-keywords" content="exit" />
  <meta name="search-keywords" content="exit" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>wyjście</h1>
  <p>Polecenie <span class="inline">exit</span> ma następującą składnię:</p>
  <p class="code">exit;</p>
  <p><span class="inline">exit</span> po prostu kończy wykonywanie bieżącej <a href="../Script_Functions.htm">funkcji skryptu</a>, <a href="../Method_Variables.htm"><span class="notranslate">method</span></a>, lub <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm"><span class="notranslate">event</span></a>. Należy pamiętać, że w zależności od zakresu występują tu pewne różnice w użyciu:</p>
  <ul class="colour">
    <li>Jeśli użyjesz <span class="inline">exit</span> w funkcji lub metodzie <span class="notranslate">script</span>, spowoduje to po prostu wyjście z funkcji i powrót do kodu, który wywołał tę funkcję.</li>
    <li>Jeśli użyjesz <span class="inline">exit</span> w bloku kodu wewnątrz zdarzenia obiektu, spowoduje to wyjście z <i>całego zdarzenia</i>, nawet jeśli po wywołaniu <span class="inline">exit</span> będą istniały różne oddzielne bloki kodu.</li>
    <li>Jeśli użyjesz <span class="inline">exit</span> w zdarzeniu nadrzędnym i wywołasz to zdarzenie za pomocą <a href="../../GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a> w zdarzeniu dziecka <span class="notranslate">object</span>, zakończy się tylko zdarzenie rodzica, a zdarzenie dziecka (które wywołało <span class="inline">event_inherited()</span>) będzie kontynuowane.</li>
  </ul>
  <p>W przypadku użycia w zdarzeniu, <span class="inline">exit</span> jest zwykle używany do unikania wykonywania przez instancję dalszego kodu, gdy określony warunek został spełniony (lub nie). Poniższy kod przedstawia przykład użycia tej funkcji, w tym przypadku w zdarzeniu Kolizja, choć można jej użyć w każdym zdarzeniu.</p>
  <p class="code">if (!visible)<br />
    {<br />
        exit;<br />
    }<br />
    <br />
    other.hp -= attack;<br />
    other.coins -= 4;<br />
    coins += 4;
  </p>
  <p>Powyższy kod sprawdza, czy bieżąca instancja nie jest widoczna, w takim przypadku kończy działanie bloku kodu, w przeciwnym razie przechodzi dalej i wykonuje resztę kodu.</p>
  <p class="note"><b>UWAGA</b>: Nie kończy ona wykonywania gry. W tym celu należy użyć funkcji <span style="font-size:1px;"><a href="../../GML_Reference/General_Game_Control/game_end.htm"><span class="inline">game_end()</span></a></span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../Language_Features.htm">Cechy językowe</a></div>
        <div style="float:right">Następny: <a href="with.htm"><span class="notranslate">with</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
exit
-->
  <!-- TAGS
exit
-->
</body>
</html>