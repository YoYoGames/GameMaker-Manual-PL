<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Podstawowa struktura kodu</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the basic code structure when using GML" />
  <meta name="rh-index-keywords" content="Code Structure" />
  <meta name="search-keywords" content="Code Structure,begin,end,statement" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Podstawowa struktura kodu</h1>
  <p>Typowy <em>blok</em> kodu składa się z zestawu instrukcji, zwanych<span class="glossextra">instrukcjami</span>, które są następnie interpretowane przez program <span data-keyref="GameMaker Name">GameMaker</span> i używane do wykonania czegoś w grze. To &quot;coś&quot; może być tak proste, jak dodanie 2 i 2, aby otrzymać 4, lub tak złożone, jak spowodowanie, że wróg ucieknie, gdy jego zdrowie spadnie poniżej pewnej wartości. Struktura programu może być bardzo różna, w zależności od funkcji, z których korzysta, ale w uproszczeniu wygląda to tak:</p>
  <p class="code">&lt;statement&gt;;<br />
    &lt;statement&gt;;<br />
    ...</p>
  <p>Wyrażenia powinny być oddzielone znakiem ';', aby zapobiec błędom w deklaracjach <a class="glossterm" data-glossterm="zmienna" href="#">zmiennych</a> i zachować czystość kodu. Mogą one składać się z deklaracji zmiennych, <a class="glossterm" data-glossterm="wyrażenie" href="#">wyrażeń</a>i wywołań określonych <strong>funkcji</strong>. Można również &quot;grupować&quot; wyrażenia w bloki, używając nawiasów klamrowych <span class="inline">{}</span>, aby działały razem, tak jak w poniższym przykładzie <a class="glossterm" data-glossterm="warunkowe" href="#">warunkowym</a>:</p>
  <p class="code">if (&lt;conditional&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p class="note"><span class="note">UWAGA</span> Strona <span class="notranslate">GameMaker Language</span> przyjmie również adresy <span class="inline">begin</span><span> </span> oraz <span class="inline">end</span><span>  </span> zamiast nawiasów klamrowych <span class="inline">{}</span>, choć nie jest to najczęściej stosowany sposób:</p>
  <p class="code">if (&lt;conditional&gt;)<br />
    begin<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    end</p>
  <p>Oto bardziej wizualne przedstawienie wyglądu bloku kodu, tym razem utworzonego jako <b>skrypt</b> w <a href="../../The_Asset_Editors/Scripts.htm">edytorze</a> skryptów <span data-keyref="GameMaker Name">GameMakera</span>:</p>
  <p><img alt="Program Example" class="center" src="../../assets/Images/Scripting_Reference/GML/Overview/ProgramExample.png" style="cursor: nwse-resize;" /></p>
  <p>Istnieje wiele różnych typów twierdzeń, wyrażeń, wyrażeń warunkowych i funkcji, z których wszystkie zostały szczegółowo omówione w kolejnych częściach podręcznika.</p>
  <p class="note"><span class="note">UWAGA</span> Jeśli nie masz doświadczenia w programowaniu, przed kontynuacją warto zapoznać się z <a href="../../Quick_Start_Guide/Quick_Start_Guide.htm">podręcznikiem Szybki start</a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="GML_Overview.htm">Przegląd GML</a></div>
        <div style="float:right">Następny: <a href="Runtime_Functions.htm">Funkcje w czasie rzeczywistym</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Basic Code Structure
code structure
code block
statements
statement separator
begin
end
-->
  <!-- TAGS
structure
-->
</body>
</html>