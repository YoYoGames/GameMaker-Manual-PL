<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Funkcje skryptu bloku akcji</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article explaining how to make action block script functions" />
  <meta name="rh-index-keywords" content="GML Visual Overview - Action Block Script Functions" />
  <meta name="search-keywords" content="GML Visual Scripts" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Funkcje skryptu bloku akcji</h1>
  <p>Jedną z najważniejszych stron <span class="notranslate">assets</span> w <a href="../../Introduction/The_Asset_Browser.htm">przeglądarce zasobów</a> jest <a href="../../The_Asset_Editors/Scripts.htm">skrypt</a> <span class="notranslate">asset</span>. <span class="notranslate">Scripts</span> to specjalne strony <span class="notranslate">assets</span>, ponieważ są one zasadniczo &quot;kontenerami&quot; dla funkcji zdefiniowanych przez użytkownika i nie są wywoływane bezpośrednio w grze. Wszystkie strony <span class="notranslate">scripts</span> mają zasięg <strong>globalny</strong> i są automatycznie uruchamiane przez stronę <span class="notranslate">GameMaker</span> po uruchomieniu gry, dlatego można ich używać do definiowania zmiennych globalnych i funkcji, które mają być używane w całej grze.</p>
  <p>Do każdej strony <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> można dodać jedną lub więcej funkcji zdefiniowanych przez użytkownika, które są tworzone za pomocą akcji <a href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm">Declare A New Function (Zadeklaruj nową funkcję</a>):</p>
  <p><img>Funkcje, które tu zdefiniujesz, będą miały zasięg globalny i będą działać podobnie jak każda wbudowana akcja <span class="notranslate">GML</span> Visual, tzn. mogą przyjmować różne wartości - lub nie przyjmować ich wcale - zwane<span class="glossextra">argumentami</span> (lub parametrami), a następnie wykonywać zadanie, zwracając wartość lub nie zwracając nic, zależnie od potrzeb. Następnie wywołujesz funkcję w swojej grze za pomocą akcji <a href="../Drag_And_Drop_Reference/Common/Function_Call.htm">Function Call</a> <img>, która wygląda następująco:</p>
  <p><img>Aby utworzyć stronę <span class="notranslate">GML</span> Visual <span class="notranslate">script</span>, wystarczy użyć prawego przycisku myszy <img> w dowolnym miejscu przeglądarki <span class="notranslate">Asset</span> i wybrać opcję <strong>Create </strong>, a następnie <strong>Script</strong>. Spowoduje to utworzenie nowej strony <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> i otwarcie okna edytora:</p>
  <p><img>Nazwę <span class="notranslate">script</span> można nadać, klikając prawym przyciskiem myszy adres <img> w przeglądarce <span class="notranslate">Asset</span> i wybierając opcję <strong>Zmień </strong> nazwę (lub używając powolnego podwójnego kliknięcia lewym przyciskiem myszy <img>), ale należy pamiętać, że nazwa <span class="notranslate">script</span> musi być zgodna z ogólnymi zasadami dla <span class="notranslate">assets</span>, a więc musi zaczynać się od litery i zawierać tylko litery, cyfry lub symbol &quot;_&quot; pod paskiem. Na stronie <span class="notranslate">script</span> zostanie również wstępnie wypełniona akcja <strong>Declare A New Function (Deklaracja nowej</strong> funkcji), którą możesz wypełnić, dodając kolejne deklaracje funkcji w razie potrzeby (jedna strona <span class="notranslate">script</span> może zawierać wiele funkcji, co jest przydatne do grupowania funkcji o podobnym lub powiązanym zastosowaniu).</p>
  <p>Jak wspomniano powyżej, możesz przekazać funkcji wiele argumentów, a ona wykorzysta je do wykonania zadania, do którego została napisana. Aby to lepiej zrozumieć, weźmy na przykład dowolną wbudowaną akcję i zastanówmy się, jak ona działa... umieszczasz ją w zdarzeniu i przekazujesz pewną liczbę wartości, a ona sprawi, że twoja instancja coś zrobi. Funkcje zdefiniowane przez użytkownika działają dokładnie tak samo, a jedyną różnicą jest to, że to <em>Ty </em>je piszesz.</p>
  <p>Podczas definiowania nowej funkcji nadajesz jej nazwę oraz określasz nazwę argumentów, które przyjmuje, jeśli przyjmuje (funkcje mogą nie przyjmować żadnych argumentów lub przyjmować wiele argumentów, w zależności od tego, czego potrzebujesz). Jeśli podasz nazwy argumentów, to zostaną one użyte w akcjach wywoływanych przez funkcję jako <strong>zmienne lokalne </strong>przechowujące wartości wejściowe funkcji.</p>
  <p>Dobrą praktyką jest również dodanie komentarza do akcji, który wyjaśnia, co ona robi, zgodnie z <a href="../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm">zasadami JS Doc</a>. Na przykład rozważmy tę funkcję <span class="inline">set_vec()</span>:</p>
  <p><img>Aby wywołać powyższą stronę <span class="notranslate">script</span>, wystarczy użyć akcji Wywołaj <strong>funkcję</strong>, jak poniżej:</p>
  <p><img>Do funkcji można nie tylko przekazywać argumenty, ale także prosić o zwrócenie wartości (za pomocą akcji <a href="../Drag_And_Drop_Reference/Common/Return.htm">Return</a> <img> ), dzięki czemu można ich używać na przykład do tworzenia metod obliczeniowych lub zwracania identyfikatora instancji po złożonym wykrywaniu kolizji, a także do wielu innych celów. Należy jednak pamiętać, że użycie return kończy działanie <strong>funkcji</strong>, a więc nie zostaną wykonane żadne akcje umieszczone po jej użyciu, co oznacza, że trzeba się dobrze zastanowić nad strukturą funkcji.</p>
  <p>Poniżej znajduje się funkcja <span class="notranslate">GML</span> Visual, która zwraca wartość:</p>
  <p><img alt="Declare A New Function Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Common/a_Common_Declare_Function.png" /></p>
  <p>Powyższa funkcja po prostu sprawdza wszystkie instancje w <span class="notranslate">room</span>, aby zobaczyć, jaki jest ich adres <span class="inline">object_index</span>, i jeśli jedna z nich jest graczem <span class="notranslate">object</span>, funkcja zwróci <span class="inline">true</span> (kończąc wywołanie funkcji) lub <span class="inline">false</span>. Funkcję tę można by wywołać w następujący sposób:</p>
  <p><img>Wywołujemy więc funkcję i każemy jej utworzyć tymczasową (lokalną) zmienną do przechowywania zwróconej wartości (w tym przypadku jest to <span class="inline">true</span> lub <span class="inline">false</span>), a następnie sprawdzamy tę zmienną i podejmujemy odpowiednie działanie.</p>
  <p>Można również uczynić argumenty opcjonalnymi i zdefiniować ich wartość domyślną, dzięki czemu w przypadku niepodania ich w wywołaniu funkcji zostanie użyta wartość domyślna. Więcej informacji na ten temat można znaleźć w <a data-xref="{text}" href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm#h">przykładzie rozszerzonym</a> akcji <a data-xref="{text}" href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm#h">2</a>.</p>
  <p>Tworząc funkcje dla strony <span class="notranslate">GML</span> Visual <span class="notranslate">scripts</span>, możesz używać wszystkich tych samych akcji, co podczas dodawania akcji do zdarzenia <span class="notranslate">object</span>, a nawet możesz wywoływać funkcje z funkcji i w ten sposób tworzyć bardziej &quot;modułowy&quot; kod akcji. Takie budowanie <span class="notranslate">scripts</span> za pomocą funkcji może zaoszczędzić wiele czasu przy tworzeniu tej samej akcji <span class="notranslate">sequences</span>, a także ułatwić czytanie i usuwanie błędów w akcji <span class="notranslate">sequences</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="../../Content.htm">Indeks</a></div>
        <div style="float:right">Następny: <a href="Changing_DnD_To_Code.htm">Zmiana strony <span class="notranslate">GML</span> Visual na Code</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
GML Visual Scripts
-->
  <!-- TAGS
drag_and_drop_scripts
-->
</body>
</html>