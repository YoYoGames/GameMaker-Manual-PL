<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Jeśli kształt kolizji</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the If Collision Shape action" />
  <meta name="rh-index-keywords" content="GML Visual Action - If Collision Shape" />
  <meta name="search-keywords" content="If Collision Shape" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img> Jeśli kształt kolizji</h1>
  <p>Ta akcja służy do sprawdzania, czy w obszarze o określonym kształcie lub wzdłuż linii nie doszło do kolizji z instancją danej strony <span class="notranslate">object</span>. Podajesz kształt (prostokąt, elipsę lub linię), adres <span class="notranslate">object</span>, który ma zostać sprawdzony, a następnie podajesz współrzędne
    górnego lewego i dolnego prawego rogu używanego kształtu lub, w przypadku linii, pozycji początkowej i końcowej. Mogą to być pozycje bezwzględne w grze <span class="notranslate">room</span> lub pozycje względne w stosunku do instancji wykonującej działanie. Możesz zobaczyć, jak
    jak to działa, można zobaczyć na poniższym obrazku:</p>
  <p><img>Jak widać, wyniki będą zależały od maski kolizji sprawdzanej instancji.
    co oznacza, że szukana instancja <span class="notranslate">object</span> <i>musi</i> mieć <span class="notranslate">sprite</span> przypisaną do <span class="inline">sprite_index</span>, lub <span class="notranslate">sprite</span> przypisaną do <span class="inline">mask_index</span>. Jeśli tak nie jest, to nie zostanie wykryta przez te funkcje,
    niezależnie od tego, czy rysuje stronę <span class="notranslate">sprite</span> czy nie. Warto zauważyć, że każda instancja, która całkowicie mieści się w granicach określonych dla kształtu elipsy lub prostokąta, również zwróci kolizję. Działanie zostanie ocenione na <span class="inline">true</span>, jeśli
    zostanie wykryta kolizja, lub <span class="inline">false</span> w przeciwnym razie, choć można również sprawdzić <b>Not</b> <span class="notranslate">flag</span>, aby sprawdzić, czy <i>nie</i> ma kolizji z obszarem o podanym kształcie, a działanie zostanie ocenione jako <span class="inline">true</span> tylko wtedy, gdy <i>nie</i> znaleziono kolizji.
    w przeciwnym razie będzie to <span class="inline">false</span>. Możesz także ustawić opcję <b>Wyklucz siebie</b>, aby wykluczyć instancję wywołującą ze sprawdzania kolizji.</p>
  <p>Następnie można zaznaczyć lub odznaczyć opcję <b>Zwróć listę</b>. Zaznaczenie tej opcji spowoduje, że akcja utworzy i zapełni <a href="../Data_Structures/Data_Structure_Actions.htm">listę</a><span> </span>strukturą danych zawierającą <i>wszystkie instancje</i>kolidujące
    z kształtem i ustawi zmienną <b>Target</b> na identyfikator listy DS. Jeśli nie jest zaznaczone, zmienna <b>Target</b> będzie miała wartość mniejszą od 0 tylko wtedy, gdy nie zostanie wykryta żadna kolizja, lub będzie miała unikatową wartość ID <i>jednej</i> z instancji w kolizji
    (zauważ, że jeśli w kolizji bierze udział wiele instancji, to nie wiadomo, który identyfikator instancji zostanie zwrócony, jeśli nie używa się listy).</p>
  <p>Jeśli wybrano opcję zwracania listy, a zmienna Target <i>nie</i> jest ustawiona na <b>Temp</b>, można również wybrać opcję <b>Free Tar</b> get. Po ustawieniu na <span class="inline">true</span>, lista zawarta w zmiennej docelowej zostanie zniszczona i
    a nowa lista będzie tworzona (i zwracana do zmiennej docelowej) przy każdym wywołaniu akcji. W ten sposób można ponownie używać tej samej zmiennej bez obawy o wycieki pamięci, ponieważ jeśli <i>nie</i> zaznaczymy opcji Free <b>Target</b>, to stajemy się odpowiedzialni
    za zniszczenie listy przed ponownym użyciem zmiennej w akcji. Zauważ, że <i>niezależnie</i> od tego, czy ta opcja jest zaznaczona, czy nie, jeśli akcja została ustawiona na <b>Zwróć</b> listę, to zmienna docelowa <i>zawsze będzie zawierać identyfikator</i> listy,
    i jako taka będzie musiała zostać zwolniona, gdy instancja zostanie zniszczona lub gdy zakończy się działanie <span class="notranslate">room</span> (możesz do tego celu użyć np. zdarzenia <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm"><b>Sprzątanie</b></a> na przykład wraz z akcją <a href="../Data_Structures/Free_Data_Structure.htm">Free Data Structure</a><span> </span>).
    Warto zauważyć, że można ustawić opcję <b>Free Target</b> tak, by używała predefiniowanej zmiennej lub wyrażenia i w ten sposób kontrolować, kiedy struktura danych listy zostanie zwolniona, ustawiając zmienną w innym miejscu (lub mając różne wyniki dla wyrażenia)
    tak długo, jak będzie ono odpowiadać <span class="inline">true</span>/<span class="inline">false</span>.</p>
  <p>Na koniec należy podać zmienną <b>docelową</b>, która ma przechowywać zwróconą wartość lub identyfikator listy. Jeśli <span class="notranslate">flag</span> zmienna docelowa, która ma przechowywać wartość zwracaną, jest zmienną <b>Temp</b> (lokalną), to akcja utworzy tę zmienną, aby przechowywać wartość zwracaną tylko do końca zdarzenia.
    W tym przypadku opcja Free Target nie robi nic, a użytkownik będzie odpowiedzialny za zniszczenie listy DS, jeśli opcja ta została zaznaczona. Jeśli nie podano zmiennej docelowej i zaznaczono opcję <b>Lista</b> zwracana, lista nie zostanie utworzona.</p>
  <p class="note"><b>WAŻNE!</b> Kolizje będą rejestrowane tylko dla tych instancji, które mają poprawną maskę kolizji, tzn. mają <span class="notranslate">sprite</span> przypisaną do <span class="inline">sprite_index</span>, lub <span class="notranslate">sprite</span> przypisaną do <span class="inline">mask_index</span>. Jeśli instancje <span class="notranslate">object</span> sprawdzane w tej akcji nie mają maski kolizji, to nie zostaną wykryte, niezależnie od tego, co w danej chwili rysuje instancja.
    sprawdzane w tej akcji nie mają maski kolizji, to kolizja nie zostanie wykryta, niezależnie od tego, co dana instancja rysuje w danym momencie.</p>
  <p>Należy pamiętać, że aby dodać akcje do bloku &quot;<span class="inline">if</span>&quot;, należy je upuścić z <i>boku</i> akcji, jak pokazano na poniższym rysunku:</p>
  <p><img alt="If Collision Shape Icon" class="icon" height="32" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/i_Collision_Shape.png" width="32" /></p>
  <p> </p>
  <h4>Składnia działania:</h4>
  <p><img alt="Example of different collision shapes" class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/collision_shape_example.png" /></p>
  <h4>Argumenty:</h4>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">Shape</span></td>
        <td>Kształt, którego należy użyć</td>
      </tr>
      <tr>
        <td><span class="notranslate">Object</span></td>
        <td> <span class="notranslate">object</span>, aby sprawdzić, czy nie występują przypadki</td>
      </tr>
      <tr>
        <td><span class="notranslate">x1</span></td>
        <td>Pozycja x, od której należy rozpocząć pracę</td>
      </tr>
      <tr>
        <td><span class="notranslate">y1</span></td>
        <td>Pozycja y, od której ma rozpocząć się praca</td>
      </tr>
      <tr>
        <td><span class="notranslate">x2</span></td>
        <td>Pozycja x, na której ma się zakończyć</td>
      </tr>
      <tr>
        <td><span class="notranslate">y2</span></td>
        <td>Pozycja y, na której ma się zakończyć</td>
      </tr>
      <tr>
        <td><span class="notranslate">Free Target</span></td>
        <td>Może być ustawiona na zmienną lub wyrażenie, albo na <span class="inline">true</span>/<span class="inline">false</span>, aby kontrolować zwalnianie pamięci listy przy ponownym użyciu zmiennej listy</td>
      </tr>
      <tr>
        <td><span class="notranslate">Target</span></td>
        <td>Zmienna, która ma być docelową wartością zwracaną przez akcję</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Przykład:</h4>
  <p><img>Powyższy kod bloku akcji sprawdza, czy nie doszło do kolizji z dowolnymi instancjami <span class="notranslate">object</span> &quot;
   <span class="inline">obj_Enemy</span>&quot; w promieniu 100px wokół pozycji instancji wywołującej. Akcja generuje listę wszystkich instancji, które zostały uznane za kolizyjne, i zapisuje jej identyfikator w zmiennej Target. Jeśli działanie zakończy się wynikiem
    <span class="inline">true</span> to lista jest zapętlana i każdej instancji o ID zapisanym na liście zmniejszana jest zmienna &quot;<span class="inline">hp</span>&quot; o 1. Następnie lista DS jest zwalniana.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Collision_Actions.htm">Działania związane z kolizją</a></div>
        <div style="float:right">Następny: <a href="If_Collision_Point.htm">Jeśli punkt zderzenia</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Action - If Collision Shape
-->
  <!-- TAGS
action_if_collision_shape
-->
</body>
</html>