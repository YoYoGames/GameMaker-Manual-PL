<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Na stronie</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the While action" />
  <meta name="rh-index-keywords" content="GML Visual Action - While" />
  <meta name="search-keywords" content="While" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img> Na stronie</h1>
  <p>Akcja <b>While</b> służy do wykonywania czynności <span class="notranslate">loops</span>, które kończą się dopiero po spełnieniu określonego warunku <span class="inline">true</span>. Na przykład można użyć zmiennej i ustawić ją na <span class="inline">false</span>, a następnie uruchomić akcję While <span class="notranslate">loop</span> i sprawdzić tę zmienną.
    w pewnym momencie na stronie <span class="notranslate">loop</span> ustawisz zmienną na <span class="inline">true</span> i <span class="notranslate">loop</span> zostanie zakończone. Zauważ, że niezależnie od tego, gdzie ustawisz warunek w while <span class="notranslate">loop</span>, <i>wszystkie</i> akcje w <span class="notranslate">loop</span> zostaną wykonane do końca, zanim reszta skryptu
    zmiana warunku nie spowoduje natychmiastowego przerwania działania <span class="notranslate">loop</span>.</p>
  <p>Po dodaniu akcji While do kodu należy podać zmienną, która ma być sprawdzana, rodzaj sprawdzenia (mniejsza niż, większa niż, równa się itd...) oraz wartość, względem której ma być sprawdzana zmienna (można również <span class="notranslate">flag</span>, aby funkcja While
    <span class="notranslate">loop</span> aby sprawdzić, czy warunek <i>nie</i> jest prawdziwy). Następnie dodajemy akcje, które mają być wykonane w ramach While <span class="notranslate">loop</span>, podobnie jak w przypadku dodawania akcji do instrukcji &quot;if&quot;, tzn. umieszczamy ją z boku akcji, a nie pod nią:</p>
  <p><img>Wszystkie akcje dodane do strony zostaną uwzględnione w while i zostaną wykonane, zanim zdarzenie lub skrypt
    będzie kontynuował działania dodane pod nim (jak pokazano na poniższym przykładzie). Zauważ, że możesz zakończyć każdą stronę <span class="notranslate">loop</span> przedwcześnie, jeśli wywołasz akcję <a href="Break.htm">Break</a>.</p>
  <p> </p>
  <h4>Składnia działania:</h4>
  <p><img alt="While Icon" class="icon" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Loops/i_Loops_While.png" /></p>
  <h4>Argumenty:</h4>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Opis</th>
      </tr>
      <tr>
        <td><span class="notranslate">Variable</span></td>
        <td>Zmienna, która ma być użyta w kontroli</td>
      </tr>
      <tr>
        <td><span class="notranslate">Is</span></td>
        <td>Rodzaj oceny do wykonania (mniejsza niż, większa niż, równa, większa lub równa oraz mniejsza lub równa)</td>
      </tr>
      <tr>
        <td><span class="notranslate">Value</span></td>
        <td>Wartość, względem której ma być sprawdzana zmienna</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Przykład:</h4>
  <p><img>Powyższy kod bloku akcji tworzy tymczasową zmienną lokalną i ustawia ją na <span class="inline">false</span>. Zmienna ta jest następnie
    sprawdzana w akcji While <span class="notranslate">loop</span> i jeśli zwróci ona wartość false, uruchomiona zostanie strona <span class="notranslate">loop</span>. Na stronie <span class="notranslate">loop</span> pobieramy dwie tymczasowe zmienne lokalne dla losowej pozycji x/y na stronie <span class="notranslate">room</span>, a następnie sprawdzamy, czy pozycja ta nie koliduje. Jeśli nie zostanie znaleziona kolizja, zmienna początkowa
    zmienna początkowa jest ustawiana na <span class="inline">true</span>, co kończy działanie <span class="notranslate">loop</span>. Po zakończeniu <span class="notranslate">loop</span> tworzona jest nowa instancja w losowej pozycji, w której nie wykryliśmy kolizji.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Powrót: <a href="Loop_Actions.htm">Pętla Działania</a></div>
        <div style="float:right">Następny: <a href="For.htm">Dla</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Wszystkie prawa zastrzeżone.</span></h5>
  </div>
  <!-- KEYWORDS
Action - While
-->
  <!-- TAGS
action_while_loop
-->
</body>
</html>